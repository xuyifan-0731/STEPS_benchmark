{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | voter_1 | area_code_state : area_code , state ( CA ) | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state ( CA ) , contestant_number , created. \\n Question: What is last date created of votes from the state 'CA'? \\n Answer:", "answer": ["select max(created) from votes where state = 'CA'"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus. \\n Question: find the average number of products of all stores. \\n Answer:", "answer": ["select avg(number_products) from shop"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: Also show their template type code. || Only show those with version number later than 5. | What is the version number for all template? \\n Answer:", "answer": ["select version_number, template_type_code from templates where version_number > 5"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline ( JetBlue Airways ) , abbreviation ( JetBlue ) , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport. \\n Question: Which abbreviation corresponds to Jetblue Airways? \\n Answer:", "answer": ["select abbreviation from airlines where airline = \"JetBlue Airways\""], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: Show information for all documents. \\n Answer:", "answer": ["select * from documents"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: Show me the student_id and the grade for all students. \\n Answer:", "answer": ["select id, grade from highschooler"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created. \\n Question: Show all area codes and states. \\n Answer:", "answer": ["select * from area_code_state"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade. \\n Question: Which teachers are age 32? || What are the ages of all the teachers? \\n Answer:", "answer": ["select * from teacher where age = 32"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport. \\n Question: What are all the airlines? \\n Answer:", "answer": ["select distinct airline from airlines"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: How many makes are there for each? || What are the makes for each? | What are all the different models for each car? \\n Answer:", "answer": ["select model, count(*) from car_names group by model;"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code ( CV ) , template_type_description ( CV ) | templates : template_id , version_number , template_type_code ( CV ) , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name ( Robbin CV ) , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: Also show its template id and description. || Show the document id for the one named \"Robbin CV\"? | Show the the document name for all documents. \\n Answer:", "answer": ["select document_id, template_id, document_description from documents where document_name = \"Robbin CV\""], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance. \\n Question: List names of conductors in descending order of years of work. \\n Answer:", "answer": ["select name from conductor order by year_of_work desc"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location ( English Channel ) , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured. \\n Question: Which battle ids and names lost ships in the 'English Channel'? \\n Answer:", "answer": ["select t1.id, t1.name from battle as t1 join ship as t2 on t1.id = t2.lost_in_battle where t2.location = 'English Channel'"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( Africa ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform ( Republic ) , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: What is the average of their life expectancies? || Which countries are also republics? | Which countries are in Africa? \\n Answer:", "answer": ["select avg(lifeexpectancy) from country where continent = \"Africa\" and governmentform = \"Republic\""], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created. \\n Question: How about smallest one? || What is the largest one? | Show all area codes. \\n Answer:", "answer": ["select min(area_code) from area_code_state"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id. \\n Question: Show the capacity for all stadiums. \\n Answer:", "answer": ["select capacity from stadium"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: Also show the document ids using each template. || Show all template type codes. \\n Answer:", "answer": ["select t1.template_type_code, t2.document_id from templates as t1 join documents as t2 on t1.template_id = t2.template_id"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: For each of these document ids, count the number of paragraphs. || Show the document id for all paragraphs. \\n Answer:", "answer": ["select document_id, count(*) from paragraphs group by document_id"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: More than 10? || Which ones have more than 20 matches? | How many distinct tourney names are there? \\n Answer:", "answer": ["select tourney_name from matches group by tourney_name having count(*) > 10"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id. \\n Question: Also list the location for them. || What about those with a capacity between 5000 and 10000? | Show the name for all stadiums. \\n Answer:", "answer": ["select location, name from stadium where capacity between 5000 and 10000"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: Show the dog name and total cost of each dog. \\n Answer:", "answer": ["select name, sum(cost_of_treatment) from treatments as t1 join dogs as t2 on t1.dog_id = t2.dog_id group by t1.dog_id"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport. \\n Question: Which one has the fewest? || Order them by the number of flights that they have. | What are all the airline abbreviations and what countries are they in? \\n Answer:", "answer": ["select t1.abbreviation, t1.country from airlines as t1 join flights as t2 on t1.uid = t2.airline group by t1.airline order by count(*) limit 1"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id. \\n Question: How many of those students have not registered in any degree program? || How many students currently live in North Carolina? \\n Answer:", "answer": ["select count(*) from students as t1 join addresses as t2 on t1.current_address_id = t2.address_id where t2.state_province_county = 'NorthCarolina' except select distinct t3.last_name from students as t3 join student_enrolment as t4 on t3.student_id = t4.student_id"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title ( Return of the Fearsome Fangs! ) , directed_by , written_by , original_air_date , production_code , channel. \\n Question: Who is the director of the cartoon titled \"Return of the Fearsome Fangs!\"? \\n Answer:", "answer": ["select directed_by from cartoon where title = \"Return of the fearsome fangs!\""], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode ( CVO , APG ) , airportname , country , countryabbrev | flights : airline , flightno , sourceairport (  APG ,  CVO ) , destairport (  APG ,  CVO ). \\n Question: Which airlines have departing flights from both APG and CVO airports? \\n Answer:", "answer": ["select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = \"APG\" intersect select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = \"CVO\""], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: How many models does each car maker produce? List maker full name, id and the number. \\n Answer:", "answer": ["select t1.fullname, t1.id, count(*) from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id;"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance. \\n Question: List the information of all record companies. \\n Answer:", "answer": ["select record_company from orchestra"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id. \\n Question: How about countries with both? || How about those for singers below 30? | How about those for singers above age 40? | Show the country for all singers. \\n Answer:", "answer": ["select country from singer where age > 40 intersect select country from singer where age < 30"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: Filter out duplicates. || Show all template type codes for all templates. \\n Answer:", "answer": ["select distinct template_type_code from templates"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: Show the one with the maximum horsepower. || How about 3? | Show those with 8 cylinders! | What is the horsepower, make for each car! \\n Answer:", "answer": ["select t2.horsepower, t1.make from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.cylinders = 3 order by t2.horsepower desc limit 1;"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city ( Anthony  ) , airportcode , airportname ( Anthony  ) , country , countryabbrev | flights : airline , flightno , sourceairport , destairport. \\n Question: Give the airport code and airport name corresonding to the city Anthony. \\n Answer:", "answer": ["select airportcode, airportname from airports where city = \"Anthony\""], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: Give the name of the 3 oldest losers across all matches. \\n Answer:", "answer": ["select distinct loser_name from matches order by loser_age desc limit 3"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: Which one is spoken in the most countries? || What are the different languages? \\n Answer:", "answer": ["select language from countrylanguage group by language order by count(*) desc limit 1"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: How about the highest? || What is the lowest accelerate for any car? \\n Answer:", "answer": ["select accelerate from cars_data order by accelerate desc limit 1;"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight. \\n Question: What is every student's id? \\n Answer:", "answer": ["select stuid from student"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus. \\n Question: show all hiring info. \\n Answer:", "answer": ["select * from hiring"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city ( Aberdeen  , Ashley  ) , airportcode , airportname ( Ashley  ) , country , countryabbrev | flights : airline , flightno , sourceairport , destairport. \\n Question: Of those, which land in Ashley? || What are all the flights that leave from Aberdeen? \\n Answer:", "answer": ["select * from flights as t1 join airports as t2 on t1.destairport = t2.airportcode join airports as t3 on t1.sourceairport = t3.airportcode where t2.city = \"Ashley\" and t3.city = \"Aberdeen\""], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name ( Bachelor , Master ) , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id. \\n Question: Find a semester that both types of students were enrolled in. || How about a semester when there was a Bachelor student enrolled? | Find a semester when there was a Master student enrolled. \\n Answer:", "answer": ["select distinct t2.semester_id from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id where degree_summary_name = 'Master' intersect select distinct t2.semester_id from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id where degree_summary_name = 'Bachelor'"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height. \\n Question: How many poker players are there? \\n Answer:", "answer": ["select count(*) from poker_player"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created. \\n Question: Show all the contestants. \\n Answer:", "answer": ["select * from contestants"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance. \\n Question: Which of them are shared by orchestras founded before 2003? || Please list the record companies. \\n Answer:", "answer": ["select record_company from orchestra where year_of_founded < 2003"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight. \\n Question: What are the different pet types? \\n Answer:", "answer": ["select distinct pettype from pets"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height. \\n Question: Show the nationality of each person. \\n Answer:", "answer": ["select nationality from people"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel. \\n Question: Which country has the most of TV Channels? List the country and number of TV Channels it has. \\n Answer:", "answer": ["select country, count(*) from tv_channel group by country order by count(*) desc limit 1;"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( Africa ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: What is the smallest population of a country in Africa? \\n Answer:", "answer": ["select min(population) from country where continent = \"Africa\""], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname ( General Motors ) , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: How many different models has maker with full name General Motors produced? \\n Answer:", "answer": ["select count(distinct t2.model) from car_names as t1 join model_list as t2 on t1.model = t2.model join car_makers as t3 on t2.maker = t3.id where t3.fullname = 'General Motors';"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: Which ones have at least one? || Which ones have no car makers? | What are all the different country names? \\n Answer:", "answer": ["select t1.countryname from countries as t1 join car_makers as t2 on t1.countryid = t2.country group by t1.countryid having count(*) >= 1;"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city ( Abilene  , Aberdeen  ) , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport. \\n Question: How many are there? || Also include flights that land in Abilene. | What flights land in Aberdeen? \\n Answer:", "answer": ["select count(*) from flights as t1 join airports as t2 on t1.destairport = t2.airportcode where t2.city = \"Aberdeen\" or t2.city = \"Abilene\""], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: Show me just their ids! || Now only show those who are liked by someone else! | Also show, for each, the ids of the people they like? | Show me the ids of all highschoolers who have friends? \\n Answer:", "answer": ["select student_id from friend intersect select liked_id from likes"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: Also show, for each, the ids of the people they like? || Show me the ids of all highschoolers who have friends? \\n Answer:", "answer": ["select distinct t1.student_id, t2.liked_id from friend as t1 join likes as t2 on t1.student_id = t2.student_id"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight. \\n Question: Which of the students have pets? \\n Answer:", "answer": ["select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline ( United Airlines ) , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport. \\n Question: What are the United Airlines flights? \\n Answer:", "answer": ["select * from airlines where airline = \"United Airlines\""], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: Show the template id for all templates. \\n Answer:", "answer": ["select template_id from templates"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code ( CV ) , template_type_description ( CV ) | templates : template_id , version_number , template_type_code ( CV ) , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name ( Robbin CV ) , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: Show the document id for the one named \"Robbin CV\"? || Show the the document name for all documents. \\n Answer:", "answer": ["select document_id from documents where document_name = \"Robbin CV\""], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city ( Aberdeen  , Ashley  ) , airportcode , airportname ( Ashley  ) , country , countryabbrev | flights : airline , flightno , sourceairport , destairport. \\n Question: How many flights fly from Aberdeen to Ashley? \\n Answer:", "answer": ["select count(*) from flights as t1 join airports as t2 on t1.destairport = t2.airportcode join airports as t3 on t1.sourceairport = t3.airportcode where t2.city = \"Ashley\" and t3.city = \"Aberdeen\""], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | museum_visit | museum : museum_id , name , num_of_staff , open_year | visitor : id , name , level_of_membership , age | visit : museum_id , visitor_id , num_of_ticket , total_spent. \\n Question: find the id of the visitor who bought the most tickets at once. || how many tickets were sold from all of the museums? \\n Answer:", "answer": ["select visitor_id from visit order by num_of_ticket desc limit 1"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: What is the lowest accelerate for any car? \\n Answer:", "answer": ["select accelerate from cars_data order by accelerate asc limit 1;"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height. \\n Question: Count the number of people for each nationality. || Show the nationality of each person. \\n Answer:", "answer": ["select count(*) from people group by nationality"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height. \\n Question: What are different nationalities of people and the corresponding number of people from each nation? \\n Answer:", "answer": ["select nationality, count(*) from people group by nationality"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name ( Anguilla ) , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname ( Anguilla ) , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: What is the continent name which Anguilla belongs to? \\n Answer:", "answer": ["select continent from country where name = \"Anguilla\""], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code ( AD ) , template_type_description | templates : template_id , version_number , template_type_code ( AD ) , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: What is the template type descriptions for template type code \"AD\". \\n Answer:", "answer": ["select template_type_description from ref_template_types where template_type_code = \"AD\""], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height. \\n Question: List the names of poker players ordered by the final tables made in ascending order. \\n Answer:", "answer": ["select t1.name from people as t1 join poker_player as t2 on t1.people_id = t2.people_id order by t2.final_table_made"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: How many are there? || What are the car ids of the cars with a greater accelerate than this? | What is the accelerate of the car with this horsepower? | What is largest horsepower of all cars? \\n Answer:", "answer": ["select count(*) from cars_data where accelerate > ( select accelerate from cars_data order by horsepower desc limit 1 );"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode ( APG ) , airportname , country , countryabbrev | flights : airline , flightno , sourceairport (  APG ) , destairport (  APG ). \\n Question: Give the flight numbers of flights leaving from APG. \\n Answer:", "answer": ["select flightno from flights where sourceairport = \"APG\""], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: What is the horsepower of the car with the largest accelerate? \\n Answer:", "answer": ["select t1.horsepower from cars_data as t1 order by t1.accelerate desc limit 1;"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id. \\n Question: What is the name and capacity for the stadium with highest average attendance? \\n Answer:", "answer": ["select name, capacity from stadium order by average desc limit 1"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height. \\n Question: What are their names? || Show all the poker players. \\n Answer:", "answer": ["select t1.name from people as t1 join poker_player as t2 on t1.people_id = t2.people_id"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight. \\n Question: Of those, who has a pet? || Who are the female students? \\n Answer:", "answer": ["select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.sex = 'F'"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: What are the last names of the oldest dogs? || Which one is the oldest dog? List the information of it. \\n Answer:", "answer": ["select t1.last_name from owners as t1 join dogs as t2 on t1.owner_id = t2.owner_id where t2.age = ( select max(age) from dogs )"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | museum_visit | museum : museum_id , name , num_of_staff , open_year | visitor : id , name , level_of_membership , age | visit : museum_id , visitor_id , num_of_ticket , total_spent. \\n Question: Find the number of visitors who did not visit any museum opened after 2010. \\n Answer:", "answer": ["select count(*) from visitor where id not in (select t2.visitor_id from museum as t1 join visit as t2 on t1.museum_id = t2.museum_id where t1.open_year > 2010)"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: Show ids of all students who do not have any friends. \\n Answer:", "answer": ["select id from highschooler except select student_id from friend"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: What is the id and type code for the template used by the most documents? \\n Answer:", "answer": ["select t1.template_id, t2.template_type_code from documents as t1 join templates as t2 on t1.template_id = t2.template_id group by t1.template_id order by count(*) desc limit 1"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: How many of them cost over 700? || Show the dog name and total cost of each dog. \\n Answer:", "answer": ["select count(name) from treatments as t1 join dogs as t2 on t1.dog_id = t2.dog_id group by t1.dog_id having sum(cost_of_treatment) > 700"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | pets_1 | student : stuid , lname ( Smith ) , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight. \\n Question: Of those, whose last name is smith? || Which students have pets? \\n Answer:", "answer": ["select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.lname = 'Smith'"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: Show template ids, version numbers, and template type codes for all templates. \\n Answer:", "answer": ["select template_id, version_number, template_type_code from templates"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | museum_visit | museum : museum_id , name , num_of_staff , open_year | visitor : id , name , level_of_membership , age | visit : museum_id , visitor_id , num_of_ticket , total_spent. \\n Question: Find the id and name of the museum that has the most staff members? \\n Answer:", "answer": ["select museum_id, name from museum order by num_of_staff desc limit 1"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district ( Gelderland ) , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: What are the populations of each city in the district of Gelderland? \\n Answer:", "answer": ["select population from city where district = \"Gelderland\""], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight. \\n Question: Who is the youngest pet? \\n Answer:", "answer": ["select * from pets order by pet_age limit 1"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city ( Aberdeen  ) , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport. \\n Question: Which land in Aberdeen? || Of these, which are arrival flights? | What are all the flight numbers? \\n Answer:", "answer": ["select t1.flightno from flights as t1 join airports as t2 on t1.destairport = t2.airportcode where t2.city = \"Aberdeen\""], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport. \\n Question: Name all cities that have destination airports. \\n Answer:", "answer": ["select t1.city from airports as t1 join flights as t2 on t1.airportcode = t2.destairport"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: Find the name and rank points of the winner who won the most times. \\n Answer:", "answer": ["select winner_name, winner_rank_points from matches group by winner_name order by count(*) desc limit 1"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | car_1 | continents : contid , continent ( europe ) | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: Show just those from countries in the continent Europe. || Count how many there are per country name? | Show all the car makers and their country name? \\n Answer:", "answer": ["select t1.countryname, count(*) from countries as t1 join continents as t2 on t1.continent = t2.contid join car_makers as t3 on t1.countryid = t3.country where t2.continent = 'europe' group by t1.countryname;"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created. \\n Question: How many contestants did not get voted? \\n Answer:", "answer": ["select count(*) from contestants where contestant_number not in ( select contestant_number from votes )"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight. \\n Question: How many pets have a greater weight than 10? \\n Answer:", "answer": ["select count(*) from pets where weight > 10"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state ( Vermont ) , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: List the first name, last name and email of the owners who lives in the states that has the substring 'North'. || How many of them are from 'Vermont'? | Show the states of the owners. \\n Answer:", "answer": ["select first_name, last_name, email_address from owners where state like '%north%'"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: What is the number of distinct languages used around the world? \\n Answer:", "answer": ["select count(distinct language) from countrylanguage"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city ( Aberdeen  ) , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport. \\n Question: What flights land in Aberdeen? \\n Answer:", "answer": ["select * from flights as t1 join airports as t2 on t1.destairport = t2.airportcode where t2.city = \"Aberdeen\""], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: For each of them, show the number of documents. || Show the template id for all documents. \\n Answer:", "answer": ["select template_id, count(*) from documents group by template_id"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport. \\n Question: What are all the flight numbers? \\n Answer:", "answer": ["select flightno from flights"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker ( amc ) , fullname , country | model_list : modelid , maker , model ( amc ) | car_names : makeid , model ( amc ) , make ( amc hornet ) | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: How about its accelerate? || How about its MPG? | What is its horsepower? | Show all the car ids with the make amc hornet sporabout (sw)? \\n Answer:", "answer": ["select t1.accelerate from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t2.make = 'amc hornet sportabout (sw)';"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: What is the name of the high schooler who has the greatest number of friends? \\n Answer:", "answer": ["select t2.name from friend as t1 join highschooler as t2 on t1.student_id = t2.id group by t1.student_id order by count(*) desc limit 1"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight. \\n Question: What information is there on pets? \\n Answer:", "answer": ["select * from pets"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight. \\n Question: Which students do not own any pets? \\n Answer:", "answer": ["select * from student where stuid not in (select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid)"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created. \\n Question: Also provide vote ids. || Show all info about votes. \\n Answer:", "answer": ["select vote_id, state from votes"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode ( APG ) , airportname , country , countryabbrev | flights : airline , flightno , sourceairport (  APG ) , destairport (  APG ). \\n Question: Give the flight numbers of flights landing at APG. \\n Answer:", "answer": ["select flightno from flights where destairport = \"APG\""], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus. \\n Question: what are its manager name and district? || find the name of the shop with the greatest number of products. | what is the total number of products they are selling? | show all shops. \\n Answer:", "answer": ["select manager_name, district from shop order by number_products desc limit 1"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: Which of the countries has the most car makers? List the country name. \\n Answer:", "answer": ["select t2.countryname from car_makers as t1 join countries as t2 on t1.country = t2.countryid group by t1.country order by count(*) desc limit 1;"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: Give the length of the match in minutes of the shortest match. \\n Answer:", "answer": ["select minutes from matches order by minutes asc limit 1"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance. \\n Question: Please list the record companies of orchestras in descending order of years in which they were founded. || When were they founded? | List the information of record companies. \\n Answer:", "answer": ["select record_company from orchestra order by year_of_founded desc"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | pets_1 | student : stuid , lname ( Smith ) , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight. \\n Question: What is their pet's id? || Of those, whose last name is smith? | Which students have pets? \\n Answer:", "answer": ["select t2.petid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.lname = 'Smith'"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | network_1 | highschooler : id , name ( Kyle ) , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: Is there a highschooler named Kyle? \\n Answer:", "answer": ["select * from highschooler where name = \"Kyle\""], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: Show the number of dogs for each owner, keep the owner id. \\n Answer:", "answer": ["select t1.owner_id ,count(*) from dogs as t1 join owners as t2 on t1.owner_id = t2.owner_id group by t1.owner_id"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance. \\n Question: Show the names of conductors and the orchestras they have conducted. \\n Answer:", "answer": ["select t1.name, t2.orchestra from conductor as t1 join orchestra as t2 on t1.conductor_id = t2.conductor_id"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height. \\n Question: Sort them in the decreasing order. || What is the money rank of each poker player? \\n Answer:", "answer": ["select money_rank from poker_player order by earnings desc"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | museum_visit | museum : museum_id , name , num_of_staff , open_year | visitor : id , name , level_of_membership , age | visit : museum_id , visitor_id , num_of_ticket , total_spent. \\n Question: What is the name of the visitor who visited both groups of museums? || what about those opened after 2011? | find the names of museums opened before 2009. \\n Answer:", "answer": ["select t1.name from visitor as t1 join visit as t2 on t1.id = t2.visitor_id join museum as t3 on t3.museum_id = t2.museum_id where t3.open_year < 2009 intersect select t1.name from visitor as t1 join visit as t2 on t1.id = t2.visitor_id join museum as t3 on t3.museum_id = t2.museum_id where t3.open_year > 2011"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: How many dogs have not gone through any treatment? \\n Answer:", "answer": ["select count(*) from dogs where dog_id not in ( select dog_id from treatments )"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade. \\n Question: Find all the course arrangements. \\n Answer:", "answer": ["select * from course_arrange"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: how about 0? || how about at least 1? | Which ones have at least 5 friends? | What are the names of all the highshcool students? \\n Answer:", "answer": ["select name from highschooler except select t2.name from friend as t1 join highschooler as t2 on t1.student_id = t2.id"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport. \\n Question: How many are there? || What are all the flights? \\n Answer:", "answer": ["select count(*) from flights"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: Only show those with version number later than 5. || What is the version number for all template? \\n Answer:", "answer": ["select version_number from templates where version_number > 5"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: Find tours and first name instead. || Find the birth dates of each of the players. \\n Answer:", "answer": ["select t2.tours, t1.first_name from players as t1 join rankings as t2 on t1.player_id = t2.player_id group by t1.first_name"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: Show all document names. \\n Answer:", "answer": ["select document_name from documents"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: Also show their document names and document descriptions. || Show their ids. | Show information for all documents. \\n Answer:", "answer": ["select document_id, document_name, document_description from documents"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: How many friends do each of them have? || Show me all the high school student ids. \\n Answer:", "answer": ["select student_id, count(*) from friend group by student_id"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight. \\n Question: What is the average age for all students who do not own any pets? \\n Answer:", "answer": ["select avg(age) from student where stuid not in (select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid)"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: What is the accelerate of the car with this horsepower? || What is largest horsepower of all cars? \\n Answer:", "answer": ["select accelerate from cars_data order by horsepower desc limit 1"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade. \\n Question: What are their names? || Which teachers are age 32 or 33? | Which teachers are age 32? | What are the ages of all the teachers? \\n Answer:", "answer": ["select name from teacher where age = 32 or age = 33"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created. \\n Question: Can you also show contestant numbers? || What are their names? | Show all info about contestants. \\n Answer:", "answer": ["select contestant_number, contestant_name from contestants"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: How many dogs have an age below the average? \\n Answer:", "answer": ["select count(*) from dogs where age < ( select avg(age) from dogs )"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline ( JetBlue Airways ) , abbreviation ( JetBlue ) , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport. \\n Question: Give the number of Jetblue Airways flights. \\n Answer:", "answer": ["select count(*) from flights as t1 join airlines as t2 on t1.airline = t2.uid where t2.airline = \"JetBlue Airways\""], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: List just the full name and id! || How about more than 3? | Which ones have designed more than 1? | What is all the information for the makers that have designed at least 1 car model! \\n Answer:", "answer": ["select t1.fullname, t1.id from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id having count(*) > 3;"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | museum_visit | museum : museum_id , name , num_of_staff , open_year | visitor : id , name , level_of_membership , age | visit : museum_id , visitor_id , num_of_ticket , total_spent. \\n Question: What are the id and name of the museum visited most times? \\n Answer:", "answer": ["select t2.museum_id, t1.name from museum as t1 join visit as t2 on t1.museum_id = t2.museum_id group by t2.museum_id order by count(*) desc limit 1"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: What are the names of all the cities? \\n Answer:", "answer": ["select name from city"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: What continent does each country belong to? \\n Answer:", "answer": ["select continent from country"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: Give the names of the nations that were founded after 1950. \\n Answer:", "answer": ["select name from country where indepyear > 1950"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country ( USA ) | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport. \\n Question: Return the number of airlines in the USA. \\n Answer:", "answer": ["select count(*) from airlines where country = \"USA\""], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | museum_visit | museum : museum_id , name , num_of_staff , open_year | visitor : id , name , level_of_membership , age | visit : museum_id , visitor_id , num_of_ticket , total_spent. \\n Question: how about the average and maximum number of tickets purchased? || what was the amount of the largest one time purchase of tickets out of all visits? | find the total cost of all visits. \\n Answer:", "answer": ["select avg(num_of_ticket), max(num_of_ticket) from visit"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id. \\n Question: Show me the name of program with the most enrolled students. || Show me the descriptions of programs with 3 highest number of enrolled students. \\n Answer:", "answer": ["select t1.degree_summary_name from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id group by t1.degree_summary_name order by count(*) desc limit 1"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight. \\n Question: Order the pets by age \\n Answer:", "answer": ["select * from pets order by pet_age"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | museum_visit | museum : museum_id , name , num_of_staff , open_year | visitor : id , name , level_of_membership , age | visit : museum_id , visitor_id , num_of_ticket , total_spent. \\n Question: Find the name and age of this visitor. || find the id of the visitor who bought the most tickets at once. | how many tickets were sold from all of the museums? \\n Answer:", "answer": ["select t1.name, t1.age from visitor as t1 join visit as t2 on t1.id = t2.visitor_id order by t2.num_of_ticket desc limit 1"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: What about those who did not? || Among those, how many of them have been sent to receive treatment? | What about the dogs? | Show all the owner information. \\n Answer:", "answer": ["select count(*) from dogs where dog_id not in ( select dog_id from treatments )"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: Give the language that is spoken in the most countries. \\n Answer:", "answer": ["select language from countrylanguage group by language order by count(*) desc limit 1"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus. \\n Question: Find the number of employees hired in each shop; show the shop name as well. \\n Answer:", "answer": ["select count(*), t2.name from hiring as t1 join shop as t2 on t1.shop_id = t2.shop_id group by t2.name"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: What are all the nations? \\n Answer:", "answer": ["select * from country"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: Show me the names of only those who are in a grade higher than 5! || What grades are they each in? | How about those have at least 2 friends? | What are the names of the students who have some friends? \\n Answer:", "answer": ["select t2.name from friend as t1 join highschooler as t2 on t1.student_id = t2.id where t2.grade > 5 group by t1.student_id having count(*) >= 2"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id. \\n Question: Show the names of all songs. \\n Answer:", "answer": ["select song_name from singer"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height. \\n Question: Show all the poker players. \\n Answer:", "answer": ["select * from poker_player"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: Which are the car makers which produce at least 2 models and more than 3 car makes? List the id and the maker. \\n Answer:", "answer": ["select t1.id, t1.maker from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id having count(*) >= 2 intersect select t1.id, t1.maker from car_makers as t1 join model_list as t2 on t1.id = t2.maker join car_names as t3 on t2.model = t3.model group by t1.id having count(*) > 3;"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance. \\n Question: List the names of orchestras that have no performance. \\n Answer:", "answer": ["select orchestra from orchestra where orchestra_id not in (select orchestra_id from performance)"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: How many paragraphs in total? \\n Answer:", "answer": ["select count(*) from paragraphs"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name ( Ward ) , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id. \\n Question: What's his phone number? || What is the address of the student with first name Timothy and last name Ward? \\n Answer:", "answer": ["select cell_mobile_number from students where first_name = 'Timmothy' and last_name = 'Ward'"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: Which ones have at least 1? || How many friends do each of them have? | Show me all the high school student ids. \\n Answer:", "answer": ["select student_id from friend"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: Which of them are not used by any document? || Show all template ids. | Show template ids used by some document. \\n Answer:", "answer": ["select template_id from templates except select template_id from documents"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: Return the names of the 3 countries with the fewest people. \\n Answer:", "answer": ["select name from country order by population asc limit 3"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height. \\n Question: Who has the largest height? || What is the height of each poker player? \\n Answer:", "answer": ["select * from people as t1 join poker_player as t2 on t1.people_id = t2.people_id order by t1.height desc limit 1"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language ( English ) , isofficial , percentage. \\n Question: What are the countries that speak English? \\n Answer:", "answer": ["select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"English\""], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode ( AHD ) , airportname , country , countryabbrev | flights : airline , flightno , sourceairport (  AHD ) , destairport (  AHD ). \\n Question: Which airlines have a flight with source airport AHD? \\n Answer:", "answer": ["select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = \"AHD\""], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport. \\n Question: Of these, which are arrival flights? || What are all the flight numbers? \\n Answer:", "answer": ["select t1.flightno from flights as t1 join airports as t2 on t1.destairport = t2.airportcode"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | car_1 | continents : contid , continent ( europe ) | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: Which countries in europe have at least 3 car manufacturers? \\n Answer:", "answer": ["select t1.countryname from countries as t1 join continents as t2 on t1.continent = t2.contid join car_makers as t3 on t1.countryid = t3.country where t2.continent = 'europe' group by t1.countryname having count(*) >= 3;"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | museum_visit | museum : museum_id , name , num_of_staff , open_year | visitor : id , name , level_of_membership , age | visit : museum_id , visitor_id , num_of_ticket , total_spent. \\n Question: which of them visited some museums more than once? || find the names of visitors who visited and who have some museum visit records. \\n Answer:", "answer": ["select t1.name from visitor as t1 join visit as t2 on t1.id = t2.visitor_id group by t1.id having count(*) > 1"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: Also show their template id and template type code. || Show the document ids. \\n Answer:", "answer": ["select t1.document_id, t2.template_id, t2.template_type_code from documents as t1 join templates as t2 on t1.template_id = t2.template_id"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id. \\n Question: Show all countries and the number of singers in each country. \\n Answer:", "answer": ["select country, count(*) from singer group by country"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade. \\n Question: What is the hometown of the youngest teacher? \\n Answer:", "answer": ["select hometown from teacher order by age asc limit 1"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: How many treatment does each professional finished? \\n Answer:", "answer": ["select t1.professional_id, count(*) from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: Find the average age of losers and winners of all matches. \\n Answer:", "answer": ["select avg(loser_age), avg(winner_age) from matches"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: Also provide the country id! || Which ones have at least one? | Which ones have no car makers? | What are all the different country names? \\n Answer:", "answer": ["select t1.countryname, t1.countryid from countries as t1 join car_makers as t2 on t1.countryid = t2.country group by t1.countryid having count(*) >= 1;"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | museum_visit | museum : museum_id , name , num_of_staff , open_year | visitor : id , name , level_of_membership , age | visit : museum_id , visitor_id , num_of_ticket , total_spent. \\n Question: find the id, name and age for visitors who visited some museums more than once. \\n Answer:", "answer": ["select t1.id, t1.name, t1.age from visitor as t1 join visit as t2 on t1.id = t2.visitor_id group by t1.id having count(*) > 1"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id. \\n Question: Show the name and location for the stadiums. \\n Answer:", "answer": ["select name, location from stadium"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language ( English , Dutch ) , isofficial , percentage. \\n Question: Which countries have either English or Dutch as an official language? \\n Answer:", "answer": ["select * from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"English\" and isofficial = \"T\" union select * from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"Dutch\" and isofficial = \"T\""], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( Asia ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: What is the language that is used by the largest number of Asian nations? \\n Answer:", "answer": ["select t2.language from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.continent = \"Asia\" group by t2.language order by count (*) desc limit 1"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: Which of them has the most? || Order the template type codes in descending order by this number. | For each, how many documents are using this template? | Show the type codes for all templates. \\n Answer:", "answer": ["select t1.template_type_code from templates as t1 join documents as t2 on t1.template_id = t2.template_id group by t1.template_type_code order by count(*) desc limit 1"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: What is the smallest weight? || List just those with 8 cylinders! | Now, show me just the weight and cylinders of these cars. | What is all the car information for cars produced in 1974? \\n Answer:", "answer": ["select weight from cars_data where cylinders = 8 and year = 1974 order by weight asc limit 1;"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: How many in grade 9 or 10? || How many in each grade 11 or 12? | How many high schoolers are there? \\n Answer:", "answer": ["select count(*) from highschooler where grade = 9 or grade = 10"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: How about more than 2? || How many of these have more than 1 car maker? | Show me all the names of all the different countries outside of those! | What are the names of the countries that have no car makers? \\n Answer:", "answer": ["select count(*) from ( select t1.countryid, count(*) from countries as t1 join car_makers as t2 on t1.countryid = t2.country group by t1.countryid having count(*) > 2 );"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: Show also all the car makes and the years that they were produced! || What are all the different car models? \\n Answer:", "answer": ["select t1.model, t2.make, t3.year from model_list as t1 join car_names as t2 on t1.model = t2.model join cars_data as t3 on t2.makeid = t3.id;"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name , last_name ( Date ) , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: What is the birth date of the oldest player? \\n Answer:", "answer": ["select birth_date from players order by birth_date desc limit 1"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport. \\n Question: Return the number of  airports. \\n Answer:", "answer": ["select count(*) from airports"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id. \\n Question: What is the average and the maximum capacity of all stadiums? \\n Answer:", "answer": ["select avg(capacity), max(capacity) from stadium"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | museum_visit | museum : museum_id , name , num_of_staff , open_year | visitor : id , name , level_of_membership , age | visit : museum_id , visitor_id , num_of_ticket , total_spent. \\n Question: find the name of the visitor who has spent the most money for his or her visits. || what is the total spent on all visits? \\n Answer:", "answer": ["select t1.name from visitor as t1 join visit as t2 on t1.id = t2.visitor_id group by t2.visitor_id order by sum(t2.total_spent) desc limit 1"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade. \\n Question: Show the hometowns shared by at least two teachers. \\n Answer:", "answer": ["select hometown from teacher group by hometown having count(*) >= 2"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created. \\n Question: What are the maximum and minimum values of area codes? \\n Answer:", "answer": ["select max(area_code), min(area_code) from area_code_state"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: What are all the different regions? \\n Answer:", "answer": ["select distinct region from country"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city ( Aberdeen  ) , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport. \\n Question: Give the flight numbers of flights leaving from Aberdeen. \\n Answer:", "answer": ["select t1.flightno from flights as t1 join airports as t2 on t1.sourceairport = t2.airportcode where t2.city = \"Aberdeen\""], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height. \\n Question: Which poker players have earnings higher than 300000? \\n Answer:", "answer": ["select * from poker_player where earnings > 300000"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id. \\n Question: Show age for all singers. \\n Answer:", "answer": ["select age from singer"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance. \\n Question: Which of them have had no performances? || List the names of orchestras. \\n Answer:", "answer": ["select orchestra from orchestra where orchestra_id not in (select orchestra_id from performance)"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: Show all models and horsepowers of all cars! \\n Answer:", "answer": ["select t1.model, t2.horsepower from car_names as t1 join cars_data as t2 on t1.makeid = t2.id;"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title ( Day of the Dark Knight! ) , directed_by , written_by , original_air_date , production_code , channel. \\n Question: Tell me﻿ the director of the cartoon named \"Day of the Dark Knight!\". \\n Answer:", "answer": ["select directed_by from cartoon where title = \"Day of the dark knight!\""], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title ( The Eyes of Despero! ) , directed_by , written_by , original_air_date , production_code , channel. \\n Question: Tell me the number of different series names and contents in the TV Channel table. || How about this channel's series name? | Tell me the TV Channel of the cartoon titled \"The Eyes of Despero!\". \\n Answer:", "answer": ["select count(distinct series_name), count(distinct content) from tv_channel"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: Find the average grade of all students who have some friends. \\n Answer:", "answer": ["select avg(grade) from highschooler where id in (select t1.student_id from friend as t1 join highschooler as t2 on t1.student_id = t2.id)"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | tvshow | tv_channel : id , series_name ( Rock TV ) , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option ( Option ) | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel. \\n Question: Tell me the package option for the series named \"Rock TV\". \\n Answer:", "answer": ["select package_option from tv_channel where series_name = \"Rock TV\""], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: Show the treatment details. \\n Answer:", "answer": ["select * from treatments"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight. \\n Question: What about the first one? || How much does each one weigh? | Order the pets by age \\n Answer:", "answer": ["select weight from pets order by pet_age limit 1"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: What are the names of the countries that have no car makers? \\n Answer:", "answer": ["select countryname from countries where countryid not in (select t1.countryid from countries as t1 join car_makers as t2 on t1.countryid = t2.country);"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( Europe ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: Which countries are in the continent of Europe? \\n Answer:", "answer": ["select * from country where continent = \"Europe\""], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade. \\n Question: Show the names of teachers who teach at least two courses. || Show names of teachers and the number of courses they teach. | Show all the teacher names. \\n Answer:", "answer": ["select t2.name from course_arrange as t1 join teacher as t2 on t1.teacher_id = t2.teacher_id group by t2.name having count(*) >= 2"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: Also show descriptions. || Show all template type codes. \\n Answer:", "answer": ["select template_type_code, template_type_description from ref_template_types"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created. \\n Question: Which contestants did not get any votes? || Show all contestants \\n Answer:", "answer": ["select * from contestants where contestant_number not in ( select contestant_number from votes )"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | voter_1 | area_code_state : area_code , state ( CA , NY ) | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state ( NY , CA ) , contestant_number , created. \\n Question: What are the number of votes from state 'NY' or 'CA'? \\n Answer:", "answer": ["select count(*) from votes where state = 'NY' or state = 'CA'"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: Which template type code is used by most number of documents? \\n Answer:", "answer": ["select t1.template_type_code from templates as t1 join documents as t2 on t1.template_id = t2.template_id group by t1.template_type_code order by count(*) desc limit 1"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | voter_1 | area_code_state : area_code , state ( CA , NY ) | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state ( NY , CA ) , contestant_number , created. \\n Question: What about those from state 'NY' or 'CA'? || Show all votes. \\n Answer:", "answer": ["select * from votes where state = 'NY' or state = 'CA'"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: In which years cars were produced weighing no less than 3000 and no more than 4000? \\n Answer:", "answer": ["select distinct t1.year from cars_data as t1 where t1.weight > 3000 and t1.weight < 4000;"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | museum_visit | museum : museum_id , name , num_of_staff , open_year | visitor : id , name , level_of_membership , age | visit : museum_id , visitor_id , num_of_ticket , total_spent. \\n Question: sort by their age from old to young. || what are their names and membership levels? | find the number of visitors with a membership level higher than 4. \\n Answer:", "answer": ["select name, level_of_membership from visitor where level_of_membership > 4 order by age desc"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus. \\n Question: find the name of the employees who received past evaluation awards. \\n Answer:", "answer": ["select t1.name from employee as t1 join evaluation as t2 on t1.employee_id = t2.employee_id"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: Show just its horsepower. || What is the ID, Make and Model of this car? | How about the highest? | What is the lowest accelerate for any car? \\n Answer:", "answer": ["select horsepower from cars_data order by accelerate desc limit 1;"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | network_1 | highschooler : id , name ( Kyle ) , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: How many friends does he have? || Show me information on the high schooler named \"Kyle.\" \\n Answer:", "answer": ["select count(*) from friend as t1 join highschooler as t2 on t1.student_id = t2.id join highschooler as t3 on t1.friend_id = t3.id where t2.name = \"Kyle\""], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker ( amc ) , fullname , country | model_list : modelid , maker , model ( amc ) | car_names : makeid , model ( amc ) , make ( amc hornet , amc hornet sportabout (sw) ) | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: What is the accelerate of the car make amc hornet sportabout (sw)? \\n Answer:", "answer": ["select t1.accelerate from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t2.make = 'amc hornet sportabout (sw)';"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance. \\n Question: Please show the record formats of orchestras. \\n Answer:", "answer": ["select major_record_format from orchestra"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname ( General Motors ) , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: Which distinctive models are produced by maker with the full name General Motors or weighing more than 3500? \\n Answer:", "answer": ["select distinct t2.model from car_names as t1 join model_list as t2 on t1.model = t2.model join car_makers as t3 on t2.maker = t3.id join cars_data as t4 on t1.makeid = t4.id where t3.fullname = 'General Motors' or t4.weight > 3500;"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( Asia , Africa ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: Which African countries have a smaller population than that of any country in Asia? \\n Answer:", "answer": ["select name from country where continent = \"Africa\" and population < (select max(population) from country where continent = \"Asia\")"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: How many countries are there? \\n Answer:", "answer": ["select count(*) from country"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: Show all template type codes and number of templates for each. \\n Answer:", "answer": ["select template_type_code, count(*) from templates group by template_type_code"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport. \\n Question: What is the abbreviation of the airilne has the fewest flights and what country is it in? \\n Answer:", "answer": ["select t1.abbreviation, t1.country from airlines as t1 join flights as t2 on t1.uid = t2.airline group by t1.airline order by count(*) limit 1"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: Which of them have at least two paragraphs? || For each of these document ids, count the number of paragraphs. | Show the document id for all paragraphs. \\n Answer:", "answer": ["select document_id from paragraphs group by document_id having count(*) >= 2"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by ( Steven Melching , Todd Casey ) , original_air_date , production_code , channel. \\n Question: which countries' tv channels are not playing any cartoon written by Todd Casey? || which countries' tv channels are playing some cartoon written by Steven Melching? \\n Answer:", "answer": ["select country from tv_channel except select t1.country from tv_channel as t1 join cartoon as t2 on t1.id = t2.channel where t2.written_by = 'Todd Casey'"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country ( USA ) | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport. \\n Question: What are the airline names and abbreviations for airlines in the USA? \\n Answer:", "answer": ["select airline, abbreviation from airlines where country = \"USA\""], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | network_1 | highschooler : id , name ( Kyle ) , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: How many other students like him? || What grade is the student named Kyle in? \\n Answer:", "answer": ["select count(*) from likes as t1 join highschooler as t2 on t1.liked_id = t2.id where t2.name = \"Kyle\""], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | tvshow | tv_channel : id , series_name ( MTV Music ) , country , language ( Italian ) , content ( music ) , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel. \\n Question: Tell me the number of Italian channels. || tell me the country of the TV channel with series named \"MTV Music\" \\n Answer:", "answer": ["select count(*) from tv_channel where country = \"Italy\""], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | voter_1 | area_code_state : area_code , state ( CA , NY ) | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state ( NY , CA ) , contestant_number , created. \\n Question: Give me the count of these votes. || What about those from state 'NY' or 'CA'? | Show all votes. \\n Answer:", "answer": ["select count(*) from votes where state = 'NY' or state = 'CA'"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height. \\n Question: What are their final table mades and best finishes? || What are their final table mades? | Show all the information about each poker player. \\n Answer:", "answer": ["select final_table_made, best_finish from poker_player"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | tvshow | tv_channel : id , series_name ( Sky Radio ) , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel. \\n Question: tell me the content of TV Channel with the series named \"Sky Radio\". \\n Answer:", "answer": ["select content from tv_channel where series_name = \"Sky Radio\""], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height. \\n Question: What are the names of all poker players? \\n Answer:", "answer": ["select t1.name from people as t1 join poker_player as t2 on t1.people_id = t2.people_id"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description ( Presentation ) | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: What are the template ids with description \"Presentation\"? || Also show their template type description. | Show the template id for all templates. \\n Answer:", "answer": ["select t2.template_id from ref_template_types as t1 join templates as t2 on t1.template_type_code = t2.template_type_code where t1.template_type_description = \"Presentation\""], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id. \\n Question: Show the date of the transcript which shows the least number of results, also list the id. \\n Answer:", "answer": ["select t2.transcript_date, t1.transcript_id from transcript_contents as t1 join transcripts as t2 on t1.transcript_id = t2.transcript_id group by t1.transcript_id order by count(*) asc limit 1"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: What is the minimum, maximum and average value of the treatment costs? \\n Answer:", "answer": ["select min(cost_of_treatment), max(cost_of_treatment), avg(cost_of_treatment) from treatments"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: Which of them have both owners and professionals living there? || Now show the states of them. | What about the Professionals? | List all the information about the owners. \\n Answer:", "answer": ["select state from owners intersect select state from professionals"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: How many matches are there? \\n Answer:", "answer": ["select count(*) from matches"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | tvshow | tv_channel : id , series_name ( Sky Radio ) , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel. \\n Question: tell me the country of the TV Channel for the series named \"Sky Radio\". \\n Answer:", "answer": ["select country from tv_channel where series_name = \"Sky Radio\""], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance. \\n Question: What are the record companies of orchestras in descending order of years in which they were founded? \\n Answer:", "answer": ["select record_company from orchestra order by year_of_founded desc"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: Return the names of the 3 most populated countries. \\n Answer:", "answer": ["select name from country order by population desc limit 3"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport. \\n Question: What is the total number of airlines? \\n Answer:", "answer": ["select count(*) from airlines"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: Of those, how many also played in 2016. || How many distinct winners played in 2013? \\n Answer:", "answer": ["select count(*) from (select winner_name from matches where year = 2013 intersect select winner_name from matches where year = 2016)"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport. \\n Question: What are all the flights? \\n Answer:", "answer": ["select * from flights"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight. \\n Question: How many different types of pet are there? \\n Answer:", "answer": ["select count(distinct pettype) from pets"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline ( United Airlines ) , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport. \\n Question: What are the United Airlines flights? \\n Answer:", "answer": ["select * from airlines where airline = \"United Airlines\""], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position. \\n Question: Which singer names do not? || Which singer ids have at least one song? \\n Answer:", "answer": ["select name from singer where singer_id not in (select singer_id from song)"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name ( Angola ) , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname ( Angola ) , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: For that country, what is its population? || Which region is Angola in? \\n Answer:", "answer": ["select population from country where name = \"Angola\""], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language ( Chinese ) , isofficial , percentage. \\n Question: How many continents speak Chinese? \\n Answer:", "answer": ["select count( distinct continent) from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"Chinese\""], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: What are all the different car models? \\n Answer:", "answer": ["select distinct model from model_list;"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: For each of them, show the number of documents using it. || Also show its template type code. | Show the template id for all Documents. \\n Answer:", "answer": ["select count(*), t1.template_id, t2.template_type_code from documents as t1 join templates as t2 on t1.template_id = t2.template_id group by t1.template_id"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: What is the name of the high schooler who has the greatest number of likes? \\n Answer:", "answer": ["select t2.name from likes as t1 join highschooler as t2 on t1.student_id = t2.id group by t1.student_id order by count(*) desc limit 1"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | museum_visit | museum : museum_id , name , num_of_staff , open_year | visitor : id , name , level_of_membership , age | visit : museum_id , visitor_id , num_of_ticket , total_spent. \\n Question: What are the id, name and membership level of visitors who have spent the largest amount of money in total in all museum tickets? \\n Answer:", "answer": ["select t2.visitor_id, t1.name, t1.level_of_membership from visitor as t1 join visit as t2 on t1.id = t2.visitor_id group by t2.visitor_id order by sum(t2.total_spent) desc limit 1"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: Which professionals have done at least two types of treatments? List the professional id and cell phone. \\n Answer:", "answer": ["select t1.professional_id, t1.cell_number from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count(*) >= 2"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: Find the name of tourney that has more than 10 matches. \\n Answer:", "answer": ["select tourney_name from matches group by tourney_name having count(*) > 10"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline ( United Airlines ) , abbreviation , country | airports : city , airportcode ( AHD ) , airportname , country , countryabbrev | flights : airline , flightno , sourceairport (  AHD ) , destairport (  AHD ). \\n Question: Return the number of United Airlines flights leaving from AHD Airport. \\n Answer:", "answer": ["select count(*) from airlines as t1 join flights as t2 on t2.airline = t1.uid where t1.airline = \"United Airlines\" and t2.sourceairport = \"AHD\""], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel. \\n Question: List the number of different series names and contents in the TV Channel table. \\n Answer:", "answer": ["select count(distinct series_name), count(distinct content) from tv_channel;"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | tvshow | tv_channel : id , series_name , country , language ( Italian ) , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel. \\n Question: How about the Polish TV Channels? || Show me all the information about the Italian TV Channels. \\n Answer:", "answer": ["select * from tv_channel where country = \"Poland\""], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: List all the car information with weights above this? || What is the average weight of all the cars? \\n Answer:", "answer": ["select * from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.weight > (select avg(weight) from cars_data)"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: Which country has the smallest population? \\n Answer:", "answer": ["select * from country order by population limit 1"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by ( Steven Melching ) , original_air_date , production_code , channel. \\n Question: which countries' tv channels are playing some cartoon written by Steven Melching? \\n Answer:", "answer": ["select t1.country from tv_channel as t1 join cartoon as t2 on t1.id = t2.channel where t2.written_by = 'Steven Melching'"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type ( Brig ) , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured. \\n Question: What are the different ids and names of the battles that lost any 'Brig' type ships? \\n Answer:", "answer": ["select distinct t1.id, t1.name from battle as t1 join ship as t2 on t1.id = t2.lost_in_battle where t2.ship_type = 'Brig'"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id. \\n Question: What's the name of the course with the least number of enrollments? \\n Answer:", "answer": ["select t1.course_name from courses as t1 join student_enrolment_courses as t2 on t1.course_id = t2.course_id group by t1.course_name order by count(*) asc limit 1"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position. \\n Question: Which singer ids have at least one song? \\n Answer:", "answer": ["select distinct singer_id from song"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height. \\n Question: What are the names of poker players in descending order of earnings? \\n Answer:", "answer": ["select t1.name from people as t1 join poker_player as t2 on t1.people_id = t2.people_id order by t2.earnings desc"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: How many cities in each district have a population that is above the average population across all cities? \\n Answer:", "answer": ["select count(*), district from city where population > (select avg(population) from city) group by district"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title ( Day of the Dark Knight! ) , directed_by , written_by , original_air_date , production_code , channel. \\n Question: What is the channel of this cartoon? || Tell me﻿ the director of the cartoon named \"Day of the Dark Knight!\". \\n Answer:", "answer": ["select channel from cartoon where title = \"Day of the dark knight!\""], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city ( Aberdeen  ) , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport. \\n Question: What are all the flights derparting from Aberdeen? \\n Answer:", "answer": ["select * from flights as t1 join airports as t2 on t1.sourceairport = t2.airportcode where t2.city = \"Aberdeen\""], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: What is its population, name and leader? || What is the country with the largest surface area? \\n Answer:", "answer": ["select name, population, headofstate from country order by surfacearea desc limit 1"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode ( ATO ) , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport. \\n Question: How many are there? || What flights land in ATO? \\n Answer:", "answer": ["select count(*) from flights where destairport = \"ATO\""], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name ( Australian Open ) , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: Find the name of the winner who has the highest rank points and participated in the Australian Open tourney. \\n Answer:", "answer": ["select winner_name from matches where tourney_name = 'Australian Open' order by winner_rank_points desc limit 1"], "label": "QA"}
