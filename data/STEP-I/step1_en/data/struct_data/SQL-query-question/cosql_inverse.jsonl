{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option ( Option ) | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel. \\n Question: select series_name from tv_channel order by series_name asc", "answer": ["List all series names in alphabetical order || What is the package option for that channel? | find id of the tv channels that are from countries with more than two tv channels"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance. \\n Question: select orchestra from orchestra order by orchestra", "answer": ["I want a list of orchestra names in ascending order. || Can you show me orchestra names and the major record formats?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id. \\n Question: select count ( * ) from students", "answer": ["Hello!  Can you tell me how many students in total there are on this list?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( Asia , Africa ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select name from country where continent = \"Africa\" and population < ( select max ( population ) from country where continent = \"Asia\" )", "answer": ["WHAT ARE THE AFRICAN COUNTRIES THAT HAVE POPULATION LESS THAN ANY COUNTRY IN ASIA"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select * from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id order by count ( * ) limit 1", "answer": ["what about the least treatments? || which professional has done  the most treatments?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id. \\n Question: select t1.course_name from courses as t1 join student_enrolment_courses as t2 on t1.course_id = t2.course_id group by t1.course_name order by count(*) desc limit 1", "answer": ["What's the name of the course with most number of enrollments?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: select template_type_code from templates except select template_type_code from templates as t1 join documents as t2 on t1.template_id = t2.template_id", "answer": ["Show all template type codes that are not used by any document."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select count(*) from cars_data where accelerate > ( select accelerate from cars_data order by horsepower desc limit 1 );", "answer": ["How many cars have a larger accelerate than the car with the largest horsepower?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by ( Todd Casey ) , original_air_date , production_code , channel. \\n Question: select title from cartoon where written_by = 'Todd Casey'", "answer": ["Can you update the list to show only those Titles which are cartoons? || Hello!  Can you provide me with a list of all cartoons written by Todd Casey?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent ( europe ) | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model ( hi ) | car_names : makeid , model ( hi ) , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select count ( * ) from countries as t1 join continents as t2 on t1.continent = t2.contid join car_makers as t3 on t1.countryid = t3.country where t2.continent = 'europe'", "answer": ["how many total car manufacturers does europe have? || how many do each of those have? | which of those has at least 3? | How many car manufacturers are in each of those countries? | Hi! which countries are in europe?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | museum_visit | museum : museum_id , name , num_of_staff , open_year | visitor : id , name , level_of_membership , age | visit : museum_id , visitor_id , num_of_ticket , total_spent. \\n Question: select t1.level_of_membership, sum ( total_spent ) from visitor as t1 join visit as t2 on t1.id = t2.visitor_id group by level_of_membership", "answer": ["I'd like to know how much was spent on tickets at each membership level, can you show me? || Can you show me the names of each visitor with membership level 1? | How many membership levels are there? | Can you tell me how many visitors there are at membership level 1? | Can you tell me the total amount spent on tickets by visitors with membership level 1?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name ( Belgium , Egypt ) , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language ( English , Arabic ) , isofficial , percentage. \\n Question: select count ( t1.name ) from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"Arabic\" and t2.isofficial = \"T\"", "answer": ["Can you tell me the number of countries where Arabic is the official language. || Please tell me all the languages spoken in Egypt. | What are the countries where arabic language is spoken | What is the official language in Belgium? | What are the countries where either English or Dutch is the official language?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id. \\n Question: select transcript_date from transcripts order by transcript_date desc limit 1", "answer": ["What is the last transcript release date?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name ( Afghanistan , Angola ) , continent ( Asia , Africa ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname ( Angola , Aruba ) , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select code from country where name = \"Aruba\"", "answer": ["WHAT IS THE CODE OF ARUBA || SURFACE AREA  OF AFGHANISTAN | WHAT IS THE LOCAL NAME OF ANGOLA | FROM WHICH CONTINENT IS ARUBA | WHAT ARE THE AFRICAN COUNTRIES THAT HAVE POPULATION LESS THAN ANY COUNTRY IN ASIA"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: select document_id from paragraphs group by document_id order by count ( * ) asc limit 1", "answer": ["What is the document id with least number of paragraphs?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select accelerate from cars_data order by horsepower desc limit 1", "answer": ["What is the accelerate of car 39? || Which car has the largest horsepower? | What is the average horsepower?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height. \\n Question: select nationality from people group by nationality having count(*) >= 2", "answer": ["What are the nationalities that are shared by at least two people?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state ( Indiana ) , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code ( Employee ) , first_name ( Taryn ) , street , city , state ( Indiana ) , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select first_name from professionals where state = \"Indiana\"", "answer": ["List the names of all professionals with the state Indiana. || List the names of all the professionals and their state. | List the role, street, city, and state of the professional with first name Taryn. | The role code of the professional with first name Taryn is Employee | List the role of the professional named Taryn. | List the names of all professionals that live in a city containing the substring West. | List the names of all the professionals."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select count ( * ) from owners where owner_id not in ( select owner_id from dogs )", "answer": ["What are their full names? || Hi! How many owners temporarily do not have dogs?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel. \\n Question: select language from tv_channel group by language order by count ( * ) desc limit 1", "answer": ["What language is used on the most number of TV channels? || Can you please tell me the language used on the least number of TV Channels?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight. \\n Question: select distinct city_code from student", "answer": ["What are the city codes for all available students || That are available"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name ( Super bootcamp , Auditions ) , theme , stadium_id , year | singer_in_concert : concert_id , singer_id. \\n Question: select t2.name, t2.location from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014 or t1.year = 2015", "answer": ["What are the names and locations of stadiums which had some concerts in either 2014 or 2015? || What stadium did it happen in? | And the concert named Auditions? | Which year did the concert Super bootcamp happen in? | Find the name and location of the stadiums which some concerts happened in the years of both 2014 and 2015."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight. \\n Question: select distinct t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid", "answer": ["Hello!  Can you show me a list of all of the student IDs for students who have pets?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select t1.breed_name from breeds as t1 join dogs as t2 on t1.breed_code = t2.breed_code group by t1.breed_name order by count(*) desc limit 1", "answer": ["What is the name of the breed with the most dogs?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode group by t1.name order by count(*) desc limit 1", "answer": ["What is name of the country that speaks the largest number of languages?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance. \\n Question: select count ( distinct orchestra ) from orchestra", "answer": ["How many orchestras are there?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: select country_code from players group by country_code having count ( * ) < 40", "answer": ["What are the codes of countries that have less than 40 players? || What are the codes of countries that have more than 50 players?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode ( A Love of a Lifetime ) , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel. \\n Question: select t1.series_name from tv_channel as t1 join tv_series as t2 on t1.id = t2.channel where t2.episode = \"A love of a Lifetime\"", "answer": ["What is the TV Channel of TV series \"A love of a lifetime\"?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline ( AirTran Airways ) , abbreviation ( AirTran ) , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport. \\n Question: select abbreviation from airlines where airline = \"AirTran Airways\"", "answer": ["What is the abbreviation of AirTran Airways? || What is the Airline with the fewest number of flights? | Hi, What Airline has the largest number of flights?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( Africa , Asia ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select name from country where continent = \"Asia\" and population > ( select min ( population ) from country where continent = \"Africa\" )", "answer": ["What are the names of the Asian countries that have a larger population than that of any country in Africa? || What are the names and populations of every country in Asia? | What are the populations of every country in Africa?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship ( United States ) | song : song_id , title , singer_id , sales , highest_position. \\n Question: select * from singer where birth_year < 1945 and citizenship = 'United States'", "answer": ["Which singers with a citizenship of United States were born before 1945? || and after 1955? | what is the citizenship of the singers born before 1945? | Did you mean the singers born before 1945 OR after 1955? | which singers born before 1945 and after 1955 have the same citizenship? | how about after 1955? | which singers were born before 1945?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: select avg(loser_age), avg(winner_age) from matches", "answer": ["Find the average age of losers and winners of all matches."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline ( United Airlines , US Airways ) , abbreviation , country | airports : city , airportcode ( ASY ) , airportname , country , countryabbrev ( US  ) | flights : airline , flightno , sourceairport , destairport. \\n Question: select country from airlines where airline = \"US Airways\"", "answer": ["what is the country of us airways || dest airport | What is ASY? | what is the source airport of ASY | what is the country of united airlines | what is the dest airport of airline 1"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name ( Nigeria , China ) , continent ( Africa , Asia ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname ( Nigeria ) , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language ( Chin ) , isofficial , percentage. \\n Question: select population from country where name = 'China'", "answer": ["What is China's population? || What Asian country has the largest population? | And what is the population of Nigeria? | What African country has the largest population?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus. \\n Question: select district from shop where number_products < 3000 intersect select district from shop where number_products > 10000", "answer": ["Which district has both stores with less than 3000 products and stores with more than 10000 products?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform ( Republic ) , headofstate , capital , code2 | countrylanguage : countrycode , language ( English ) , isofficial , percentage. \\n Question: select code from country where governmentform != \"Republic\" except select countrycode from countrylanguage where language = \"English\"", "answer": ["What are the codes of the countries that do not speak English and whose government forms are not Republic?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name ( Afghanistan , Aruba ) , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname ( Aruba ) , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select population from country where name = \"Aruba\"", "answer": ["And for Aruba? || What is the population of Afghanistan?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | network_1 | highschooler : id , name ( Kyle ) , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: select count(*) from likes as t1 join highschooler as t2 on t1.student_id = t2.id where t2.name = \"Kyle\"", "answer": ["How many likes does Kyle have?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight. \\n Question: select t3.weight from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t1.sex = 'F'", "answer": ["Can i have the weight of the pets that were raised by female student || What are the city codes for all available students | That are available"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name ( Petra ) , last_name ( Kvitova ) , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name ( Petra Kvitova ) , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name ( Petra Kvitova ) , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: select count ( * ) from matches where loser_name = \"Petra Kvitova\" or winner_name = \"Petra Kvitova\"", "answer": ["Tell me the total number of matches played by Petra Kvitova... || Tell me the loser_name whose age is 24.626967830300003"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport. \\n Question: select t1.city from airports as t1 join flights as t2 on t1.airportcode = t2.sourceairport group by t1.city order by count(*) desc limit 1", "answer": ["Which city has most number of departing flights?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location ( English Channel ) , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured. \\n Question: select name from battle except select t1.name from battle as t1 join ship as t2 on t1.id = t2.lost_in_battle where t2.location = 'English Channel'", "answer": ["Can you please show the names of the battles that had no ships lost in the 'English Channel'?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight. \\n Question: select distinct t1.fname, t1.lname, t1.major, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid", "answer": ["Great!  Can you show me the name (first and last), major and age of those two students? || Hello!  Can you show me a list of all of the student IDs for students who have pets?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id. \\n Question: select count ( * ) from students", "answer": ["how many students there"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name ( Petra ) , last_name ( Kvitova ) , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name ( Petra Kvitova ) , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name ( Petra Kvitova ) , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: select distinct loser_id from matches where loser_rank_points > 3500", "answer": ["based on loser_id || What attributes of the people  with loser_rank_points higher than 3500 would you like to know? | Who has high loser_rank_points higher than 3500 ? | Tell me the total number of matches played by Petra Kvitova... | Tell me the loser_name whose age is 24.626967830300003"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name ( Russian Federation ) , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform ( Federation ) , headofstate , capital , code2 | countrylanguage : countrycode , language ( Russian ) , isofficial , percentage. \\n Question: select headofstate from country order by surfacearea desc limit 1", "answer": ["Who is it's leader? || And what is the population of this country? | Russian Federation is the name of the country with the largest area. | Which country has the largest area?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: select country_code from players group by country_code order by count(*) desc limit 1", "answer": ["find the code of the country where has the greatest number of players."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus. \\n Question: select district from shop order by number_products desc limit 1", "answer": ["Which district has the largest number of products?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name ( Petra ) , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: select distinct loser_id from matches where loser_name = \"Petra Kvitova\"", "answer": ["Yes || Do  you mean \tloser  id | What is the loser id  of petra kvitota? | How many matches played in 2016? | How many matches played in 2013?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select t1.contid, t1.continent, count ( * ) from continents as t1 join countries as t2 on t1.contid = t2.continent group by t1.contid", "answer": ["Okay, now can you list the number of countries belonging to each continent, including the continent id as well? || Can you list all the continents?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height. \\n Question: select nationality from people group by nationality having count ( * ) > 1", "answer": ["Hello!  Which nationalities are shared by more than one person?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name ( Taryn ) , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select email_address from professionals where first_name = \"Taryn\"", "answer": ["Yes || Would you like the email address of professionals with name Taryn? | What email can i use to contact Taryn | kindly give me the names that might be used for professionals or owners but cannot be use for dog names"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( Africa ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select name,population from country where continent = \"Africa\"", "answer": ["What are the populations of every country in Africa?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name ( Teodor Salparov ) , birth_date , height. \\n Question: select earnings from poker_player where people_id = 5", "answer": ["Tell me the earnings of the people id 5? || Tell me the birthday date of Teodor Salparov ? | To which nationality does the people_id 1 belongs to ?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade. \\n Question: select t3.name, t2.course, t1.teacher_id from course_arrange as t1 join course as t2 on t1.course_id = t2.course_id join teacher as t3 on t1.teacher_id = t3.teacher_id order by t3.name", "answer": ["include teachers id in tha same list || arrange this list with the teachers name in ascending order | list the name of the teachers and the courses assigned for them to teach"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: select first_name from players", "answer": ["list out the players first name || how many players are presented on the table"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select id from cars_data order by horsepower desc limit 1", "answer": ["Which car has the largest horsepower? || What is the average horsepower?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( Asia ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language ( Chinese ) , isofficial , percentage. \\n Question: select distinct t3.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode join city as t3 on t1.code = t3.countrycode where t2.isofficial = 'T' and t2.language = 'Chinese' and t1.continent = \"Asia\"", "answer": ["Whic`h unique cities are in  Asian countries where Chinese is the official language?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name ( Aruba ) , continent ( Asia , Africa ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname ( Aruba ) , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select continent from country where name = \"Aruba\"", "answer": ["FROM WHICH CONTINENT IS ARUBA || WHAT ARE THE AFRICAN COUNTRIES THAT HAVE POPULATION LESS THAN ANY COUNTRY IN ASIA"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: select player_id from players order by birth_date limit 1", "answer": ["What about the oldest? || What is the player id for the youngest player?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | tvshow | tv_channel : id , series_name ( Sky Music ) , country , language , content ( music ) , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option ( Option ) | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel. \\n Question: select distinct content from tv_channel", "answer": ["what is the content of all the channels? || WHAT IS THE PACKAGE OPTION OF ALL CHANNELS? | IN WHAT LANGUAGE SKY MUSIC AVAILABLE?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id. \\n Question: select name from stadium except select t2.name from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014", "answer": ["Show names for all stadiums except for stadiums having a concert in year 2014."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select first_name from professionals union select first_name from owners except select name from dogs", "answer": ["Which first names are used for professionals or owners, but are not used as dog names? || Which first names are used for professionals or owners?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( Asia ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select name from country where continent = \"Asia\" order by lifeexpectancy limit 1", "answer": ["What is the name of country that has the shortest life expectancy in Asia?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: select count ( * ) from friend", "answer": ["What about friends? || How many students are there?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( Asia , Africa ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select name from country where continent = \"Africa\" and population < (select max(population) from country where continent = \"Asia\")", "answer": ["What are the African countries that have a  population less than any country in Asia?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline ( United Airlines ) , abbreviation , country | airports : city , airportcode ( ASY ) , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport. \\n Question: select count ( * ) from flights where airline = 1 and destairport = \" ASY\"", "answer": ["How many airlines with airline id 1 go to the destination airport ASY? || What is the airline ID of United Airlines? | How many 'United Airlines' flights go to the Airport 'ASY'?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker ( amc ) , fullname , country | model_list : modelid , maker , model ( amc ) | car_names : makeid , model ( amc ) , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select modelid from model_list where model = \"amc\"", "answer": ["Tell me the model id made by amc... || Tell me CountryName for Countryid  1, 2, and 3. | tell me the FullName of the maker amc"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type ( Live final ) , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance. \\n Question: select max(share), min(share) from performance where type != \"Live final\"", "answer": ["What are the maximum and minimum share of performances whose type is not \"Live final\"."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode ( CVO ) , airportname , country , countryabbrev | flights : airline , flightno , sourceairport (  CVO ) , destairport (  CVO ). \\n Question: select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = \" CVO\"", "answer": ["Which airlines have flight from CVO? || Flight from CVO to DFW | Find Flight from CVO to SNA"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.cylinders = 4 order by t2.horsepower desc limit 1;", "answer": ["For the cars with 4 cylinders, which model has the largest horsepower?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name ( Afghanistan , Aruba ) , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname ( Aruba ) , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select t2.language from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.name = \"Aruba\"", "answer": ["What languages are spoken in Aruba? || And for Aruba? | What is the population of Afghanistan?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | museum_visit | museum : museum_id , name , num_of_staff , open_year | visitor : id , name , level_of_membership , age | visit : museum_id , visitor_id , num_of_ticket , total_spent. \\n Question: select age from visitor where id = 1", "answer": ["What is the age of customer id 1? || What is the name of customer id 1? | Whats the level of membership customer id 1 has?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select t1.contid, t1.continent, count(*) from continents as t1 join countries as t2 on t1.contid = t2.continent group by t1.contid;", "answer": ["How many countries does each continent have? List the continent id, continent name and the number of countries."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: select country_code from players group by country_code having count ( * ) > 50", "answer": ["What are the codes of countries that have more than 50 players?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | course_teach | course : course_id , staring_date , course ( Math ) | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade. \\n Question: select t2.staring_date from course_arrange as t1 join course as t2 on t1.course_id = t2.course_id where t2.course = \"Math\"", "answer": ["What dates do those courses start? || The   grades  of courses that the teachers for the math teach are 1 and 3 | What grades do they teach? | Show the name of the teacher for the math course please?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: select count(*) from highschooler where grade = 9 or grade = 10", "answer": ["How many high schoolers are there in grade 9 or 10?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus. \\n Question: select city from employee", "answer": ["Hello!  Can you please provide me with a list of all of the cities in this database?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype ( dog , cat ) , pet_age , weight. \\n Question: select max ( pet_age ) from pets where pettype = 'dog'", "answer": ["Thanks! Now what's the maximum age for dogs? || What about for dogs? | Hey can you tell me the average age for cats?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured. \\n Question: select t1.injured from death as t1 join ship as t2 on t1.caused_by_ship_id = t2.id where t2.tonnage = 't'", "answer": ["What are the injury situations caused by the ship with tonnage 't' ? || What are the death situations caused by the ship with tonnage 't' ?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight. \\n Question: select fname, lname from student where sex = 'F'", "answer": ["That are available"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position. \\n Question: select distinct t1.name from singer as t1 join song as t2 on t1.singer_id = t2.singer_id where t2.sales > 300000", "answer": ["Show distinct names of singers that have songs with sales more than 300000."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: select template_id from documents", "answer": ["Hello there!  Can you please list all the template IDs and which document IDs they are associated with?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( Asia , Africa ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select name from country where continent = \"Africa\" and population < (select min(population) from country where continent = \"Asia\")", "answer": ["Which African countries have a smaller population than that of any country in Asia?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: select count ( * ) from matches where winner_hand = \"L\"", "answer": ["How many winners are left handed? || What about the average age of the winners from all matches? | What is the average age of the losers from all matches?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: select date_effective_to from templates where template_id in ( select template_id from templates except select template_id from documents )", "answer": ["yes || Do you mean the effective-to date of those templates? | are those still effective? | which of those is not used in a document | what are all of the template ids?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade. \\n Question: select name from teacher order by age asc limit 1", "answer": ["Who is the youngest teacher?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select email_address from owners where owner_id = 1", "answer": ["owner id 1 || Do you mean all owner id and all email address? | can you tell me the email id of the owner id ?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id. \\n Question: select name from stadium where stadium_id not in (select stadium_id from concert)", "answer": ["Show the stadium names without any concert."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select role_code, street, city, state from professionals where city like '%west%'", "answer": ["Which professionals live in a city containing the substring 'West'? List his or her role, street, city and state."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id. \\n Question: select department_name from departments where department_name like '%computer%'", "answer": ["What is the full name of the department that has the substring computer in its name?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( Europe , Asia ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select sum(surfacearea) from country where continent = \"Asia\" or continent = \"Europe\"", "answer": ["What is the total surface area of the continents Asia and Europe?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name ( Price ) , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select cost_of_treatment from treatments order by date_of_treatment desc limit 1", "answer": ["And how about the price of the most recent treatment? || which one is the most expensive? | How many different treatments are there?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description ( Presentation ) | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: select t2.template_id from ref_template_types as t1 join templates as t2 on t1.template_type_code = t2.template_type_code where t1.template_type_description = \"Presentation\"", "answer": ["Thank you!  Can you please provide me with the list of the template ids with the template type description of \"Presentation\"? || Hello!  How many template IDs have the description of \"Presentation\"?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: select * from documents", "answer": ["Show me the documents"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade. \\n Question: select t2.name from course_arrange as t1 join teacher as t2 on t1.teacher_id = t2.teacher_id group by t2.name having count(*) >= 2", "answer": ["Show names of teachers that teach at least two courses."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height. \\n Question: select t1.name from people as t1 join poker_player as t2 on t1.people_id = t2.people_id where t2.earnings > 300000", "answer": ["What are the names of poker players whose earnings is higher than 300000?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id. \\n Question: select t2.name, count ( * ) from singer_in_concert as t1 join singer as t2 on t1.singer_id = t2.singer_id group by t2.singer_id", "answer": ["can you also  give number of concerts for each singer || yes | did you mean list their names? | please list the singers"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | museum_visit | museum : museum_id , name , num_of_staff , open_year | visitor : id , name , level_of_membership , age | visit : museum_id , visitor_id , num_of_ticket , total_spent. \\n Question: select t1.name, t1.id, t1.age from visitor as t1 join visit as t2 on t1.id = t2.visitor_id group by t1.id having count ( * ) > 1", "answer": ["Can you list their IDs and ages too? || List the names of all visitors who visited some museums more than once, please."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select t1.last_name from owners as t1 join dogs as t2 on t1.owner_id = t2.owner_id where t2.age = ( select max(age) from dogs )", "answer": ["List the last name of the owner owning the youngest dog."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: select count ( * ) from likes", "answer": ["how many Likes there"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | employee_hire_evaluation | employee : employee_id , name ( George Chuter ) , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus. \\n Question: select age from employee where name = 'George Chuter'", "answer": ["what is the age of George Chuter?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name ( Aleksey Ostapenko ) , birth_date , height. \\n Question: select height from people where name = \"Aleksey Ostapenko\"", "answer": ["Which height of Aleksey Ostapenko?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | network_1 | highschooler : id , name ( Kyle ) , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: select id from highschooler where name = \"Kyle\"", "answer": ["What is Kyle's ID? || Which of the high schoolers are friends with Kyle? | Show the names of all of the high schoolers."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height. \\n Question: select nationality from people as t1 join poker_player as t2 on t1.people_id = t2.people_id order by t2.earnings asc limit 1", "answer": ["What is the nationality of the poker player with the lowest earnings? || What is the name of the poker player with the lowest earnings? | What is the birth date of the poker player with the lowest earnings?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | orchestra | conductor : conductor_id , name ( Robert Craft ) , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance. \\n Question: select name from conductor order by year_of_work asc limit 1", "answer": ["List the name of the conductor with the least years of work || How many years did Robert Craft work? | List the name of the conductor with the most years of work."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model ( chevrolet ) | car_names : makeid , model ( chevrolet ) , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select model from car_names group by model order by count ( distinct make ) desc limit 1", "answer": ["Can you tell me which model has the most makes of cars? || How many models are in the list? | How many makes are there for Chevrolet?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language ( English , Dutch ) , isofficial , percentage. \\n Question: select * from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"English\" and isofficial = \"T\" union select * from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"Dutch\" and isofficial = \"T\"", "answer": ["What are the countries where either English or Dutch is the official language?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select dog_id from treatments order by cost_of_treatment asc limit 1", "answer": ["ok, can you show lowest cost treatment's dog id? || both | you want first name or last name or both? | could you please find who's provide lowest cost of treatment? | whats is total cost of treatment?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode ( APG ) , airportname , country , countryabbrev | flights : airline , flightno , sourceairport (  APG ) , destairport (  APG ). \\n Question: select city from airports where airportcode = 'APG'", "answer": ["Can you show the City of Airportcode APG? || Can you show the SourceAirport FlightNo 28?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select sum(population), avg(lifeexpectancy), continent from country group by continent having avg(lifeexpectancy) < 72", "answer": ["Find the average life expectancy and total population for each continent where the average life expectancy is shorter than 72?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured. \\n Question: select t1.id, t1.name from battle as t1 join ship as t2 on t1.id = t2.lost_in_battle join death as t3 on t2.id = t3.caused_by_ship_id group by t1.id having sum ( t3.killed ) > 10", "answer": ["Great!  Can you filter this list to show just the battle IDs and battle names of the battles that had more than 10 deaths associated with them? || Hi there!  Can you show me a list of all of the battle ids and the corresponding battle names?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select name,cost_of_treatment from dogs join treatments", "answer": ["LIST THE DOG NAMES WITH TREATMENT COST"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( Europe ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select name from country where continent = \"Europe\" and population = \"80000\"", "answer": ["Can you please only show those countries with a population of 80000 in the table? || Can you please list all the names of the countries that are in the continent of Europe?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name ( AirCon ) , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description. \\n Question: select t2.feature_type_name from other_available_features as t1 join ref_feature_types as t2 on t1.feature_type_code = t2.feature_type_code where t1.feature_name = \"AirCon\"", "answer": ["What is the feature type name of feature AirCon?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: select winner_age from matches order by winner_age limit 3", "answer": ["Give me the age of the 3 youngest winners across all matches || What are points of the 3 youngest winners? | Find the names of the 3 youngest winners across all matches"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: select template_id from templates except select template_id from documents", "answer": ["Show ids for all templates not used by any document."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | museum_visit | museum : museum_id , name , num_of_staff , open_year | visitor : id , name ( Gonzalo Higuaín  ) , level_of_membership , age | visit : museum_id , visitor_id , num_of_ticket , total_spent. \\n Question: select age from visitor where level_of_membership = 8", "answer": ["What is the age of membership level 8? || how many numbers of persons whose membership level is greater than 5? | whose membership level is 5? | What is the membership level of Gonzalo Higuaín ?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select count ( distinct language ) from countrylanguage", "answer": ["how many country languages there || how many country there"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select first_name, last_name from professionals", "answer": ["List the names of all the professionals."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select t1.breed_name from breeds as t1 join dogs as t2 on t1.breed_code = t2.breed_code group by t1.breed_name order by count(*) desc limit 1", "answer": ["What is the name of the breed with the most dogs?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus. \\n Question: select name, age from employee where age > 30", "answer": ["What are the names and ages of all employees over age 30? || Which cities do more than one employee over age 30 come from? | Which cities do more than one employee under age 30 come from?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height. \\n Question: select avg ( t2.earnings ) from people as t1 join poker_player as t2 on t1.people_id = t2.people_id where t1.height > 200", "answer": ["what is the average earnings of poker players with height higher than 200 || how many have height higher than 200 | how many poker players are on the table"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker ( fiat ) , fullname ( Fiat ) , country | model_list : modelid , maker , model ( fiat ) | car_names : makeid , model ( fiat ) , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select t1.countryid, t1.countryname from countries as t1 join car_makers as t2 on t1.countryid = t2.country group by t1.countryid having count(*) > 3 union select t1.countryid, t1.countryname from countries as t1 join car_makers as t2 on t1.countryid = t2.country join model_list as t3 on t2.id = t3.maker where t3.model = 'fiat';", "answer": ["What are the id and names of the countries which have more than 3 car makers or produce the 'fiat' model?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name ( Russian Federation ) , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform ( Federation ) , headofstate , capital , code2 | countrylanguage : countrycode , language ( Russian ) , isofficial , percentage. \\n Question: select population from country order by surfacearea desc limit 1", "answer": ["And what is the population of this country? || Russian Federation is the name of the country with the largest area. | Which country has the largest area?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( Europe , Asia ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select count ( * ) from ( select region from country where continent = \"Europe\" group by region )", "answer": ["What about in Europe? || HOw many regions are there in ASia?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select first_name from professionals union select first_name from owners union select name from dogs", "answer": ["Which first names are used for professionals or owners, and are used as dog names? || Which first names are used for professionals or owners, but are not used as dog names? | Which first names are used for professionals or owners?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id. \\n Question: select t2.department_name, t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id = t2.department_id group by t1.department_id order by count(*) desc limit 1", "answer": ["Which department offers the most number of degrees? List department name and id."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state ( Virginia ) , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select t2.name from owners as t1 join dogs as t2 on t1.owner_id = t2.owner_id where t1.state = \"Virginia\"", "answer": ["which dogs are owned by someone who lives in virginia? List the name. || name the dog having age more than 5 | name the dog which  aged 6? | owner id please. | Do you mean the owner id is 1 or dog id is 1? | Show  me the first and last name whose id number 1"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select sum ( population ), governmentform from country group by governmentform having avg ( lifeexpectancy ) > 72", "answer": ["What is the population of each of those? || Can you show me only those government forms whose average life expectancy is greater than 72? | What is the average life expectancy for each government form?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus. \\n Question: select manager_name, district from shop order by number_products desc limit 1", "answer": ["Find the manager name and district of the shop whose number of products is the largest."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus. \\n Question: select shop_id from shop order by number_products desc limit 1", "answer": ["What is the shop ID number? || Where is the location of that district? | How many products did he produce at that shop? | What is the manager's name of that shop? | Which district has the largest number of products?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype ( dog , cat ) , pet_age , weight. \\n Question: select pet_age from pets where pettype = \"dog\"", "answer": ["What are the ages of the 2 dogs? || Between the cats and dogs, how many of them are dogs? | Hi. What are the different types of pets?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype ( dog ) , pet_age , weight. \\n Question: select count ( * ) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'dog'", "answer": ["hi, what number of students have a dog as a pet?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location ( English Channel ) , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured. \\n Question: select name, result, bulgarian_commander from battle except select t1.name, t1.result, t1.bulgarian_commander from battle as t1 join ship as t2 on t1.id = t2.lost_in_battle where t2.location = 'English Channel'", "answer": ["Show the names,results, and Bulgarian commanders of all battles with no ships lost in the English channel. || Show the names and results of all battles with no ships lost in the English channel. | Show the names of all the battles with no ships lost in the English Channel. | Show the names of all the battles and their Bulgarian commanders. | Show the names of all the battles."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select t1.owner_id, t1.zip_code from owners as t1 join dogs as t2 on t1.owner_id = t2.owner_id join treatments as t3 on t2.dog_id = t3.dog_id group by t1.owner_id order by sum(t3.cost_of_treatment) desc limit 1", "answer": ["Which owner has paid the largest amount of money in total for their dogs? Show the owner id and zip code."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel. \\n Question: select id from tv_channel where country in ( select country from tv_channel group by country having count ( * ) > 2 )", "answer": ["find id of the tv channels that are from countries with more than two tv channels"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname ( General Motors ) , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select distinct t1.make, t1.model from car_names as t1 join model_list as t2 on t1.model = t2.model join car_makers as t3 on t2.maker = t3.id join cars_data as t4 on t1.makeid = t4.id where t3.fullname = 'General Motors' order by t4.mpg desc limit 1", "answer": ["What is the make and model of the car manufactured by General Motors that gets the highest mpg? || How many cars manufactured by General Motors get more than 15 mpg? | What is the make and model of the car with the largest horsepower? | How about models that weight more than 3500? | Which models are manufactured by the maker with the name \"General Motors\"?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: select template_id from templates except select template_id from documents", "answer": ["Alright!  Can you show me a list of the Template_IDs for each template that is not associated with a Document_ID? || Thanks!  Unfortunately, I am seeing only the Template_IDs.  Can you update the list to show the document IDs as well? | Hello there!  Can you please list all the template IDs and which document IDs they are associated with?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent ( america ) | countries : countryid , countryname , continent | car_makers : id , maker , fullname ( American Motor Company ) , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select id from car_makers", "answer": ["What are all the ids of car makers? || Here is the result table of the full name of car makers and the number of models they made. For example, the car maker \"American Motor Company\" made 1 model. | How many models does each car maker make?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | concert_singer | stadium : stadium_id , location , name ( Stark's Park ) , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id. \\n Question: select capacity from stadium where name = \"Stark s Park\"", "answer": ["what is the capacity of Stark's Park || show the stadium name and the number of concerts in each stadium | how many concert are presented on the table"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | museum_visit | museum : museum_id , name , num_of_staff , open_year | visitor : id , name , level_of_membership , age | visit : museum_id , visitor_id , num_of_ticket , total_spent. \\n Question: select name, level_of_membership from visitor where age > 20", "answer": ["What are the names and level of membership for all visitors over the age of 20? || Can you list their IDs and ages too? | List the names of all visitors who visited some museums more than once, please."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade. \\n Question: select course from course", "answer": ["what are the courses || how many course id numbers"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id. \\n Question: select t2.other_details from transcript_contents as t1 join transcripts as t2 on t1.transcript_id = t2.transcript_id group by t1.transcript_id having count ( * ) > = 2", "answer": ["Yes! || Do you mean other details of those transcripts with at least 2 course results? | Show me other details of those transcripts | Show me the date and id of the transcript with at least 2 course results."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: select document_id from paragraphs group by document_id order by count ( * ) desc limit 1", "answer": ["and the document with the most number of paragraphs? || What is the document id with least number of paragraphs?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height. \\n Question: select final_table_made from poker_player order by earnings desc limit 1", "answer": ["What about the poker player with the most earnings how many final table did they make? || How many final tables did the poker player with the least amount of earnings make? | Can you rank the poker players earnings from highest to lowest? | How much did the winning poker player make?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select name from country order by surfacearea desc limit 1", "answer": ["Which nation has the largest surface area? || What are the names of the nations with the 3 lowest populations?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select avg ( percentage ) from countrylanguage", "answer": ["What is the average percent?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | network_1 | highschooler : id , name ( Tiffany , Gabriel ) , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: select grade from highschooler where name = \"Gabriel\" and id = 1689", "answer": ["yes || Did you mean the Gabriel with ID 1689? | what grade is gabriel | how many high schoolers in grade 9 | what grade is tiffany | what are the name of high schoolers in grade 9 | which grade has the \nmost high schoolers"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height. \\n Question: select nationality from people", "answer": ["List all the nationalities in the table || List all the nationalities in the table with no duplicate records"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade. \\n Question: select name, age from teacher", "answer": ["Sure. Can you tell me the age of each teacher? || Can you tell me the names of teachers and the number of courses they teach? | How many courses do you have? | How many teachers are there?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name , last_name ( Last , Date ) , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: select first_name, last_name from players where hand = 'L' order by birth_date", "answer": ["List the first and last name of all players who are left / L hand in the order of birth date."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language ( English ) , isofficial , percentage. \\n Question: select avg(lifeexpectancy) from country where name not in (select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"English\" and t2.isofficial = \"T\")", "answer": ["What is average life expectancy in the countries where English is not the official language?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id. \\n Question: select department_description from departments where department_name like '%computer%'", "answer": ["What's the description of that department? || What is the full name of the department that has the substring computer in its name?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height. \\n Question: select t1.nationality from people as t1 join poker_player as t2 on t1.people_id = t2.people_id order by t2.final_table_made", "answer": ["What are the nationalities of the poker players ordered by the final tables in ascending order? || Can you list all the names of the poker players ordered by the final tables in ascending order please?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality ( Bulgaria , Russia ) , name , birth_date , height. \\n Question: select count ( * ) from people where nationality = 'Bulgaria'", "answer": ["Count the number of records where nationality is Bulgaria || Count the number of records where nationality is Russia | List all the nationalities in the table | List all the nationalities in the table with no duplicate records"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position. \\n Question: select name from singer where birth_year = 1948 or birth_year = 1949", "answer": ["Show the name of singers whose birth year is either 1948 or 1949?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport. \\n Question: select count ( * ) from airports", "answer": ["How many airports are there?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id. \\n Question: select semester_name from semesters where semester_id not in ( select semester_id from student_enrolment )", "answer": ["Awesome!  Much appreciated!  Can you filter this list to show just the semester names which do not have any \nstudent enrolment ids associated, or in other words semesters which do not have any students enrolled? || Yes!  My apologies for being unclear.  How many different semester name types are on this list? | Do  you  mean  the type of  semester name？ | Hi there! How many different semesters does this list have?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id. \\n Question: select t1.first_name, t1.middle_name, t1.last_name, t1.student_id from students as t1 join student_enrolment as t2 on t1.student_id = t2.student_id group by t1.student_id having count(*) = 2", "answer": ["Who are enrolled in 2 degree programs in one semester? List the first name, middle name and last name and the id."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent ( america ) | countries : countryid , countryname , continent | car_makers : id , maker ( amc ) , fullname ( American Motor Company ) , country | model_list : modelid , maker , model ( amc ) | car_names : makeid , model ( amc ) , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select distinct ( t1.maker ) from car_makers as t1 join model_list as t2 on t1.id = t2.maker where t1.id = 2", "answer": ["I mean id || Did you mean Id or ModelId? | Who is maker for the ID number 2 ? | Can you tell me the model id of the maker amc ? | Can you tell me the ID of the american motor company ?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state ( Hawaii ) , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select email_address from professionals where state = 'Hawaii'", "answer": ["Please list the emails of all the professionals who live in the state of Hawaii?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured. \\n Question: select count ( * ) from battle where id not in ( select lost_in_battle from ship where tonnage = '225' )", "answer": ["How many battles did not lose any ship with tonnage 225?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id. \\n Question: select t2.name, t2.location from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014 intersect select t2.name, t2.location from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2015", "answer": ["Find the name and location of the stadiums which some concerts happened in the years of both 2014 and 2015."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name ( Bulldog ) | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select count ( * ) from breeds as t1 join dogs as t2 on t1.breed_code = t2.breed_code where t1.breed_name = \"Bulldog\"", "answer": ["what is the total count for bulldog? || which breed is the top ranked?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code ( Apartment , House ) , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code ( Apartment , House ) , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description. \\n Question: select property_name, room_count from properties where property_type_code = \"House\" union select property_name, room_count from properties where property_type_code = \"Apartment\" and room_count > 1", "answer": ["How many rooms do each of those have? || What are the names of the properties that are either houses or apartments with more than one room? | What are the names of the properties with more that one room?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select count ( * ) from ( select * from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count ( * ) = 1 )", "answer": ["How many professionals have done only one treatment? || What are the professional id of the professionals who have done at least two types of treatments? | What is the phone number of the professional who has done the most treatment."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | pets_1 | student : stuid , lname ( Kim ) , fname ( Tracy ) , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight. \\n Question: select t1.lname, t1.fname, t1.sex from student as t1 join has_pet as t2 on t1.stuid = t2.stuid group by t1.stuid having count ( * ) > 1", "answer": ["What gender is Kim Tracy? || What are their names? | How many students have more than one pet?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select count(*) from dogs where age < ( select avg(age) from dogs )", "answer": ["How many dogs have an age below the average?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( Asia ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select localname from country", "answer": ["yes || Did you mean to ask for all local names? | what is the local name | give me the total surface area of the continent\n Asia"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state ( Virginia ) , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select t1.first_name, t2.name from owners as t1 join dogs as t2 on t1.owner_id = t2.owner_id where t1.state = 'Virginia'", "answer": ["Which dogs are owned by someone who lives in Virginia? List the owner's first name and the dog's name."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( Europe ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select name from country where continent = \"Europe\"", "answer": ["Can you please list all the names of the countries that are in the continent of Europe?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode ( DYS , APG ) , airportname , country , countryabbrev | flights : airline , flightno , sourceairport (  APG ,  DYS ) , destairport (  APG ,  DYS ). \\n Question: select airportname from airports where airportcode = \"DYS\"", "answer": ["Find the airport names of DYS? || Find the flight number of APG? | Which city has least number of departing flights? | How many flights in this table?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height. \\n Question: select count ( poker_player_id ) from poker_player", "answer": ["how many poker players? || yes names | Do you mean the names of the poker players whose earnings is more than 300000? | Name players whose earnings are more than 300000."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | museum_visit | museum : museum_id , name , num_of_staff , open_year | visitor : id , name , level_of_membership , age | visit : museum_id , visitor_id , num_of_ticket , total_spent. \\n Question: select name, level_of_membership from visitor where id not in ( select t2.visitor_id from museum as t1 join visit as t2 on t1.museum_id = t2.museum_id where t1.open_year > 2010 )", "answer": ["Can you please provide me with the names and membership levels of these three members? || Hello there!  Can you tell me the total number of visitors who did not visit any museum that was opened after 2010?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country ( France ) , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id. \\n Question: select avg(age), min(age), max(age) from singer where country = 'France'", "answer": ["What is the average, minimum, and maximum age of all singers from France?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype ( cat , dog ) , pet_age , weight. \\n Question: select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'dog' intersect select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat'", "answer": ["Which of those two students have a cat as their pet in addition also having a dog? || Can you show me a list of all of the students IDs for students who have dogs as their pet type?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select count ( * ) from dogs where dog_id in ( select dog_id from treatments )", "answer": ["how many female dogs have gone through treatment"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: select count ( distinct friend_id ) from friend", "answer": ["Can you tell me the total number of Friend IDs? || Can you tell me the total number of student IDs? | Yes | Did you mean the id of all High schoolers? | Can you show me a list of all student IDs? | Can you show me a list of student IDs and their friends IDs?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: select loser_rank_points from matches order by winner_age limit 3", "answer": ["What are points of the 3 youngest winners? || Find the names of the 3 youngest winners across all matches"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language ( English ) , isofficial , percentage. \\n Question: select distinct t1.region from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"English\"", "answer": ["What are the regions that use English, please?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | museum_visit | museum : museum_id , name , num_of_staff , open_year | visitor : id , name , level_of_membership , age | visit : museum_id , visitor_id , num_of_ticket , total_spent. \\n Question: select name from museum where museum_id not in (select museum_id from visit)", "answer": ["What is the name of the museum that had no visitor yet?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height. \\n Question: select people_id from poker_player order by earnings desc limit 1", "answer": ["What is the highest earner's people ID? || What is the money rank of the poker player with the highest earnings?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade. \\n Question: select t3.name, t2.course from course_arrange as t1 join course as t2 on t1.course_id = t2.course_id join teacher as t3 on t1.teacher_id = t3.teacher_id", "answer": ["list the name of the teachers and the courses assigned for them to teach"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name ( Nora ) , last_name ( Haley ) , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select street from owners where first_name = \"Nora\" and last_name = \"Haley\"", "answer": ["Which street does  Nora Haley live?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( Asia ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select name from country where continent = \"Asia\" order by lifeexpectancy limit 1", "answer": ["What is the name of the country with the shortest life expectancy in Asia?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | museum_visit | museum : museum_id , name , num_of_staff , open_year | visitor : id , name ( Fernando Gago ) , level_of_membership , age | visit : museum_id , visitor_id , num_of_ticket , total_spent. \\n Question: select level_of_membership from visitor where name = \"Fernando Gago\"", "answer": ["What is Fernando Gago's membership level? || What museum did he visit before 2009? | What is the name of the visitor who visited both a museum opened before 2009 and a museum opened after 2011?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model ( buick ) | car_names : makeid , model ( buick ) , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select t2.year from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t1.model = \"buick\"", "answer": ["Yes || Did you want to ask for the year on which the car model buick was launched? | Which year launch the car model  buick? | Yes | Did you mean to ask for the weight of the car with make id 1? | What is the weight of make id 1?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype ( dog ) , pet_age , weight. \\n Question: select weight from pets order by pet_age limit 1", "answer": ["Find the weight of the youngest dog."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city ( Aberdeen  , Abilene  ) , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport. \\n Question: select count(*) from flights as t1 join airports as t2 on t1.destairport = t2.airportcode where t2.city = \"Aberdeen\" or t2.city = \"Abilene\"", "answer": ["Find the number of flights landing in the city of Aberdeen or Abilene."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city ( Aberdeen  ) , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport. \\n Question: select count ( * ) from flights as t1 join airports as t2 on t1.destairport = t2.airportcode where t2.city = \"Aberdeen\"", "answer": ["How many flights are arriving in the city called Aberdeen?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name ( Super bootcamp ) , theme , stadium_id , year | singer_in_concert : concert_id , singer_id. \\n Question: select year from concert where concert_name = \"Super bootcamp\"", "answer": ["what year was super bootcamp? || show the name and theme for all concerts and the number of singers in each concert."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by ( Todd Casey ) , original_air_date , production_code , channel. \\n Question: select country from tv_channel except select t1.country from tv_channel as t1 join cartoon as t2 on t1.id = t2.channel where t2.written_by = 'Todd Casey'", "answer": ["which countries' tv channels are not playing any cartoon written by Todd Casey?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name ( Jaclyn , Nora ) , last_name ( Stoltenberg , Haley ) , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select email_address from owners where first_name = \"Jaclyn\" and last_name = \"Stoltenberg\"", "answer": ["Yes Jaclyn Stoltenberg || Do you mean the owner with first name Jaclyn? | What is the email address of Jaclyn? | What is her home phone number? | Which street does  Nora Haley live?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline ( Delta Airlines ) , abbreviation ( Delta ) , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport. \\n Question: select destairport from flights where flightno = 44", "answer": ["what is the destination airport of flight no 44? || delta airline is from which country?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: select document_id from documents group by template_id having count ( * ) > 1", "answer": ["Great!  Can you show me the corresponding document that used each of those template IDs on the list you just provided me? || How many of those 12 template IDs are used by more than one document? | Hi!  Can you tell me how many unique template IDs there are?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( Africa , Asia ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select name,population from country where continent = \"Asia\"", "answer": ["What are the names and populations of every country in Asia? || What are the populations of every country in Africa?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id. \\n Question: select count ( * ) from stadium where average > 1000", "answer": ["How many stadiums can accommodate more than 1000 people in average.?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select t1.continent, count ( * ) from continents as t1 join countries as t2 on t1.contid = t2.continent join car_makers as t3 on t2.countryid = t3.country group by t1.continent", "answer": ["Yes please, in a table if possible? || Do you want the name of the continent and the count of car makers on each of them? | Can you list how many car makers are on each continent please?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent ( america ) | countries : countryid , countryname , continent | car_makers : id , maker , fullname ( American Motor Company ) , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select id from car_makers as t1 join model_list as t2 on t1.id = t2.maker where t1.fullname = 'American motor Company'", "answer": ["Can you tell me the ID of the american motor company ?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name ( Bachelor ) , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id. \\n Question: select distinct t2.semester_id from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id where degree_summary_name = 'Master'", "answer": ["Which semester did bachelor students enroll? List the id."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype ( cat ) , pet_age , weight. \\n Question: select t1.lname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat'", "answer": ["Hmm, I want to know the last names of students who have cats. || Can you tell me the last names of students who have pets?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id. \\n Question: select count ( * ) from students as t1 join addresses as t2 on t1.current_address_id = t2.address_id where t2.state_province_county = 'NorthCarolina'", "answer": ["how many students live in North Carolina?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: select distinct winner_name, winner_rank from matches order by winner_age limit 3", "answer": ["Find the name and rank of the 3 youngest winners across all matches."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id. \\n Question: select t1.last_name from students as t1 join addresses as t2 on t1.current_address_id = t2.address_id where t2.state_province_county = 'NorthCarolina' except select distinct t3.last_name from students as t3 join student_enrolment as t4 on t3.student_id = t4.student_id", "answer": ["Find the last name of the students who currently live in the state of North Carolina but have not registered in any degree program."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport. \\n Question: select count ( * ) from airlines", "answer": ["how many airline's there"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight. \\n Question: select count ( * ) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid group by t1.stuid having count ( * ) > 1", "answer": ["How many students have more than one pet?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select language from countrylanguage group by language order by count(*) desc limit 1", "answer": ["Which language is spoken by the largest number of countries?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode ( AHD ) , airportname , country , countryabbrev | flights : airline , flightno , sourceairport (  AHD ) , destairport (  AHD ). \\n Question: select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = \" AHD\"", "answer": ["Can you list the names of all the unique airlines that belong to those flight numbers? || Can you list all the flight numbers that have a source airport value of AHD?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: select max ( grade ) from highschooler", "answer": ["yes || Did you mean to ask for the highest grade? | what is the best grade ? | what is the name of higshoolers that starting with 'A'? | what is the average of grades?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code ( BK ) , template_type_description | templates : template_id , version_number , template_type_code ( BK ) , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: select count ( * ) from templates as t1 join documents as t2 on t1.template_id = t2.template_id where t1.template_type_code = \"BK\"", "answer": ["How many documents have template type code BK?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: select id from highschooler", "answer": ["Yes || Did you mean the id of all High schoolers? | Can you show me a list of all student IDs? | Can you show me a list of student IDs and their friends IDs?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option ( Option ) | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel. \\n Question: select package_option from tv_channel where country in ( select country from tv_channel group by country having count ( * ) > 2 )", "answer": ["What is the package option for that channel? || find id of the tv channels that are from countries with more than two tv channels"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: select sum ( ranking_points ), t1.first_name from players as t1 join rankings as t2 on t1.player_id = t2.player_id group by t1.first_name", "answer": ["find the total ranking point for each player and their first name"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id. \\n Question: select semester_name from semesters where semester_id not in( select semester_id from student_enrolment )", "answer": ["Which semesters do not have any student enrolled? List the semester name."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight. \\n Question: select t2.petid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.lname = 'Smith'", "answer": ["Find the id of the pet owned by student whose last name is ‘Smith’."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height. \\n Question: select distinct nationality from people", "answer": ["List all the nationalities in the table with no duplicate records"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | singer | singer : singer_id , name ( Alice Walton ) , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position. \\n Question: select sales from song where song_id = 3", "answer": ["how many sales from song id 3 || what is the Citizenship of Alice Walton | how many  singer there"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id. \\n Question: select first_name, middle_name, last_name from students order by date_left asc limit 1", "answer": ["Who is the earliest graduate of the school? List the first name, middle name and last name."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel. \\n Question: select channel from cartoon order by original_air_date limit 1", "answer": ["find the channel of the most recently aired cartoon. || which is the most recently aired cartoon?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus. \\n Question: select max ( number_products ) from shop", "answer": ["What is the most products that one shop has? || Yes | Did you mean to ask for the number of shops? | How many stores are there?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance. \\n Question: select t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id = t2.conductor_id group by t2.conductor_id having count(*) > 1", "answer": ["Show the names of conductors that have conducted more than one orchestras."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: select student_id from friend intersect select liked_id from likes", "answer": ["Show the ids of high schoolers who have friends and are also liked by someone else."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select count ( * ) from dogs where dog_id in ( select dog_id from treatments )", "answer": ["Tell me how many dogs have gone through any treatments."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype ( dog , cat ) , pet_age , weight. \\n Question: select distinct t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat' or t3.pettype = 'dog'", "answer": ["Great. Can you tell me the first names of these 3 students? || and what about the number that have a cat as a pet? | hi, what number of students have a dog as a pet?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select min ( age ) from dogs where dog_id in ( select dog_id from treatments )", "answer": ["yes || Do you mean the youngest among those that have gone through any treatment? | Tell me how old the youngest is. | Tell me how many dogs have gone through any treatments."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select t1.contid, t1.continent, count(*) from continents as t1 join countries as t2 on t1.contid = t2.continent group by t1.contid;", "answer": ["How many countries does each continent have? List the continent id, continent name and the number of countries."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language ( English ) , isofficial , percentage. \\n Question: select name from country where name not in ( select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"English\" and t2.isofficial = \"T\" )", "answer": ["What are all of the countries where English isn't the official language?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name ( Herat , Kabul ) , countrycode , district ( Herat ) , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select region from country as t1 join city as t2 on t1.code = t2.countrycode where t2.name = \"Qandahar\"", "answer": ["which region is the city quandahar || which region is the city herat located | which region is the city kabul located"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name ( Afghanistan ) , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select count(*) from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.name = \"Afghanistan\" and isofficial = \"T\"", "answer": ["How many official languages does Afghanistan have?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: select avg ( grade ) from highschooler", "answer": ["what is the average of grades? || what is the average of friend id?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name ( Timmothy ) , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id. \\n Question: select date_first_registered, date_left from students where first_name = \"Timmothy\"", "answer": ["Which date did he register and also which date did he leave? || Which programs has the student by the first name Timmothy enrolled?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode ( A Love of a Lifetime ) , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel. \\n Question: select viewers_m from tv_series where episode = \"A love of a Lifetime\"", "answer": ["How may viewers does \"A love of a lifetime\" have? || What is the TV Channel of TV series \"A love of a lifetime\"?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport. \\n Question: select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline group by t1.airline having count ( * ) < 200", "answer": ["Find all airlines that have fewer than 200 flights."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code ( Apartment , House ) , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code ( Apartment , House ) , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description. \\n Question: select property_name from properties where property_type_code = \"House\" union select property_name from properties where property_type_code = \"Apartment\" and room_count > 1", "answer": ["What are the names of the properties that are either houses or apartments with more than one room? || What are the names of the properties with more that one room?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select name from country order by population asc limit 3", "answer": ["What are the names of the nations with the 3 lowest populations?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select t1.owner_id, t2.dog_id ,t3.cost_of_treatment from owners as t1 join dogs as t2 on t1.owner_id = t2.owner_id join treatments as t3 on t2.dog_id = t3.dog_id", "answer": ["Hmm, can you put the owner ids, dog ids and the cost of treatment in a table? || I want you to extract just the owner ids and zip codes from the table. Does it make sense? | can  you  give more infor  about  this question? | Can you show me a list of owner ids and zip codes?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description ( Presentation ) | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: select count ( * ) from ref_template_types as t1 join templates as t2 on t1.template_type_code = t2.template_type_code where t1.template_type_description = \"Presentation\"", "answer": ["Hello!  How many template IDs have the description of \"Presentation\"?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select distinct t1.model from model_list as t1 join car_names as t2 on t1.model = t2.model join cars_data as t3 on t2.makeid = t3.id join car_makers as t4 on t1.maker = t4.id where t3.weight < 3500", "answer": ["which models are lighter than 3500?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus. \\n Question: select city from employee where age < 30 group by city having count(*) > 1", "answer": ["Which cities do more than one employee under age 30 come from?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name ( Kabul ) , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select region from country as t1 join city as t2 on t1.code = t2.countrycode where t2.name = \"Kabul\"", "answer": ["Which region is the city Kabul located in?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: select id from highschooler except select student_id from friend", "answer": ["Show ids of all students who do not have any friends."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language ( English ) , isofficial , percentage. \\n Question: select avg ( lifeexpectancy ) from country where name not in ( select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"English\" and t2.isofficial = \"T\" )", "answer": ["What is the average life expectancy in each of those countries? || What are all of the countries where English isn't the official language?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | voter_1 | area_code_state : area_code , state ( NY ) | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state ( NY ) , contestant_number , created. \\n Question: select count ( * ) from votes where contestant_number = '5'", "answer": ["Okay.  How many vote IDs correspond to contestant number 5? || Thank you!  Can you provide me with a list of all of the different contestant numbers? | Can you tell me what the total number of votes are for the states of \"NY\" and \"CA\"?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height. \\n Question: select t1.name from people as t1 join poker_player as t2 on t1.people_id = t2.people_id order by t2.earnings desc limit 1", "answer": ["What is the name of the poker player with the highest earnings? || What are the nationalities of the poker players ordered by the final tables in ascending order? | Can you list all the names of the poker players ordered by the final tables in ascending order please?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline ( United Airlines ) , abbreviation , country | airports : city , airportcode ( AHD ) , airportname , country , countryabbrev | flights : airline , flightno , sourceairport (  AHD ) , destairport (  AHD ). \\n Question: select count(*) from airlines as t1 join flights as t2 on t2.airline = t1.uid where t1.airline = \"United Airlines\" and t2.sourceairport = \"AHD\"", "answer": ["How many 'United Airlines' flights depart from Airport 'AHD'?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: select first_name, country_code from players order by birth_date limit 1", "answer": ["Find the first name and country code of the oldest player."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name ( Angola ) , continent ( Asia ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname ( Angola ) , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select lifeexpectancy from country where localname = 'Angola'", "answer": ["What is the life expectancy rate in Angola? || Which language has 9.5%? | What is the population in Asian continent?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id. \\n Question: select t1.last_name from students as t1 join addresses as t2 on t1.current_address_id = t2.address_id where t2.state_province_county = 'NorthCarolina' except select distinct t3.last_name from students as t3 join student_enrolment as t4 on t3.student_id = t4.student_id", "answer": ["What are the last names of the students who live in North Carolina but have not registered in any degree program? || What about their first names? | Could you tell me the last names of all the students who live in the state of North Carolina?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname ( usa ) , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select count ( * ) from model_list as t1 join car_makers as t2 on t1.maker = t2.id join countries as t3 on t2.country = t3.countryid where t3.countryname = 'usa'", "answer": ["how many car models are produced in the USA?"], "label": "QA"}
