{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: select template_type_code from templates group by template_type_code having count(*) < 3", "answer": ["Show all template type codes with less than three templates."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: select t1.document_id, t2.document_name, count(*) from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id group by t1.document_id", "answer": ["Show all document ids, names and the number of paragraphs in each document."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name ( Brazil ) , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select population, lifeexpectancy from country where name = \"Brazil\"", "answer": ["Give me Brazilâ€™s population and life expectancies."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id. \\n Question: select t1.course_name from courses as t1 join student_enrolment_courses as t2 on t1.course_id = t2.course_id group by t1.course_name order by count(*) desc limit 1", "answer": ["What's the name of that course? || How many enrollments does the course with most enrollments have? | What's the name of the course with the least number of enrollments?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( Asia ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select t2.language from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.continent = \"Asia\" group by t2.language order by count (*) desc limit 1", "answer": ["Which one is used by the largest number of Asian countries? || What are all the different languages used in the continent of Asia?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( Europe , Asia ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select sum(surfacearea) from country where continent = \"Asia\" or continent = \"Europe\"", "answer": ["What is the total surface area summed up? || What is the surface area of each country? | What are the countries in the continents of Asia or Europe?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select mpg, horsepower, accelerate from cars_data where cylinders = 8 or year < 1980;", "answer": ["Also include the cars that have 8 cylinders! || Show me the mpg, horsepower and accelerate for all the cars that were produced before 1980!"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight. \\n Question: select distinct t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid", "answer": ["What are the different first names? || Which students have pets?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title ( The Rise of the Blue Beetle! ) , directed_by , written_by , original_air_date , production_code , channel. \\n Question: select directed_by from cartoon where title = \"The rise of the blue beetle!\"", "answer": ["How about its director? || Tell me the author of the cartoon \"The Rise of the Blue Beetle!\""], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select * from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.weight > (select avg(weight) from cars_data)", "answer": ["List all the car information with weights above this? || What is the average weight of all the cars?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select * from country group by governmentform having avg(lifeexpectancy) > 72", "answer": ["The countries with which government form have an average life expectancy greater than age 72?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform ( Republic ) , headofstate , capital , code2 | countrylanguage : countrycode , language ( English ) , isofficial , percentage. \\n Question: select code from country where governmentform ! = \"Republic\" except select countrycode from countrylanguage where language = \"English\"", "answer": ["Return the codes of countries that do not speak English and do not have Republics for governments."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select professional_id, role_code, email_address from professionals except select t1.professional_id, t1.role_code, t1.email_address from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id", "answer": ["Which professional did not operate any treatment on dogs? List the professional's id, role and email."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id. \\n Question: select song_name, song_release_year from singer order by age limit 1", "answer": ["Show the name and the release year of the song by the youngest singer."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name ( Lettice ) , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured. \\n Question: select t1.name, t1.date from battle as t1 join ship as t2 on t1.id = t2.lost_in_battle where t2.name = 'HMS Atlanta'", "answer": ["Same for 'HMS Atlanta', please. || List the name and date of the battle that has lost the ship named 'Lettice'"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus. \\n Question: select name from shop where number_products > (select avg(number_products) from shop)", "answer": ["how about more than? || Find the names of stores whose number products is less than the average. | what is the average number of products? | show the name and number of product for all shops."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade. \\n Question: select * from course_arrange", "answer": ["Find all the course arrangements."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | museum_visit | museum : museum_id , name , num_of_staff , open_year | visitor : id , name , level_of_membership , age | visit : museum_id , visitor_id , num_of_ticket , total_spent. \\n Question: select t2.visitor_id, t1.name, t1.level_of_membership from visitor as t1 join visit as t2 on t1.id = t2.visitor_id group by t2.visitor_id order by sum(t2.total_spent) desc limit 1", "answer": ["What are the id, name and membership level of visitors who have spent the largest amount of money in total in all museum tickets?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode ( A Love of a Lifetime ) , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel. \\n Question: select t1.series_name from tv_channel as t1 join tv_series as t2 on t1.id = t2.channel where t2.episode = \"A love of a Lifetime\"", "answer": ["And What is its TV Channel? || How about its weekly rank? | Tell me the rating of the episode titled \"A Love of a Lifetime\"."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | museum_visit | museum : museum_id , name , num_of_staff , open_year | visitor : id , name , level_of_membership , age | visit : museum_id , visitor_id , num_of_ticket , total_spent. \\n Question: select t1.id, t1.name, t1.age from visitor as t1 join visit as t2 on t1.id = t2.visitor_id group by t1.id having count(*) > 1", "answer": ["find the id, name and age for visitors who visited some museums more than once."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport. \\n Question: select airline, abbreviation from airlines", "answer": ["List all airline names and their abbreviations."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id. \\n Question: select t2.name, t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year >= 2014 group by t2.stadium_id order by count(*) desc", "answer": ["Order the results in descending order of the number of concerts in year 2014 or after. || Show all stadium names and their capacities."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select t1.professional_id, t1.cell_number from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count(*) = 1", "answer": ["Among the results, who did only 1 type of treatment? List the professional ids and cell phone numbers of them. || Add the counts of them also. | List the professional first names and their types of treatments."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus. \\n Question: select t2.name from hiring as t1 join shop as t2 on t1.shop_id = t2.shop_id", "answer": ["what are the shops' names?' || how many shops are hiring?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance. \\n Question: select t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id = t2.conductor_id where year_of_founded > 2008", "answer": ["Who has conducted orchestras founded after 2008? || Please show the names of the conductors."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype ( dog , cat ) , pet_age , weight. \\n Question: select distinct t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat' or t3.pettype = 'dog'", "answer": ["Also, combine those names with those who have a dog. || Of those names, which ones correspond to somebody who has a cat? | what is the first name of every student?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height. \\n Question: select * from poker_player order by earnings desc", "answer": ["Sort all the poker players in descending order of earnings."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select min(cost_of_treatment), max(cost_of_treatment), avg(cost_of_treatment) from treatments", "answer": ["What is the minimum, maximum and average value of the treatment costs?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: select t1.document_id, t2.document_name from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id group by t1.document_id order by count(*) desc limit 1", "answer": ["Which of them is the longest? || For each of these results, count the number of paragraphs. | Also show the paragraph id for those documents. | Show the id number and name for all documents."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created. \\n Question: select state from votes", "answer": ["Show all info about votes."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | pets_1 | student : stuid , lname ( Smith ) , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight. \\n Question: select t2.petid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.lname = 'Smith'", "answer": ["What is the id of the pet owned by the student whose last name is 'Smith'?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname ( General Motors ) , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select distinct t2.model from car_names as t1 join model_list as t2 on t1.model = t2.model join car_makers as t3 on t2.maker = t3.id join cars_data as t4 on t1.makeid = t4.id where t3.fullname = 'General Motors' or t4.weight > 3500;", "answer": ["Which distinctive models are produced by maker with the full name General Motors or weighing more than 3500?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline ( JetBlue Airways ) , abbreviation ( JetBlue ) , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport. \\n Question: select count(*) from flights as t1 join airlines as t2 on t1.airline = t2.uid where t2.airline = \"JetBlue Airways\"", "answer": ["Give the number of Jetblue Airways flights."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select * from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.weight < (select avg(weight) from cars_data)", "answer": ["How about below this? || List all the car information with weights above this? | What is the average weight of all the cars?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created. \\n Question: select * from votes", "answer": ["Show all votes."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created. \\n Question: select max(area_code), min(area_code) from area_code_state", "answer": ["Give me both. || How about smallest one? | What is the largest one? | Show all area codes."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( Africa ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform ( Republic ) , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select avg(lifeexpectancy) from country where continent = \"Africa\" and governmentform = \"Republic\"", "answer": ["What is the average of their life expectancies? || Which countries are also republics? | Which countries are in Africa?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name ( Australian Open ) , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: select count(distinct winner_name) from matches where tourney_name = 'Australian Open'", "answer": ["Winners? || How  many different losers participated in the Australian Open?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: select t2.tours from players as t1 join rankings as t2 on t1.player_id = t2.player_id order by t2.tours asc limit 1", "answer": ["How many tours did the player who did the least number of tours do? || How many players are there?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | museum_visit | museum : museum_id , name , num_of_staff , open_year | visitor : id , name , level_of_membership , age | visit : museum_id , visitor_id , num_of_ticket , total_spent. \\n Question: select count(*) from museum where museum_id not in (select museum_id from visit)", "answer": ["how many of them have not had any visitors yet? || how many museums are there?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select * from country where region = \"Caribbean\"", "answer": ["What are the countries in the Carribean region?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select model from car_names group by model order by count(*) desc limit 1;", "answer": ["What is the model name with the most makes? || How many makes are there for each? | What are the makes for each? | What are all the different models for each car?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select t2.language, t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.isofficial = \"T\"", "answer": ["What are the official languages of each country?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline ( United Airlines ) , abbreviation , country | airports : city , airportcode ( ASY ) , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport. \\n Question: select count(*) from airlines as t1 join flights as t2 on t2.airline = t1.uid where t1.airline = \"United Airlines\" and t2.destairport = \"ASY\"", "answer": ["How many land in ASY Airport? || How many are there? | What are the United Airlines flights?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype ( cat ) , pet_age , weight. \\n Question: select stuid from student except select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat'", "answer": ["What are the ids of the students who do not own cats as pets?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: select version_number from templates", "answer": ["Show the version number for all templates."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id. \\n Question: select department_description from departments where department_name like '%computer%'", "answer": ["What is the description of the department whose name has the substring the computer?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade. \\n Question: select t3.name, t2.course from course_arrange as t1 join course as t2 on t1.course_id = t2.course_id join teacher as t3 on t1.teacher_id = t3.teacher_id", "answer": ["Show names of teachers and the courses they are arranged to teach."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: select template_id from templates", "answer": ["Show the template id for all templates."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: select version_number, template_type_code from templates where version_number > 5", "answer": ["Also show their template type code. || Only show those with version number later than 5. | What is the version number for all template?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: select count (*) from (select t2.name from friend as t1 join highschooler as t2 on t1.student_id = t2.id intersect select t2.name from likes as t1 join highschooler as t2 on t1.liked_id = t2.id)", "answer": ["How many of them have friends? || What are their names? | How many high schoolers are liked by someone else?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured. \\n Question: select count(*) from battle where id not in ( select lost_in_battle from ship where tonnage = '225' );", "answer": ["How many battles did not lose any ship with tonnage '225'?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | museum_visit | museum : museum_id , name , num_of_staff , open_year | visitor : id , name , level_of_membership , age | visit : museum_id , visitor_id , num_of_ticket , total_spent. \\n Question: select sum(total_spent) from visit", "answer": ["find the total cost of all visits."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade. \\n Question: select count(*) from teacher", "answer": ["How many teachers are there?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city ( Anthony  ) , airportcode , airportname ( Anthony  ) , country , countryabbrev | flights : airline , flightno , sourceairport , destairport. \\n Question: select * from airports where city = \"Anthony\"", "answer": ["Find all information about the airport in the city Anthony."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname ( General Motors ) , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select count(distinct t2.model) from car_names as t1 join model_list as t2 on t1.model = t2.model join car_makers as t3 on t2.maker = t3.id where t3.fullname = 'General Motors';", "answer": ["How many different models has maker with full name General Motors produced?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport. \\n Question: select t1.abbreviation, t1.country from airlines as t1 join flights as t2 on t1.uid = t2.airline group by t1.airline order by count(*) limit 1", "answer": ["Which one has the fewest? || Order them by the number of flights that they have. | What are all the airline abbreviations and what countries are they in?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade. \\n Question: select count(*) from teacher", "answer": ["How many teachers are there?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: select name from highschooler", "answer": ["What are the names of all the highshcool students?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: select version_number from templates", "answer": ["What is the version number for all template?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select t1.fullname, t2.model from car_makers as t1 join model_list as t2 on t1.id = t2.maker;", "answer": ["Also include the car models produced by each! || Show the full names of all the different car makers?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id. \\n Question: select transcript_date from transcripts order by transcript_date desc limit 1", "answer": ["What is the last transcript release date?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id. \\n Question: select count(*), student_course_id from transcript_contents group by student_course_id order by count(*) desc limit 1", "answer": ["How many times at most? || How many times, at minimum, can a course enrollment result show in different transcript? Show me the course enrollment id."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus. \\n Question: select name from employee where employee_id not in (select employee_id from evaluation)", "answer": ["show the names of the employees who never won. || what are their names? | find the number of different employees who were awarded in the past evaluations."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( Africa ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select count(distinct governmentform) from country where continent = \"Africa\"", "answer": ["How many different forms of governments are there in Africa?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode ( A Love of a Lifetime ) , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel. \\n Question: select rating from tv_series where episode = \"A love of a Lifetime\"", "answer": ["Tell me the rating of the episode titled \"A Love of a Lifetime\"."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode ( CVO , APG ) , airportname , country , countryabbrev | flights : airline , flightno , sourceairport (  APG ,  CVO ) , destairport (  APG ,  CVO ). \\n Question: select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = \"CVO\" except select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = \"APG\"", "answer": ["Which airlines have departures from CVO but not from APG airports?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade. \\n Question: select count(*) from teacher", "answer": ["How many are there? || Show all the teachers."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.weight < (select avg(weight) from cars_data)", "answer": ["Find the model of the car whose weight is below the average weight."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select model, count(*) from car_names group by model;", "answer": ["How many makes are there for each? || What are the makes for each? | What are all the different models for each car?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode ( APG ) , airportname , country , countryabbrev | flights : airline , flightno , sourceairport (  APG ) , destairport (  APG ). \\n Question: select flightno from flights where sourceairport = \"APG\"", "answer": ["Of these, which correspond to flights leaving from APG? || What are all the flight numbers?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code ( Employee ) , first_name , street , city , state ( Connecticut ) , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select count(*) from professionals where state = 'Connecticut'", "answer": ["How many of them live in Connecticut? || List all the professionals who are Employees."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight. \\n Question: select count(*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.age > 20", "answer": ["How many pets are owned by students that have an age greater than 20?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position. \\n Question: select name, citizenship from singer", "answer": ["Show the names and citizenships of singers."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: select count(*) from highschooler", "answer": ["How many high schoolers are there?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: select minutes from matches order by minutes asc limit 1", "answer": ["Give the length of the match in minutes of the shortest match."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight. \\n Question: select distinct t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid", "answer": ["What are the different first names and ages of the students who do have pets?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | orchestra | conductor : conductor_id , name , age , nationality ( USA ) , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance. \\n Question: select name from conductor where nationality != 'USA'", "answer": ["What are the names of conductors whose nationalities are not \"USA\"?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality ( Russia ) , name , birth_date , height. \\n Question: select name from people where nationality != \"Russia\"", "answer": ["What about people whose nationality is not \"Russia\"? || What are the names of all people?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select count(t2.language), t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode group by t1.name having count(*) > 2", "answer": ["Also, how many languages are spoken in each of those countries? || Which of them speak at least three languages? | What are the names of the countries?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height. \\n Question: select t1.birth_date from people as t1 join poker_player as t2 on t1.people_id = t2.people_id order by t2.earnings asc limit 1", "answer": ["What is the birth date of the poker player with the lowest earnings?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select breed_code, count(*) from dogs group by breed_code", "answer": ["How many dogs for each breed code?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight. \\n Question: select avg(pet_age), max(pet_age), pettype from pets group by pettype", "answer": ["What is the average and maximum age for each pet type?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode ( ATO ) , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport. \\n Question: select count(*) from flights where destairport = \"ATO\"", "answer": ["How many are there? || What flights land in ATO?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode ( Double Down , Keepers ) , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel. \\n Question: select episode, rating from tv_series order by rating desc limit 3", "answer": ["Okay, I want to know the top 3 highest Rating TV series. List the TV series's Episode and Rating. || How about the rating of the episode named \"Keepers\". | Tell me the rating of the episode named \"Double Down\"."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( Asia ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select min(population) from country where continent = \"Asia\"", "answer": ["What is the maximum population of a country in Asia?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: select country_code from players group by country_code order by count(*) desc limit 1", "answer": ["Greatest number? || Which country has the least number of players? Give the country code. | Find the number of players for each country."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state ( Wisconsin ) , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state ( Wisconsin ) , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select count(*) from professionals where state = 'Wisconsin'", "answer": ["How many of them are from 'Wisconsin'? || Show the states of the professionals."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance. \\n Question: select attendance from show", "answer": ["What is the attendance of each show?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.weight < (select avg(weight) from cars_data)", "answer": ["Please, show just their model names! || How about below this? | List all the car information with weights above this? | What is the average weight of all the cars?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown ( Little Lever Urban District ) | course_arrange : course_id , teacher_id , grade. \\n Question: select name from teacher where hometown != \"Little lever urban Distric\"", "answer": ["List the name of teachers whose hometown is not \"Little Lever Urban District\"."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select t1.owner_id, t2.first_name, t2.last_name, count(*) from dogs as t1 join owners as t2 on t1.owner_id = t2.owner_id group by t1.owner_id having count(*) = 2", "answer": ["Which one has 2 dogs? || Show the number of dogs for each owner, keep the owner id."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade. \\n Question: select hometown from teacher", "answer": ["What is the hometown of each teacher?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language ( English ) , isofficial , percentage. \\n Question: select * from country where name not in (select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"English\" and t2.isofficial = \"T\")", "answer": ["Which countries do not have English as the official language? || What are the official languages of each country?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( Africa ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform ( Republic ) , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select avg(lifeexpectancy) from country where continent = \"Africa\" and governmentform = \"Republic\"", "answer": ["Give the average life expectancy for countries in Africa which are republics?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select t1.model, t2.fullname, t2.id from model_list as t1 join car_makers as t2 on t1.maker = t2.id;", "answer": ["What models have they each produced? || What are their full names and ids? | How many makers are there?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: select document_id, count(*) from paragraphs group by document_id order by document_id", "answer": ["Show all document ids and the number of paragraphs in each document. Order by document id."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code ( CV ) , template_type_description ( CV ) | templates : template_id , version_number , template_type_code ( CV ) , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name ( Robbin CV ) , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: select document_id, template_id, document_description from documents where document_name = \"Robbin CV\"", "answer": ["Also show its template id and description. || Show the document id for the one named \"Robbin CV\"? | Show the the document name for all documents."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name ( Bachelor , Master ) , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id. \\n Question: select distinct t2.semester_id from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id where degree_summary_name = 'Master' intersect select distinct t2.semester_id from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id where degree_summary_name = 'Bachelor'", "answer": ["Find the semester when both Master students and Bachelor students got enrolled in."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select countryname from countries where countryid not in (select country from car_makers);", "answer": ["Which ones have no car makers? || What are all the different country names?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created. \\n Question: select distinct state, created from votes", "answer": ["What are the distinct states and create time of all votes?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: select count(*) from highschooler where grade = 9 or grade = 10", "answer": ["How many in grade 9 or 10? || How many in each grade 11 or 12? | How many high schoolers are there?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name ( Aruba ) , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname ( Aruba ) , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select * from country where name = \"Aruba\"", "answer": ["What is the information about the country Aruba?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: select avg(minutes) from matches", "answer": ["Average? || What was the maximum length in minutes for the matches? | How many matches are there?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade. \\n Question: select name from teacher", "answer": ["Show all the teacher names."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | pets_1 | student : stuid , lname ( Smith ) , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight. \\n Question: select t2.petid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.lname = 'Smith'", "answer": ["What is their pet's id? || Of those, whose last name is smith? | Which students have pets?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name , last_name ( Date , Last ) , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name ( WTA Championships ) , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: select t1.country_code, t1.first_name from players as t1 join matches as t2 on t1.player_id = t2.winner_id where t2.tourney_name = 'WTA Championships'", "answer": ["Give first name and country code instead. || Which ones won in the tourney WTA Championships? Give their last name and birth date. | How many players are there?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id. \\n Question: select distinct country from singer where age > 20", "answer": ["What are all distinct countries for them? || Only show the results for those above 20. | Show country for all singers."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title ( The Eyes of Despero! ) , directed_by , written_by , original_air_date , production_code , channel. \\n Question: select series_name from tv_channel where id in (select channel from cartoon where title = \"The eyes of despero!\")", "answer": ["How about this channel's series name? || Tell me the TV Channel of the cartoon titled \"The Eyes of Despero!\"."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: select paragraph_text from paragraphs", "answer": ["Show all paragraph text."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: select * from templates", "answer": ["Show info for all templates."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: select country_code from players group by country_code order by count(*) asc limit 1", "answer": ["Which country has the least number of players? Give the country code. || Find the number of players for each country."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description ( Book ) | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: select template_type_code from ref_template_types where template_type_description = \"Book\"", "answer": ["Which code has template type description \"Book\"? || Also show descriptions. | Show all template type codes."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | battle_death | battle : id , name , date , bulgarian_commander ( Kaloyan ) , latin_commander ( Baldwin I ) , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured. \\n Question: select name from battle where latin_commander = 'Baldwin I'", "answer": ["How about the latin commander 'Baldwin I'? || Which battles did the bulgarian commander 'Kaloyan' fight in?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | museum_visit | museum : museum_id , name , num_of_staff , open_year | visitor : id , name , level_of_membership , age | visit : museum_id , visitor_id , num_of_ticket , total_spent. \\n Question: select name from museum where open_year > 2010", "answer": ["find the names of museums opened after 2010"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance. \\n Question: select record_company from orchestra", "answer": ["Please list the record companies."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight. \\n Question: select max(pet_age), pettype from pets group by pettype", "answer": ["For each of those, what is the maximum age? || What are the different pet types?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select breed_code, count(*) from dogs group by breed_code", "answer": ["How many dogs for each breed code?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance. \\n Question: select record_company from orchestra where year_of_founded < 2003 intersect select record_company from orchestra where year_of_founded > 2003", "answer": ["Show the record companies shared by orchestras founded before 2003 and after 2003."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: select first_name, country_code from players order by birth_date limit 1", "answer": ["Find the first name and country code of the oldest player."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: select count(*) from (select * from friend as t1 join highschooler as t2 on t1.student_id = t2.id group by t1.student_id having count(*) >= 3)", "answer": ["at least 3? || How many highschoolers have more than 5?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select * from country order by population", "answer": ["Order the countries by increasing population."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: select count(distinct template_id) from documents", "answer": ["How many are there? || Show all distinct results. | Show the template id for all documents."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: select t2.name, count(*) from likes as t1 join highschooler as t2 on t1.student_id = t2.id group by t1.student_id", "answer": ["How many people do they each like? || How about those who like others? | What are the names of the highschoolers who don't like anyone?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format ( DVD , CD ) | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance. \\n Question: select count(*) from orchestra where major_record_format = \"CD\" or major_record_format = \"DVD\"", "answer": ["How many of these orchestras are there? || List the orchestras whose record format is \"CD\" or \"DVD\"."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight. \\n Question: select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid", "answer": ["Which students have pets?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport. \\n Question: select t1.airportcode from airports as t1 join flights as t2 on t1.airportcode = t2.destairport or t1.airportcode = t2.sourceairport group by t1.airportcode order by count(*) limit 1", "answer": ["Which one has the least number of flights? || Also include codes of airports with departure flights. | What are airport codes of any airport with a arriving flight?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id. \\n Question: select country from singer", "answer": ["Show the country for all singers."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select countryname from countries where countryid not in (select t1.countryid from countries as t1 join car_makers as t2 on t1.countryid = t2.country);", "answer": ["What are the names of the countries that have no car makers?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code ( BK ) , template_type_description | templates : template_id , version_number , template_type_code ( BK ) , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: select t2.document_name from templates as t1 join documents as t2 on t1.template_id = t2.template_id where t1.template_type_code = \"BK\"", "answer": ["Show all document names using templates with template type code BK."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created. \\n Question: select vote_id, phone_number, state from votes", "answer": ["List the vote ids, phone numbers and states of all votes."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title ( Return of the Fearsome Fangs! ) , directed_by , written_by , original_air_date , production_code , channel. \\n Question: select directed_by from cartoon where title = \"Return of the fearsome fangs!\"", "answer": ["Who is the director of the cartoon titled \"Return of the Fearsome Fangs!\"?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade. \\n Question: select hometown from teacher", "answer": ["What is the hometown of each teacher?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created. \\n Question: select distinct state, created from votes", "answer": ["What are the distinct states and create time? || Among these, what is the list of states? | Show all votes?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id. \\n Question: select t1.degree_program_id, t1.degree_summary_name from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id group by t1.degree_program_id order by count(*) desc limit 1", "answer": ["Find the program which most number of students are enrolled in. List both the id and the summary."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language ( English ) , isofficial , percentage. \\n Question: select sum(population) from country where name not in (select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"English\")", "answer": ["How many people live in countries that do not speak English?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: select document_id, count(*) from paragraphs group by document_id", "answer": ["For each of these document ids, count the number of paragraphs. || Show the document id for all paragraphs."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id. \\n Question: select year from concert group by year order by count(*) desc limit 1", "answer": ["Which year has most number of concerts?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: select name from highschooler where id not in (select student_id from likes)", "answer": ["What are the names of the highschoolers who don't like anyone?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id. \\n Question: select t2.name, count(*) from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id group by t1.stadium_id", "answer": ["For each of them, also show the number of concerts. || Show the names of stadiums."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype ( dog ) , pet_age , weight. \\n Question: select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'dog'", "answer": ["Which students have dogs?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select distinct model from model_list;", "answer": ["What are all the different car models?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: select template_type_code from templates", "answer": ["Show the type codes for all templates."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: select template_id, count(*) from documents group by template_id", "answer": ["Show all template ids and number of documents using each template."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype ( cat ) , pet_age , weight. \\n Question: select major, age from student where stuid not in (select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat')", "answer": ["What major is every student who does not own a cat as a pet, and also how old are they?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: select t2.template_id, t1.template_type_code from templates as t1 join documents as t2 on t1.template_id = t2.template_id", "answer": ["Also show the template type code for those ids. || Show the template ids used by any document."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker ( amc ) , fullname , country | model_list : modelid , maker , model ( amc ) | car_names : makeid , model ( amc ) , make ( amc hornet ) | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select t1.horsepower from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t2.make = 'amc hornet sportabout (sw)';", "answer": ["What is its horsepower? || Show all the car ids with the make amc hornet sporabout (sw)?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform ( Republic ) , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select t2.language from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.governmentform = \"Republic\" group by t2.language having count(*) = 1", "answer": ["What languages are only used by a single country with a republic government?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select count(distinct language) from countrylanguage", "answer": ["What is the number of distinct languages used around the world?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name ( Jessie Alloway ) | votes : vote_id , phone_number , state , contestant_number , created. \\n Question: select contestant_name from contestants where contestant_name != 'Jessie Alloway'", "answer": ["Can you not include the name 'Jessie Alloway'? || What are their names? | Show all contestants."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height. \\n Question: select nationality, count(*) from people group by nationality", "answer": ["For each of the result, show the corresponding number of people of that nationality? || Group people by their nationality. | Show the nationality of each person."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id. \\n Question: select count(*) from concert where year = 2014 or year = 2015", "answer": ["How many are there in total? || Also show those in year 2015. | Show the concert information in year 2014."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: select document_id from documents", "answer": ["Show their ids. || Show information for all documents."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select *, count(*) from car_makers as t1 join countries as t2 on t1.country = t2.countryid group by t1.country;", "answer": ["How many car makers belong to each one? || How many countries are there?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus. \\n Question: select t1.name from employee as t1 join evaluation as t2 on t1.employee_id = t2.employee_id", "answer": ["what are their names? || find the number of different employees who were awarded in the past evaluations."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode ( APG ) , airportname , country , countryabbrev | flights : airline , flightno , sourceairport (  APG ) , destairport (  APG ). \\n Question: select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = \"APG\"", "answer": ["Which airlines have flights departing from APG?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position. \\n Question: select t1.name from singer as t1 join song as t2 on t1.singer_id = t2.singer_id group by t1.name having count(*) > 1", "answer": ["Show the names of singers that have more than one song."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype ( cat ) , pet_age , weight. \\n Question: select distinct t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat'", "answer": ["Of those names, which ones correspond to somebody who has a cat? || what is the first name of every student?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode ( AHD ) , airportname , country , countryabbrev | flights : airline , flightno , sourceairport (  AHD ) , destairport (  AHD ). \\n Question: select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = \"AHD\"", "answer": ["What are their airlines? || Which flights leave from AHD?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name ( Anguilla ) , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname ( Anguilla ) , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select continent from country where name = \"Anguilla\"", "answer": ["What is the continent name which Anguilla belongs to?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id. \\n Question: select song_name, song_release_year from singer order by age limit 1", "answer": ["What is the result for the song by the yongest? || Order the result by the age of their singers. | Also show the release year for each of them. | Show the names of all songs."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format ( DVD , CD ) | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance. \\n Question: select count(*) from orchestra where major_record_format = \"CD\" or major_record_format = \"DVD\"", "answer": ["Find the number of orchestras whose record format is \"CD\" or \"DVD\"."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance. \\n Question: select name from conductor", "answer": ["Please show the names of the conductors."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: select t2.document_name, t1.template_type_code from templates as t1 join documents as t2 on t1.template_id = t2.template_id", "answer": ["Also show their template type codes. || Show all document names."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade. \\n Question: select t3.name, t2.course from course_arrange as t1 join course as t2 on t1.course_id = t2.course_id join teacher as t3 on t1.teacher_id = t3.teacher_id order by t3.name", "answer": ["Show names of teachers and the courses they are arranged to teach in ascending alphabetical order of the teacher's name."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id. \\n Question: select t1.last_name from students as t1 join addresses as t2 on t1.current_address_id = t2.address_id where t2.state_province_county = 'NorthCarolina' except select distinct t3.last_name from students as t3 join student_enrolment as t4 on t3.student_id = t4.student_id", "answer": ["Find the last name of the students who currently live in the state of North Carolina but have not registered in any degree program."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height. \\n Question: select name, birth_date from people", "answer": ["What are the names and birth dates of people?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select t1.id, t1.maker from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id having count(*) >= 2 intersect select t1.id, t1.maker from car_makers as t1 join model_list as t2 on t1.id = t2.maker join car_names as t3 on t2.model = t3.model group by t1.id having count(*) > 3;", "answer": ["Which are the car makers which produce at least 2 models and more than 3 car makes? List the id and the maker."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height. \\n Question: select name from people", "answer": ["What are the names of all people?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight. \\n Question: select stuid from student", "answer": ["What is every student's id?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select distinct t1.first_name, t1.last_name from professionals as t1 join treatments as t2 where cost_of_treatment = ( select min(cost_of_treatment) from treatments )", "answer": ["Which professionals who did the minimum value of the treatment cost? Provide the first name and last name. || What is the minimum, maximum and average value of the treatment costs?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id. \\n Question: select * from singer", "answer": ["Show information for all singers."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode ( AKO ) , airportname , country , countryabbrev | flights : airline , flightno , sourceairport (  AKO ) , destairport (  AKO ). \\n Question: select airportname from airports where airportcode = \"AKO\"", "answer": ["Of these, which has code 'AKO'? || What are all the airport names?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name ( Angola ) , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname ( Angola ) , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select population, region from country where name = \"Angola\"", "answer": ["What region does Angola belong to and what is its population?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select avg(age) from dogs where dog_id in ( select dog_id from treatments )", "answer": ["What is the average age of the dogs who have gone through any treatments?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade. \\n Question: select * from course_arrange", "answer": ["Find all the course arrangements."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: select t1.template_type_code, t2.document_name from templates as t1 join documents as t2 on t1.template_id = t2.template_id", "answer": ["Also show the names of all documents using each template. || What is the template type code of the template."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select count(*), district from city where population > (select avg(population) from city) group by district", "answer": ["For each district, count how many cities have a population greater than the average. || What is the average city population for each city?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select cost_of_treatment from treatments order by cost_of_treatment desc", "answer": ["What about in descending order? || Order the cost in ascending order. | Show the treatment details."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select sum(population), avg(lifeexpectancy), continent from country group by continent having avg(lifeexpectancy) < 72", "answer": ["Give their average life expectancy and total population. || Which continents have an average life expectancy less than age 72?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: select distinct winner_name, winner_rank from matches order by winner_age limit 3", "answer": ["Youngest? Give the rank as well. || How about the 3 oldest winners. | Give the name of the 3 oldest losers across all matches."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype ( dog , cat ) , pet_age , weight. \\n Question: select t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'dog' and t1.stuid not in (select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat')", "answer": ["What is the first name of every student who has a dog but does not have a cat?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id. \\n Question: select count(*) from departments as t1 join degree_programs as t2 on t1.department_id = t2.department_id where t1.department_name = 'engineer'", "answer": ["How many are there? || Show me all the degrees offered by the engineering department."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select count(*) from car_makers;", "answer": ["How many makers are there?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent ( europe ) | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select t1.countryname from countries as t1 join continents as t2 on t1.continent = t2.contid join car_makers as t3 on t1.countryid = t3.country where t2.continent = 'europe' group by t1.countryname having count(*) >= 3;", "answer": ["List the country names of those with at least 3 manufacturers! || Show just those from countries in the continent Europe. | Count how many there are per country name? | Show all the car makers and their country name?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | museum_visit | museum : museum_id , name , num_of_staff , open_year | visitor : id , name , level_of_membership , age | visit : museum_id , visitor_id , num_of_ticket , total_spent. \\n Question: select t2.visitor_id, t1.name, t1.level_of_membership from visitor as t1 join visit as t2 on t1.id = t2.visitor_id group by t2.visitor_id order by sum(t2.total_spent) desc limit 1", "answer": ["what are his id and membership level? || find the name of the visitor who has spent the most money for his or her visits. | what is the total spent on all visits?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name ( Timmothy ) , middle_name , last_name ( Ward ) , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id. \\n Question: select cell_mobile_number from students where first_name = 'Timmothy' and last_name = 'Ward'", "answer": ["What is the phone number of the man with the first name Timmothy and the last name Ward?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: select template_type_code from templates", "answer": ["Show the template type code for all templates."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select breed_code, count(*) from dogs group by breed_code limit 1", "answer": ["What about the most common 1? || Which breed codes are the most popular two? | How many dogs for each breed code?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name ( AirCon ) , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description. \\n Question: select * from other_available_features where feature_name = \"AirCon\"", "answer": ["Find the available features with feature name \"AirCon\"."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: select template_id from templates", "answer": ["Show the template ids for all templates."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: select name from highschooler except select t2.name from friend as t1 join highschooler as t2 on t1.student_id = t2.id", "answer": ["how about 0? || how about at least 1? | Which ones have at least 5 friends? | What are the names of all the highshcool students?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured. \\n Question: select t1.id, t1.name from battle as t1 join ship as t2 on t1.id = t2.lost_in_battle join death as t3 on t2.id = t3.caused_by_ship_id group by t1.id having sum(t3.killed) > 10", "answer": ["Only show the deaths for those battles that produced at least ten deaths. || How many people were killed or injured in each battle?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( Asia ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select count(*) from country where continent = \"Asia\"", "answer": ["Count the number of countries in Asia."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select name from country order by population desc limit 3", "answer": ["Give the names of the 3 countries which have the most. || Order the countries by descending population size."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype ( dog , cat ) , pet_age , weight. \\n Question: select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat' intersect select * from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'dog'", "answer": ["Who also has a cat? || Which students have a dog as their type of pet?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select name from treatments as t1 join dogs as t2 on t1.dog_id = t2.dog_id group by t1.dog_id having sum(cost_of_treatment) > 500", "answer": ["Which of them cost over 500? || Show the dog name and total cost of each dog."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: select count(distinct grade) from highschooler", "answer": ["How many distinct grades are there?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured. \\n Question: select max(killed), min(killed) from death", "answer": ["Give me the maximum and also the minimum. || What about the minimum? | What is the maximum number of deaths in any one time? | What are the death tolls each time?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created. \\n Question: select count(*) from area_code_state", "answer": ["How many are there? || Show all area codes and states."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: select distinct template_id from documents", "answer": ["Show all distinct results. || Show the template id for all documents."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id. \\n Question: select t2.concert_name, t2.theme, count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id = t2.concert_id group by t2.concert_id", "answer": ["Show the name and theme for all concerts and the number of singers in each concert."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city ( Aberdeen  ) , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport. \\n Question: select airportname from airports where city = \"Aberdeen\"", "answer": ["Which is in Aberdeen? || What are all the airport names?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name ( WTA Championships , Australian Open ) , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: select count(distinct winner_name) from matches where tourney_name = 'WTA Championships' and winner_hand = 'L'", "answer": ["How about in the WTA Championships, and were also left handed? || Winners? | How  many different losers participated in the Australian Open?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district ( Central ) , population | sqlite_sequence : name , seq | country : code , name , continent ( Africa ) , region ( Central Africa ) , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select lifeexpectancy from country where region = \"Central Africa\"", "answer": ["What are the life expectancies for the countries in the region of Central Africa? || What are the life expectancies for all the countries?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country ( USA ) | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport. \\n Question: select count(*) from airlines where country = \"USA\"", "answer": ["How many are there? || What are the names of the airlines in the USA?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( Asia ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language ( Chinese ) , isofficial , percentage. \\n Question: select distinct t3.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode join city as t3 on t1.code = t3.countrycode where t2.isofficial = 'T' and t2.language = 'Chinese' and t1.continent = \"Asia\"", "answer": ["Return the different names of cities that are in Asia and for which Chinese is the official language."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: select template_id from documents", "answer": ["Show the template ids used by any document."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | voter_1 | area_code_state : area_code , state ( CA , NY ) | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state ( NY , CA ) , contestant_number , created. \\n Question: select count(*) from votes where state = 'NY' or state = 'CA'", "answer": ["What are the number of votes from state 'NY' or 'CA'?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type ( Live final ) , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance. \\n Question: select max(share), min(share) from performance where type != \"Live final\"", "answer": ["What are the maximum and the minimum of these values? || What are the shares of performances whose type is not \"Live final\"? | What are the shares of performances?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state ( Indiana ) , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code ( Employee ) , first_name , street , city , state ( Connecticut , Indiana ) , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select count(*) from professionals where state = 'Indiana'", "answer": ["What about in Indiana? || How many of them live in Connecticut? | List all the professionals who are Employees."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: select count(*) from highschooler where grade = 9 or grade = 10", "answer": ["How many high schoolers are there in grade 9 or 10?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id. \\n Question: select first_name, middle_name, last_name from students order by date_first_registered desc limit 1", "answer": ["Who was the last student to register? Show me the first, middle, and last names of that student."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text ( Korea ) , other_details. \\n Question: select other_details from paragraphs where paragraph_text = 'Korea'", "answer": ["What are the details for the paragraph containing 'Korea'? || Also show their paragraph details. | Show the parapraph text for all paragraphs."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select t1.maker, t2.countryname from car_makers as t1 join countries as t2 on t1.country = t2.countryid;", "answer": ["What are the names of the countries they belong to? || Show all the different car makers?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | network_1 | highschooler : id , name ( Kyle ) , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: select t3.name from friend as t1 join highschooler as t2 on t1.student_id = t2.id join highschooler as t3 on t1.friend_id = t3.id where t2.name = \"Kyle\"", "answer": ["What are the names of his friends? || Who does he like? | Is there a highschooler named Kyle?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | network_1 | highschooler : id , name ( Kyle ) , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: select count(*) from friend as t1 join highschooler as t2 on t1.student_id = t2.id where t2.name = \"Kyle\"", "answer": ["How many friends does the high school student Kyle have?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: select count(distinct tourney_name) from matches", "answer": ["How many distinct tourney names are there?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created. \\n Question: select * from contestants as t1 join votes as t2 on t1.contestant_number = t2.contestant_number group by t1.contestant_number order by count(*) asc limit 1", "answer": ["Can you show the contestant with the least votes? || Show all the votes. | Show all the contestants."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created. \\n Question: select * from votes", "answer": ["Show all the votes. || Show all the contestants."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created. \\n Question: select contestant_name from contestants", "answer": ["What are their names? || Show all info about contestants."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select distinct maker from car_makers;", "answer": ["Show all the different car makers?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight. \\n Question: select petid from pets", "answer": ["What are ids of every pet?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district ( Gelderland ) , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select sum(population) from city where district = \"Gelderland\"", "answer": ["What is the total population in that district? || What are the populations of each city in the district of Gelderland?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode group by t1.name order by count(*) desc limit 1", "answer": ["Which country speaks the most? || How many languages are spoken in each country?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city ( Alton  ) , airportcode , airportname ( Alton  ) , country , countryabbrev | flights : airline , flightno , sourceairport , destairport. \\n Question: select city, country from airports where airportname = \"Alton\"", "answer": ["Give the city and country for the Alton airport."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name ( Americana ) , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( North America ) , region ( North America ) , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select * from country where continent = \"North America\"", "answer": ["What countries are in North America?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name ( Aruba ) , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname ( Aruba ) , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select t2.language from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.name = \"Aruba\" order by percentage desc limit 1", "answer": ["Which one is the most popular? || What are the languages spoken in Aruba? | What are all the languages?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport. \\n Question: select airportname from airports", "answer": ["What are all the airport names?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created. \\n Question: select * from area_code_state", "answer": ["Show all area codes and states."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( Asia ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select count(*) from country where continent = \"Asia\"", "answer": ["How many are there? || What are the countries in the continent of Asia?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline ( JetBlue Airways ) , abbreviation ( JetBlue ) , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport. \\n Question: select * from flights as t1 join airlines as t2 on t1.airline = t2.uid where t2.airline = \"JetBlue Airways\"", "answer": ["What are all the flights on Jetblue Airways?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode ( Emily ) , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel. \\n Question: select weekly_rank from tv_series where episode = \"Emily\"", "answer": ["tell me the weekly rank of the episode named \"Emily\"."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: select count(*) from paragraphs", "answer": ["How many paragraphs in total?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown ( Little Lever Urban District ) | course_arrange : course_id , teacher_id , grade. \\n Question: select name from teacher where hometown != \"Little lever urban Distric\"", "answer": ["Give me their names. || Which teacher's hometown is not \"Little Lever Urban District\"? | What is the hometown of each teacher?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language ( English , Dutch ) , isofficial , percentage. \\n Question: select distinct t1.region from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"English\" or t2.language = \"Dutch\"", "answer": ["Which of those speak Dutch or English? || What are all the different regions?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade. \\n Question: select age from teacher", "answer": ["What are the ages of all the teachers?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height. \\n Question: select t2.money_rank from people as t1 join poker_player as t2 on t1.people_id = t2.people_id order by t1.height desc limit 1", "answer": ["What is the money rank of the tallest poker player?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: select t1.document_id, t2.template_id, t2.template_type_code from documents as t1 join templates as t2 on t1.template_id = t2.template_id", "answer": ["Also show their template id and template type code. || Show the document ids."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: select student_id from friend intersect select liked_id from likes", "answer": ["Show me just their ids! || Now only show those who are liked by someone else! | Also show, for each, the ids of the people they like? | Show me the ids of all highschoolers who have friends?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select count(*) from owners where owner_id not in ( select owner_id from dogs )", "answer": ["How many owners temporarily do not have any dogs?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id. \\n Question: select name, country from singer where song_name like '%hey%'", "answer": ["what is the name and nation of the singer who have a song having 'Hey' in its name?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight. \\n Question: select pettype from pets order by pet_age limit 1", "answer": ["What type are they? || Who is the youngest pet?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker ( amc ) , fullname , country | model_list : modelid , maker , model ( amc ) | car_names : makeid , model ( amc ) , make ( amc hornet ) | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select t1.mpg from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t2.make = 'amc hornet sportabout (sw)';", "answer": ["How about its MPG? || What is its horsepower? | Show all the car ids with the make amc hornet sporabout (sw)?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select distinct t1.first_name, t1.last_name from professionals as t1 join treatments as t2 where cost_of_treatment < ( select avg(cost_of_treatment) from treatments )", "answer": ["How about below the average of the cost? || What about the maximum cost? | Which professionals who did the minimum value of the treatment cost? Provide the first name and last name. | What is the minimum, maximum and average value of the treatment costs?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: select template_type_code, template_type_description from ref_template_types", "answer": ["Show all template type codes and descriptions."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance. \\n Question: select orchestra from orchestra where orchestra_id not in (select orchestra_id from performance)", "answer": ["Which of them have had no performances? || List the names of orchestras."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city ( Aberdeen  ) , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport. \\n Question: select * from flights as t1 join airports as t2 on t1.sourceairport = t2.airportcode where t2.city = \"Aberdeen\"", "answer": ["What are all the flights derparting from Aberdeen?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language ( English ) , isofficial , percentage. \\n Question: select countrycode from countrylanguage except select countrycode from countrylanguage where language = \"English\"", "answer": ["Of those countries, give the country codes for those which do not speak English. || What are the country codes of all the countries?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( Asia ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select name, population, lifeexpectancy from country where continent = \"Asia\" order by surfacearea desc limit 1", "answer": ["Of those, which belong to the country with the largest surface area? || What are the names, population, and life expectancy for all the countries in Asia?"], "label": "QA"}
