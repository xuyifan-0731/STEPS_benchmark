{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: select t2.name from friend as t1 join highschooler as t2 on t1.student_id = t2.id where t2.grade > 5 group by t1.student_id having count(*) >= 2", "answer": ["What are the names of high schoolers who have a grade of over 5 and have 2 or more friends?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select max(charge_amount) from charges", "answer": ["What is the charge amount of the most expensive charge type?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select date_arrived, date_departed from dogs", "answer": ["List the arrival date and the departure date for all the dogs."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id. \\n Question: select name, country from singer where song_name like '%hey%'", "answer": ["What is the name and country of origin of every singer who has a song with the word 'Hey' in its title?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select avg(age) from dogs where dog_id in ( select dog_id from treatments )", "answer": ["What is the average age of the dogs who have gone through any treatments?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured. \\n Question: select t1.killed, t1.injured from death as t1 join ship as t2 on t1.caused_by_ship_id = t2.id where t2.tonnage = 't'", "answer": ["What are the death and injury situations caused by the ship with tonnage 't'?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | museum_visit | museum : museum_id , name , num_of_staff , open_year | visitor : id , name , level_of_membership , age | visit : museum_id , visitor_id , num_of_ticket , total_spent. \\n Question: select name from visitor where level_of_membership > 4 order by level_of_membership desc", "answer": ["Find the names of the visitors whose membership level is higher than 4, and order the results by the level from high to low."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | tvshow | tv_channel : id , series_name , country , language ( English ) , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel. \\n Question: select count(*) from tv_channel where language = \"English\";", "answer": ["How many TV Channel using language English?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select name from country order by population desc limit 3", "answer": ["What are names of countries with the top 3 largest population?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select distinct t1.model from model_list as t1 join car_names as t2 on t1.model = t2.model join cars_data as t3 on t2.makeid = t3.id where t3.year > 1980;", "answer": ["What are the different models for the cards produced after 1980?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height. \\n Question: select name from people where people_id not in (select people_id from poker_player)", "answer": ["List the names of people that are not poker players."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id. \\n Question: select distinct country from singer where age > 20", "answer": ["What are all distinct countries where singers above age 20 are from?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select t1.continent, count(*) from continents as t1 join countries as t2 on t1.contid = t2.continent join car_makers as t3 on t2.countryid = t3.country group by t1.continent;", "answer": ["How many car makers are there in each continents? List the continent name and the count."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option ( Option ) | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by ( Ben Jones ) , written_by , original_air_date , production_code , channel. \\n Question: select package_option from tv_channel where id not in (select channel from cartoon where directed_by = 'Ben Jones')", "answer": ["find the package option of the tv channel that do not have any cartoon directed by Ben Jones."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: select grade from highschooler", "answer": ["What is the grade of each high schooler?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform ( US Territory ) , headofstate , capital , code2 ( US ) | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select avg(gnp), sum(population) from country where governmentform = \"US Territory\"", "answer": ["What is the average GNP and total population in all nations whose government is US territory?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: select count(distinct country_code) from players", "answer": ["How many distinct countries do players come from?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position. \\n Question: select name from singer order by net_worth_millions asc", "answer": ["List the name of singers in ascending order of net worth."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | museum_visit | museum : museum_id , name , num_of_staff , open_year | visitor : id , name , level_of_membership , age | visit : museum_id , visitor_id , num_of_ticket , total_spent. \\n Question: select sum(t2.total_spent) from visitor as t1 join visit as t2 on t1.id = t2.visitor_id where t1.level_of_membership = 1", "answer": ["What is the total ticket expense of the visitors whose membership level is 1?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | network_1 | highschooler : id , name ( Kyle ) , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: select grade from highschooler where name = \"Kyle\"", "answer": ["What grade is Kyle in?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id. \\n Question: select line_1, line_2 from addresses", "answer": ["what are all the addresses including line 1 and line 2?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language ( English , Dutch ) , isofficial , percentage. \\n Question: select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"english\" and isofficial = \"t\" union select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"dutch\" and isofficial = \"t\"", "answer": ["What are the countries where either English or Dutch is the official language ?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel. \\n Question: select title, directed_by from cartoon order by original_air_date", "answer": ["What is the name and directors of all the cartoons that are ordered by air date?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title ( The Rise of the Blue Beetle! ) , directed_by , written_by , original_air_date , production_code , channel. \\n Question: select t1.series_name from tv_channel as t1 join cartoon as t2 on t1.id = t2.channel where t2.title = \"The rise of the blue beetle!\";", "answer": ["What is the series name of the TV Channel that shows the cartoon \"The Rise of the Blue Beetle\"?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language ( English , French ) , isofficial , percentage. \\n Question: select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"English\" and t2.isofficial = \"T\" intersect select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"French\" and t2.isofficial = \"T\"", "answer": ["What are the names of nations where both English and French are official languages?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id. \\n Question: select count(*) from transcripts", "answer": ["How many transcripts are released?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details | d : document_id , para_count. \\n Question: select count(*) from documents", "answer": ["How many documents do we have?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id. \\n Question: select t2.name from singer_in_concert as t1 join singer as t2 on t1.singer_id = t2.singer_id join concert as t3 on t1.concert_id = t3.concert_id where t3.year = 2014", "answer": ["List all singer names in concerts in year 2014."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured. \\n Question: select t1.id, t1.name from battle as t1 join ship as t2 on t1.id = t2.lost_in_battle join death as t3 on t2.id = t3.caused_by_ship_id group by t1.id having sum(t3.killed) > 10", "answer": ["What are the ids and names of the battles that led to more than 10 people killed in total."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade. \\n Question: select name from teacher where teacher_id not in (select teacher_id from course_arrange)", "answer": ["List the names of teachers who have not been arranged to teach courses."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | battle_death | battle : id , name , date , bulgarian_commander ( Boril ) , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured. \\n Question: select name, result from battle where bulgarian_commander != 'Boril'", "answer": ["What are the name and results of the battles when the bulgarian commander is not 'Boril'"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id. \\n Question: select t1.course_name, t1.course_id from courses as t1 join sections as t2 on t1.course_id = t2.course_id group by t1.course_id having count(*) <= 2", "answer": ["What are the names and id of courses having at most 2 sections?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel. \\n Question: select language, count(*) from tv_channel group by language order by count(*) asc limit 1;", "answer": ["List the language used least number of TV Channel. List language and number of TV Channel."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select t1.continent from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode group by t1.continent order by count(*) desc limit 1", "answer": ["Which continent has the most diverse languages?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | tvshow | tv_channel : id , series_name ( Sky Radio ) , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel. \\n Question: select t2.episode from tv_channel as t1 join tv_series as t2 on t1.id = t2.channel where t1.series_name = \"Sky Radio\";", "answer": ["What is the episode for the TV series named \"Sky Radio\"?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state ( Virginia ) , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select t1.first_name, t2.name from owners as t1 join dogs as t2 on t1.owner_id = t2.owner_id where t1.state = 'Virginia'", "answer": ["Find the first names of owners living in Virginia and the names of dogs they own."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created. \\n Question: select t1.contestant_number, t1.contestant_name from contestants as t1 join votes as t2 on t1.contestant_number = t2.contestant_number group by t1.contestant_number having count(*) >= 2", "answer": ["What are the contestant numbers and names of the contestants who had at least two votes?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select first_name from professionals union select first_name from owners except select name from dogs", "answer": ["Which first names are used for professionals or owners but are not used as dog names?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance. \\n Question: select name from conductor order by year_of_work desc", "answer": ["List names of conductors in descending order of years of work."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: select t2.name from friend as t1 join highschooler as t2 on t1.student_id = t2.id group by t1.student_id having count(*) >= 3", "answer": ["Show the names of high schoolers who have at least 3 friends."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position. \\n Question: select birth_year, citizenship from singer", "answer": ["What are the birth years and citizenships of the singers?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode ( APG , CVO ) , airportname , country , countryabbrev | flights : airline , flightno , sourceairport (  APG ,  CVO ) , destairport (  APG ,  CVO ). \\n Question: select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = \"APG\" intersect select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = \"CVO\"", "answer": ["Find all airlines that have flights from both airports 'APG' and 'CVO'."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform ( US Territory ) , headofstate , capital , code2 ( US ) | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select avg(gnp), sum(population) from country where governmentform = \"US Territory\"", "answer": ["Give the mean GNP and total population of nations which are considered US territory."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype ( cat ) , pet_age , weight. \\n Question: select major, age from student where stuid not in (select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat')", "answer": ["What major is every student who does not own a cat as a pet, and also how old are they?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id. \\n Question: select t1.degree_program_id, t1.degree_summary_name from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id group by t1.degree_program_id order by count(*) desc limit 1", "answer": ["What is the program id and the summary of the degree that has the most students enrolled?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id. \\n Question: select name, capacity from stadium order by average desc limit 1", "answer": ["What is the name and capacity for the stadium with the highest average attendance?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: select count(*) from matches", "answer": ["Count the number of matches."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by ( Joseph Kuhr ) , original_air_date , production_code , channel. \\n Question: select count(*) from cartoon where written_by = \"Joseph Kuhr\";", "answer": ["What is the number of cartoones written by Joseph Kuhr?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code ( PPT , PP ) , template_type_description | templates : template_id , version_number , template_type_code ( PPT , PP ) , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details | d : document_id , para_count. \\n Question: select template_id from templates where template_type_code = \"PP\" or template_type_code = \"PPT\"", "answer": ["What are the ids of templates with template type code PP or PPT?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id. \\n Question: select transcript_date, other_details from transcripts order by transcript_date asc limit 1", "answer": ["What is the earliest date of a transcript release, and what details can you tell me?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype ( dog , cat ) , pet_age , weight. \\n Question: select t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'dog' and t1.stuid not in (select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat')", "answer": ["Find the first name and age of students who have a dog but do not have a cat as a pet."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus. \\n Question: select name, location, district from shop order by number_products desc", "answer": ["Sort all the shops by number products in descending order, and return the name, location and district of each shop."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: select avg(grade) from highschooler where id in (select t1.student_id from friend as t1 join highschooler as t2 on t1.student_id = t2.id)", "answer": ["Find the average grade of all students who have some friends."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height. \\n Question: select t1.name from people as t1 join poker_player as t2 on t1.people_id = t2.people_id order by t2.final_table_made", "answer": ["List the names of poker players ordered by the final tables made in ascending order."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | museum_visit | museum : museum_id , name , num_of_staff , open_year | visitor : id , name , level_of_membership , age | visit : museum_id , visitor_id , num_of_ticket , total_spent. \\n Question: select count(*) from visitor where id not in (select t2.visitor_id from museum as t1 join visit as t2 on t1.museum_id = t2.museum_id where t1.open_year > 2010)", "answer": ["Find the number of visitors who did not visit any museum opened after 2010."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: select t2.name from friend as t1 join highschooler as t2 on t1.student_id = t2.id where t2.grade > 5 group by t1.student_id having count(*) >= 2", "answer": ["Show the names of students who have a grade higher than 5 and have at least 2 friends."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: select distinct winner_name, winner_rank from matches order by winner_age limit 3", "answer": ["What are the names and ranks of the three youngest winners across all matches?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select min(weight) from cars_data where cylinders = 8 and year = 1974", "answer": ["What is the smallest weight of the car produced with 8 cylinders on 1974 ?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured. \\n Question: select note from death where note like '%east%'", "answer": ["What are the notes of the death events which has substring 'East'?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by ( Michael Chang , Ben Jones ) , written_by , original_air_date , production_code , channel. \\n Question: select t1.series_name, t1.country from tv_channel as t1 join cartoon as t2 on t1.id = t2.channel where t2.directed_by = 'Michael Chang' intersect select t1.series_name, t1.country from tv_channel as t1 join cartoon as t2 on t1.id = t2.channel where t2.directed_by = 'Ben Jones'", "answer": ["Find the series name and country of the tv channel that is playing some cartoons directed by Ben Jones and Michael Chang?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select t1.last_name from owners as t1 join dogs as t2 on t1.owner_id = t2.owner_id where t2.age = ( select max(age) from dogs )", "answer": ["Who owns the youngest dog? Give me his or her last name."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height. \\n Question: select t1.name from people as t1 join poker_player as t2 on t1.people_id = t2.people_id where t2.earnings > 300000", "answer": ["What are the names of poker players whose earnings is higher than 300000?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description ( Presentation ) | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details | d : document_id , para_count. \\n Question: select t2.template_id from ref_template_types as t1 join templates as t2 on t1.template_type_code = t2.template_type_code where t1.template_type_description = \"Presentation\"", "answer": ["What are the template ids with template type description \"Presentation\"."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: select t1.country_code, t1.first_name from players as t1 join rankings as t2 on t1.player_id = t2.player_id order by t2.tours desc limit 1", "answer": ["Find the first name and country code of the player who did the most number of tours."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name ( Brazil ) , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select population, lifeexpectancy from country where name = \"Brazil\"", "answer": ["What are the population and life expectancies in Brazil?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: select tourney_name from matches group by tourney_name having count(*) > 10", "answer": ["What are the names of tournaments that have more than 10 matches?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id. \\n Question: select count(*) from concert where year = 2014 or year = 2015", "answer": ["How many concerts occurred in 2014 or 2015?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.cylinders = 4 order by t2.horsepower desc limit 1;", "answer": ["For the cars with 4 cylinders, which model has the largest horsepower?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus. \\n Question: select district from shop where number_products < 3000 intersect select district from shop where number_products > 10000", "answer": ["Find the districts in which there are both shops selling less than 3000 products and shops selling more than 10000 products."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select t1.continent from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode group by t1.continent order by count(*) desc limit 1", "answer": ["Which continent speaks the most languages?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country ( USA ) | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport. \\n Question: select count(*) from airlines where country = \"USA\"", "answer": ["Return the number of airlines in the USA."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name , last_name ( Date ) , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: select sum(tours), ranking_date from rankings group by ranking_date", "answer": ["How many total tours were there for each ranking date?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description ( Book ) | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details | d : document_id , para_count. \\n Question: select template_type_code from ref_template_types where template_type_description = \"Book\"", "answer": ["Return the type code of the template type with the description \"Book\"."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: select winner_name from matches where year = 2013 intersect select winner_name from matches where year = 2016", "answer": ["What are the names of players who won in both 2013 and 2016?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select max(charge_amount) from charges", "answer": ["How much does the most expensive charge type costs?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id. \\n Question: select count(distinct degree_summary_name) from degree_programs", "answer": ["How many different degree names are offered?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport. \\n Question: select t1.city from airports as t1 join flights as t2 on t1.airportcode = t2.sourceairport group by t1.city order by count(*) desc limit 1", "answer": ["Which city is the most frequent source airport?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | tvshow | tv_channel : id , series_name ( Sky Radio ) , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option ( Option ) | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel. \\n Question: select package_option from tv_channel where series_name = \"Sky Radio\";", "answer": ["What is the Package Option of TV Channel with serial name \"Sky Radio\"?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select t1.owner_id, t2.first_name, t2.last_name from dogs as t1 join owners as t2 on t1.owner_id = t2.owner_id group by t1.owner_id order by count(*) desc limit 1", "answer": ["Which owner owns the most dogs? List the owner id, first name and last name."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | voter_1 | area_code_state : area_code , state ( AL ) | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created. \\n Question: select contestant_name from contestants where contestant_name like \"%al%\"", "answer": ["Return the names of the contestants whose names contain the substring 'Al' ."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details | d : document_id , para_count. \\n Question: select template_type_code, template_type_description from ref_template_types", "answer": ["Show all template type codes and descriptions."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select t1.professional_id, t1.cell_number from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count(*) >= 2", "answer": ["Find the id and cell phone of the professionals who operate two or more types of treatments."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel. \\n Question: select episode, rating from tv_series order by rating desc limit 3;", "answer": ["What are 3 most highly rated episodes in the TV series table and what were those ratings?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | network_1 | highschooler : id , name ( Kyle ) , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: select id from highschooler where name = \"Kyle\"", "answer": ["What is Kyle's id?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: select count(*) from highschooler", "answer": ["How many high schoolers are there?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select count(distinct language) from countrylanguage", "answer": ["How many unique languages are spoken in the world?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height. \\n Question: select t1.name from people as t1 join poker_player as t2 on t1.people_id = t2.people_id order by t2.earnings desc", "answer": ["Return the names of poker players sorted by their earnings descending."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name , last_name ( Date ) , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: select sum(tours), ranking_date from rankings group by ranking_date", "answer": ["Find the total number of tours for each ranking date."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id order by t2.mpg desc limit 1;", "answer": ["What is the car model with the highest mpg ?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: select t2.name, count(*) from likes as t1 join highschooler as t2 on t1.student_id = t2.id group by t1.student_id", "answer": ["Show the names of high schoolers who have likes, and numbers of likes for each."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details | d : document_id , para_count. \\n Question: select document_id, document_name, document_description from documents", "answer": ["What are the ids, names, and descriptions for all documents?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode group by t1.name order by count(*) desc limit 1", "answer": ["What is name of the country that speaks the largest number of languages?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district ( Gelderland ) , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select sum(population) from city where district = \"Gelderland\"", "answer": ["How many people live in Gelderland district?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade. \\n Question: select t3.name, t2.course from course_arrange as t1 join course as t2 on t1.course_id = t2.course_id join teacher as t3 on t1.teacher_id = t3.teacher_id", "answer": ["Show names of teachers and the courses they are arranged to teach."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | museum_visit | museum : museum_id , name , num_of_staff , open_year | visitor : id , name , level_of_membership , age | visit : museum_id , visitor_id , num_of_ticket , total_spent. \\n Question: select t1.name from visitor as t1 join visit as t2 on t1.id = t2.visitor_id join museum as t3 on t3.museum_id = t2.museum_id where t3.open_year < 2009 intersect select t1.name from visitor as t1 join visit as t2 on t1.id = t2.visitor_id join museum as t3 on t3.museum_id = t2.museum_id where t3.open_year > 2011", "answer": ["What is the name of the visitor who visited both a museum opened before 2009 and a museum opened after 2011?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance. \\n Question: select record_company from orchestra group by record_company order by count(*) desc limit 1", "answer": ["What is the record company used by the greatest number of orchestras?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created. \\n Question: select vote_id, phone_number, state from votes", "answer": ["List the vote ids, phone numbers and states of all votes."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height. \\n Question: select t2.money_rank from people as t1 join poker_player as t2 on t1.people_id = t2.people_id order by t1.height desc limit 1", "answer": ["Return the money rank of the poker player with the greatest height."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language ( English , Dutch ) , isofficial , percentage. \\n Question: select distinct t1.region from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"English\" or t2.language = \"Dutch\"", "answer": ["What are the regions that use English or Dutch?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details | d : document_id , para_count. \\n Question: select document_id, count(*) from paragraphs group by document_id order by document_id", "answer": ["Return the different document ids along with the number of paragraphs corresponding to each, ordered by id."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select language from countrylanguage group by language order by count(*) desc limit 1", "answer": ["Give the language that is spoken in the most countries."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: select distinct winner_name, winner_rank from matches order by winner_age limit 3", "answer": ["Find the name and rank of the 3 youngest winners across all matches."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language ( Spanish ) , isofficial , percentage. \\n Question: select count(*), max(percentage) from countrylanguage where language = \"Spanish\" group by countrycode", "answer": ["What is the total number of countries where Spanish is spoken by the largest percentage of people?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: select name, grade from highschooler", "answer": ["Show the names and grades of each high schooler."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select count(distinct dog_id) from treatments", "answer": ["How many dogs went through any treatments?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by ( Todd Casey ) , original_air_date , production_code , channel. \\n Question: select country from tv_channel except select t1.country from tv_channel as t1 join cartoon as t2 on t1.id = t2.channel where t2.written_by = 'Todd Casey'", "answer": ["What are the countries that are not playing cartoons written by Todd Casey?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city ( Aberdeen  , Ashley  ) , airportcode , airportname ( Ashley  ) , country , countryabbrev | flights : airline , flightno , sourceairport , destairport. \\n Question: select count(*) from flights as t1 join airports as t2 on t1.destairport = t2.airportcode join airports as t3 on t1.sourceairport = t3.airportcode where t2.city = \"Ashley\" and t3.city = \"Aberdeen\"", "answer": ["How many flights fly from Aberdeen to Ashley?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus. \\n Question: select sum(bonus) from evaluation", "answer": ["What is total bonus given in all evaluations?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select sum(surfacearea) from country where region = \"Caribbean\"", "answer": ["How much surface area do the countires in the Carribean cover together?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language ( English ) , isofficial , percentage. \\n Question: select sum(population) from country where name not in (select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"English\")", "answer": ["How many people live in countries that do not speak English?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select count(*) from continents;", "answer": ["What is the number of continents?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position. \\n Question: select t1.name from singer as t1 join song as t2 on t1.singer_id = t2.singer_id group by t1.name having count(*) > 1", "answer": ["What are the names of the singers that have more than one songs?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured. \\n Question: select max(killed), min(killed) from death", "answer": ["What is maximum and minimum death toll caused each time?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select t2.horsepower, t1.make from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.cylinders = 3 order by t2.horsepower desc limit 1;", "answer": ["What is the largest amount of horsepower for the models with 3 cylinders and what make is it?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker ( fiat ) , fullname ( Fiat ) , country | model_list : modelid , maker , model ( fiat ) | car_names : makeid , model ( fiat ) , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select t1.countryid, t1.countryname from countries as t1 join car_makers as t2 on t1.countryid = t2.country group by t1.countryid having count(*) > 3 union select t1.countryid, t1.countryname from countries as t1 join car_makers as t2 on t1.countryid = t2.country join model_list as t3 on t2.id = t3.maker where t3.model = 'fiat';", "answer": ["What are the id and names of the countries which have more than 3 car makers or produce the 'fiat' model?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode ( APG ) , airportname , country , countryabbrev | flights : airline , flightno , sourceairport (  APG ) , destairport (  APG ). \\n Question: select count(*) from flights where sourceairport = \"APG\"", "answer": ["Count the number of flights departing from 'APG'."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select count(*) from cars_data where accelerate > ( select accelerate from cars_data order by horsepower desc limit 1 );", "answer": ["What is the number of cars with a greater accelerate than the one with the most horsepower?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode ( A Love of a Lifetime ) , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel. \\n Question: select air_date from tv_series where episode = \"A love of a Lifetime\";", "answer": ["When did the episode \"A Love of a Lifetime\" air?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured. \\n Question: select count(*) from battle where id not in ( select lost_in_battle from ship where tonnage = '225' );", "answer": ["How many battles did not lose any ship with tonnage '225'?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select distinct t1.model from model_list as t1 join car_names as t2 on t1.model = t2.model join cars_data as t3 on t2.makeid = t3.id where t3.year > 1980;", "answer": ["Which distinct car models are the produced after 1980?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select name from city where population between 160000 and 900000", "answer": ["What are the cities whose population is between 160000 and 900000?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position. \\n Question: select citizenship from singer group by citizenship order by count(*) desc limit 1", "answer": ["What is the most common singer citizenship ?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location ( English Channel ) , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured. \\n Question: select name, result, bulgarian_commander from battle except select t1.name, t1.result, t1.bulgarian_commander from battle as t1 join ship as t2 on t1.id = t2.lost_in_battle where t2.location = 'English Channel'", "answer": ["Show names, results and bulgarian commanders of the battles with no ships lost in the 'English Channel'."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details | d : document_id , para_count. \\n Question: select template_id, count(*) from documents group by template_id", "answer": ["What are all different template ids used for documents, and how many times were each of them used?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode ( APG , CVO ) , airportname , country , countryabbrev | flights : airline , flightno , sourceairport (  APG ,  CVO ) , destairport (  APG ,  CVO ). \\n Question: select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = \"CVO\" except select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = \"APG\"", "answer": ["Which airlines have departures from CVO but not from APG airports?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline ( JetBlue Airways ) , abbreviation ( JetBlue ) , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport. \\n Question: select count(*) from flights as t1 join airlines as t2 on t1.airline = t2.uid where t2.airline = \"JetBlue Airways\"", "answer": ["Give the number of Jetblue Airways flights."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id. \\n Question: select transcript_date from transcripts order by transcript_date desc limit 1", "answer": ["When was the last transcript released?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype ( dog ) , pet_age , weight. \\n Question: select weight from pets order by pet_age limit 1", "answer": ["How much does the youngest dog weigh?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id. \\n Question: select name, capacity from stadium order by average desc limit 1", "answer": ["What is the name and capacity for the stadium with highest average attendance?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details | d : document_id , para_count. \\n Question: select document_id, count(*) from paragraphs group by document_id order by document_id", "answer": ["Show all document ids and the number of paragraphs in each document. Order by document id."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: select student_id, count(*) from likes group by student_id", "answer": ["Count the number of likes for each student id."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus. \\n Question: select count(*), location from shop group by location", "answer": ["Find the number of shops in each location."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name ( Customer reviews ) , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details | d : document_id , para_count. \\n Question: select t1.paragraph_text from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id where t2.document_name = \"Customer reviews\"", "answer": ["Show all paragraph texts for the document \"Customer reviews\"."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created. \\n Question: select distinct state, created from votes", "answer": ["What are the distinct states and create time of all votes?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select count(*) from countries as t1 join car_makers as t2 on t1.countryid = t2.country group by t1.countryid having count(*) > 2", "answer": ["What is the number of countries with more than 2 car makers ?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker ( fiat ) , fullname ( Fiat ) , country | model_list : modelid , maker , model ( fiat ) | car_names : makeid , model ( fiat ) , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select t1.countryid, t1.countryname from countries as t1 join car_makers as t2 on t1.countryid = t2.country group by t1.countryid having count(*) > 3 union select t1.countryid, t1.countryname from countries as t1 join car_makers as t2 on t1.countryid = t2.country join model_list as t3 on t2.id = t3.maker where t3.model = 'fiat';", "answer": ["What are the ids and names of all countries that either have more than 3 car makers or produce fiat model ?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance. \\n Question: select t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id = t2.conductor_id where year_of_founded > 2008", "answer": ["What are the names of conductors who have conducted orchestras founded after the year 2008?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: select grade from highschooler group by grade having count(*) >= 4", "answer": ["Show me all grades that have at least 4 students."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id. \\n Question: select t2.department_name, t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id = t2.department_id group by t1.department_id order by count(*) desc limit 1", "answer": ["Which department offers the most number of degrees? List department name and id."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id. \\n Question: select name from stadium except select t2.name from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014", "answer": ["What are the names of all stadiums that did not have a concert in 2014?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | orchestra | conductor : conductor_id , name , age , nationality ( USA ) , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance. \\n Question: select name from conductor where nationality != 'USA'", "answer": ["What are the names of conductors whose nationalities are not \"USA\"?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select count(*) from professionals where professional_id not in ( select professional_id from treatments )", "answer": ["Find the number of professionals who have not treated any dogs."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details | d : document_id , para_count. \\n Question: select template_type_code from templates except select template_type_code from templates as t1 join documents as t2 on t1.template_id = t2.template_id", "answer": ["Show all template type codes that are not used by any document."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: select min(loser_rank) from matches", "answer": ["What is the best rank of losers across all matches?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select count(*) from model_list as t1 join car_makers as t2 on t1.maker = t2.id join countries as t3 on t2.country = t3.countryid where t3.countryname = 'usa';", "answer": ["What is the count of the car models produced in the United States?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option ( Option ) | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel. \\n Question: select package_option, series_name from tv_channel where hight_definition_tv = \"yes\"", "answer": ["What are the package options and the name of the series for the TV Channel that supports high definition TV?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport. \\n Question: select t1.abbreviation, t1.country from airlines as t1 join flights as t2 on t1.uid = t2.airline group by t1.airline order by count(*) limit 1", "answer": ["What is the abbreviation of the airilne has the fewest flights and what country is it in?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select t1.countryname, t1.countryid from countries as t1 join car_makers as t2 on t1.countryid = t2.country group by t1.countryid having count(*) >= 1;", "answer": ["What are the countries having at least one car maker? List name and id."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name ( Bachelor , Master ) , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id. \\n Question: select distinct t2.semester_id from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id where degree_summary_name = 'Master' intersect select distinct t2.semester_id from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id where degree_summary_name = 'Bachelor'", "answer": ["Find the semester when both Master students and Bachelor students got enrolled in."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport. \\n Question: select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline group by t1.airline order by count(*) desc limit 1", "answer": ["Which airline has most number of flights?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type ( Brig ) , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured. \\n Question: select distinct t1.id, t1.name from battle as t1 join ship as t2 on t1.id = t2.lost_in_battle where t2.ship_type = 'Brig'", "answer": ["What are the different ids and names of the battles that lost any 'Brig' type shipes?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus. \\n Question: select count(*), city from employee group by city", "answer": ["Count the number of employees for each city."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details | d : document_id , para_count. \\n Question: select template_type_code, template_type_description from ref_template_types", "answer": ["What are the type codes and descriptions for all template types?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select name from country order by population desc limit 3", "answer": ["Return the names of the 3 most populated countries."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name ( Welcome to NY ) , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details | d : document_id , para_count. \\n Question: select t1.paragraph_id, t1.paragraph_text from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id where t2.document_name = 'Welcome to NY'", "answer": ["Show all paragraph ids and texts for the document with name 'Welcome to NY'."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( Asia ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language ( Chinese ) , isofficial , percentage. \\n Question: select distinct t3.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode join city as t3 on t1.code = t3.countrycode where t2.isofficial = 'T' and t2.language = 'Chinese' and t1.continent = \"Asia\"", "answer": ["Return the different names of cities that are in Asia and for which Chinese is the official language."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype ( dog ) , pet_age , weight. \\n Question: select weight from pets order by pet_age limit 1", "answer": ["Find the weight of the youngest dog."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name ( Independence ) , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select name, surfacearea, indepyear from country order by population limit 1", "answer": ["What are the name, independence year, and surface area of the country with the smallest population?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: select t2.name from likes as t1 join highschooler as t2 on t1.student_id = t2.id group by t1.student_id order by count(*) desc limit 1", "answer": ["Give the name of the student with the most likes."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus. \\n Question: select name, location, district from shop order by number_products desc", "answer": ["Return the name, location and district of all shops in descending order of number of products."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select distinct year from cars_data where weight between 3000 and 4000;", "answer": ["What are the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000 ?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region ( Caribbean ) , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language ( Caribbean ) , isofficial , percentage. \\n Question: select sum(surfacearea) from country where region = \"Caribbean\"", "answer": ["What is the total surface area of the countries in the Caribbean region?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id. \\n Question: select section_name from sections order by section_name desc", "answer": ["List the section_name in reversed lexicographical order."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel. \\n Question: select max(share), min(share) from tv_series;", "answer": ["What is the maximum and minimum share for the TV series?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height. \\n Question: select count(distinct nationality) from people", "answer": ["How many distinct nationalities are there?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select t1.continent, count(*) from continents as t1 join countries as t2 on t1.contid = t2.continent join car_makers as t3 on t2.countryid = t3.country group by t1.continent;", "answer": ["What is the name of each continent and how many car makers are there in each one?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( Asia ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select sum(population), max(gnp) from country where continent = \"Asia\"", "answer": ["How many people live in Asia, and what is the largest GNP among them?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight. \\n Question: select count(*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.age > 20", "answer": ["Find number of pets owned by students who are older than 20."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select t1.last_name from owners as t1 join dogs as t2 on t1.owner_id = t2.owner_id where t2.age = ( select max(age) from dogs )", "answer": ["List the last name of the owner owning the youngest dog."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select t1.owner_id, t2.first_name, t2.last_name from dogs as t1 join owners as t2 on t1.owner_id = t2.owner_id group by t1.owner_id order by count(*) desc limit 1", "answer": ["Return the owner id, first name and last name of the owner who has the most dogs."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: select winner_name, loser_name from matches order by minutes desc limit 1", "answer": ["What are the names of the winner and loser who played in the longest match?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance. \\n Question: select year_of_founded from orchestra as t1 join performance as t2 on t1.orchestra_id = t2.orchestra_id group by t2.orchestra_id having count(*) > 1", "answer": ["What are years of founding for orchestras that have had more than a single performance?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( Europe ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select name from country where surfacearea > (select min(surfacearea) from country where continent = \"Europe\")", "answer": ["Which countries have greater area than that of any country in Europe?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname ( france ) , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select count(*) from car_makers as t1 join countries as t2 on t1.country = t2.countryid where t2.countryname = 'france';", "answer": ["How many car makers are there in france?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select t2.countryname from car_makers as t1 join countries as t2 on t1.country = t2.countryid group by t1.country order by count(*) desc limit 1;", "answer": ["What is the name of the country with the most car makers?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select name, surfacearea from country order by surfacearea desc limit 5", "answer": ["What are the names and areas of countries with the top 5 largest area?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | tvshow | tv_channel : id , series_name ( Sky Radio ) , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel. \\n Question: select t2.episode from tv_channel as t1 join tv_series as t2 on t1.id = t2.channel where t1.series_name = \"Sky Radio\";", "answer": ["List the Episode of all  TV series showed on TV Channel with series name \"Sky Radio\"."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode ( A Love of a Lifetime ) , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel. \\n Question: select t1.series_name from tv_channel as t1 join tv_series as t2 on t1.id = t2.channel where t2.episode = \"A love of a Lifetime\";", "answer": ["What is the name of the series that has the episode \"A Love of a Lifetime\"?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format ( DVD , CD ) | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance. \\n Question: select count(*) from orchestra where major_record_format = \"CD\" or major_record_format = \"DVD\"", "answer": ["Find the number of orchestras whose record format is \"CD\" or \"DVD\"."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position. \\n Question: select t1.name, sum(t2.sales) from singer as t1 join song as t2 on t1.singer_id = t2.singer_id group by t1.name", "answer": ["Show the names of singers and the total sales of their songs."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance. \\n Question: select t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id = t2.conductor_id group by t2.conductor_id having count(*) > 1", "answer": ["What are the names of conductors who have conducted at more than one orchestra?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: select t2.name, count(*) from friend as t1 join highschooler as t2 on t1.student_id = t2.id group by t1.student_id", "answer": ["What are the names of the high schoolers and how many friends does each have?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id. \\n Question: select t2.name, t2.location from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014 intersect select t2.name, t2.location from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2015", "answer": ["What are the names and locations of the stadiums that had concerts that occurred in both 2014 and 2015?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select distinct t1.date_arrived, t1.date_departed from dogs as t1 join treatments as t2 on t1.dog_id = t2.dog_id", "answer": ["What are the arriving date and the departing date of the dogs who have gone through a treatment?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select t2.countryname from car_makers as t1 join countries as t2 on t1.country = t2.countryid group by t1.country order by count(*) desc limit 1;", "answer": ["Which of the countries has the most car makers? List the country name."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker ( ford ) , fullname ( Ford Motor Company ) , country | model_list : modelid , maker , model ( ford ) | car_names : makeid , model ( ford ) , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select distinct t1.model from model_list as t1 join car_names as t2 on t1.model = t2.model join cars_data as t3 on t2.makeid = t3.id join car_makers as t4 on t1.maker = t4.id where t3.weight < 3500 and t4.fullname != 'Ford motor Company';", "answer": ["Which models are lighter than 3500 but not built by the 'Ford Motor Company'?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position. \\n Question: select distinct t1.name from singer as t1 join song as t2 on t1.singer_id = t2.singer_id where t2.sales > 300000", "answer": ["Show distinct names of singers that have songs with sales more than 300000."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select min(weight) from cars_data where cylinders = 8 and year = 1974", "answer": ["What is the minimum weight of the car with 8 cylinders produced in 1974 ?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city ( Aberdeen  ) , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport. \\n Question: select count(*) from flights as t1 join airports as t2 on t1.destairport = t2.airportcode where t2.city = \"Aberdeen\"", "answer": ["Return the number of flights arriving in Aberdeen."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details | d : document_id , para_count. \\n Question: select t1.document_id, t2.document_name, count(*) from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id group by t1.document_id", "answer": ["What are the ids and names of each document, as well as the number of paragraphs in each?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: select min(grade) from highschooler where id not in (select t1.student_id from friend as t1 join highschooler as t2 on t1.student_id = t2.id)", "answer": ["What is the lowest grade of students who do not have any friends?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language ( English , Dutch ) , isofficial , percentage. \\n Question: select count(*) from (select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"English\" intersect select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"Dutch\")", "answer": ["What is the number of nations that use English and Dutch?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details | d : document_id , para_count. \\n Question: select document_id, document_name, document_description from documents", "answer": ["List document IDs, document names, and document descriptions for all documents."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( Africa ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform ( Republic ) , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select avg(lifeexpectancy) from country where continent = \"Africa\" and governmentform = \"Republic\"", "answer": ["Give the average life expectancy for countries in Africa which are republics?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name ( Australian Open , WTA Championships ) , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: select t1.country_code, t1.first_name from players as t1 join matches as t2 on t1.player_id = t2.winner_id where t2.tourney_name = 'WTA Championships' intersect select t1.country_code, t1.first_name from players as t1 join matches as t2 on t1.player_id = t2.winner_id where t2.tourney_name = 'Australian Open'", "answer": ["What are the first names and country codes for players who won both the WTA Championships and the Australian Open?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language ( English ) , isofficial , percentage. \\n Question: select distinct countrycode from countrylanguage where language != \"English\"", "answer": ["What are the country codes of countries where people use languages other than English?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id. \\n Question: select count(distinct department_id) from degree_programs", "answer": ["How many different departments offer degrees?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id. \\n Question: select count(*) from courses", "answer": ["How many courses are there?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language ( Chinese ) , isofficial , percentage. \\n Question: select count( distinct continent) from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"Chinese\"", "answer": ["What is the number of distinct continents where Chinese is spoken?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select t2.make, t1.year from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t1.year = (select min(year) from cars_data);", "answer": ["Find the make and production time of the cars that were produced in the earliest year?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker ( volvo ) , fullname ( Volvo ) , country | model_list : modelid , maker , model ( volvo ) | car_names : makeid , model ( volvo ) , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select t1.cylinders from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t2.model = 'volvo' order by t1.accelerate asc limit 1;", "answer": ["For model volvo, how many cylinders does the car with the least accelerate have?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height. \\n Question: select t1.name from people as t1 join poker_player as t2 on t1.people_id = t2.people_id where t2.earnings > 300000", "answer": ["Give the names of poker players who have earnings above 300000."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details | d : document_id , para_count. \\n Question: select document_id from paragraphs group by document_id having count(*) >= 2", "answer": ["What are the ids of documents that have 2 or more paragraphs?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details | d : document_id , para_count. \\n Question: select t1.template_type_code, count(*) from templates as t1 join documents as t2 on t1.template_id = t2.template_id group by t1.template_type_code", "answer": ["What are the different template type codes, and how many documents use each type?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select model from car_names group by model order by count(*) desc limit 1;", "answer": ["Which model has the most version(make) of cars?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select count(*) from cars_data where horsepower > 150;", "answer": ["What is the number of the cars with horsepower more than 150?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode ( ATO ) , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport. \\n Question: select count(*) from flights where destairport = \"ATO\"", "answer": ["Count the number of flights into ATO."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: select count(*) from matches where year = 2013 or year = 2016", "answer": ["List the number of all matches who played in years of 2013 or 2016."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | network_1 | highschooler : id , name ( Kyle ) , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: select count(*) from likes as t1 join highschooler as t2 on t1.student_id = t2.id where t2.name = \"Kyle\"", "answer": ["How many likes does Kyle have?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: select grade from highschooler group by grade order by count(*) desc limit 1", "answer": ["Which grade has the most high schoolers?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance. \\n Question: select name from conductor order by age asc", "answer": ["List the names of conductors in ascending order of age."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id. \\n Question: select song_name, song_release_year from singer order by age limit 1", "answer": ["Show the name and the release year of the song by the youngest singer."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city ( Aberdeen  ) , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport. \\n Question: select t1.flightno from flights as t1 join airports as t2 on t1.sourceairport = t2.airportcode where t2.city = \"Aberdeen\"", "answer": ["What are flight numbers of flights departing from City \"Aberdeen \"?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name ( WTA Championships ) , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: select count(distinct winner_name) from matches where tourney_name = 'WTA Championships' and winner_hand = 'L'", "answer": ["How many different winners both participated in the WTA Championships and were left handed?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code ( AD ) , template_type_description | templates : template_id , version_number , template_type_code ( AD ) , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details | d : document_id , para_count. \\n Question: select template_type_description from ref_template_types where template_type_code = \"AD\"", "answer": ["What is the template type descriptions for template type code \"AD\"."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus. \\n Question: select district from shop where number_products < 3000 intersect select district from shop where number_products > 10000", "answer": ["Which district has both stores with less than 3000 products and stores with more than 10000 products?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id. \\n Question: select count(distinct department_id) from degree_programs", "answer": ["How many departments offer any degree?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select t1.id, t1.maker from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id having count(*) >= 2 intersect select t1.id, t1.maker from car_makers as t1 join model_list as t2 on t1.id = t2.maker join car_names as t3 on t2.model = t3.model group by t1.id having count(*) > 3;", "answer": ["Which are the car makers which produce at least 2 models and more than 3 car makers ? List the id and the maker ."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select count(*) from continents;", "answer": ["How many continents are there?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus. \\n Question: select min(number_products), max(number_products) from shop", "answer": ["What are the minimum and maximum number of products across all the shops?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade. \\n Question: select count(*) from teacher", "answer": ["How many teachers are there?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select t1.cost_of_treatment, t2.treatment_type_description from treatments as t1 join treatment_types as t2 on t1.treatment_type_code = t2.treatment_type_code", "answer": ["List the cost of each treatment and the corresponding treatment type description."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( Europe ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select name from country where surfacearea > (select min(surfacearea) from country where continent = \"Europe\")", "answer": ["What are the countries that have greater surface area than any country in Europe?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | museum_visit | museum : museum_id , name , num_of_staff , open_year | visitor : id , name , level_of_membership , age | visit : museum_id , visitor_id , num_of_ticket , total_spent. \\n Question: select avg(num_of_ticket), max(num_of_ticket) from visit", "answer": ["What are the average and maximum number of tickets bought in all visits?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details | d : document_id , para_count. \\n Question: select t1.document_id, t2.document_name, count(*) from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id group by t1.document_id", "answer": ["Show all document ids, names and the number of paragraphs in each document."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by ( Ben Jones ) , written_by , original_air_date , production_code , channel. \\n Question: select id from tv_channel except select channel from cartoon where directed_by = 'Ben Jones'", "answer": ["What are the ids of the TV channels that do not have any cartoons directed by Ben Jones?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height. \\n Question: select name, birth_date from people order by name asc", "answer": ["What are the names and birth dates of people, ordered by their names in alphabetical order?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language ( Spanish ) , isofficial , percentage. \\n Question: select countrycode, max(percentage) from countrylanguage where language = \"Spanish\" group by countrycode", "answer": ["Return the codes of countries for which Spanish is the predominantly spoken language."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select t1.horsepower from cars_data as t1 order by t1.accelerate desc limit 1;", "answer": ["What is the horsepower of the car with the largest accelerate?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select count(distinct t2.language) from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where indepyear < 1930 and t2.isofficial = \"T\"", "answer": ["For the countries founded before 1930, what is the total number of distinct official languages?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select name from country order by population asc limit 3", "answer": ["What are the names of the nations with the 3 lowest populations?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id. \\n Question: select t1.student_id, t1.first_name, t1.middle_name, t1.last_name, count(*), t1.student_id from students as t1 join student_enrolment as t2 on t1.student_id = t2.student_id group by t1.student_id order by count(*) desc limit 1", "answer": ["What is the first, middle, and last name, along with the id and number of enrollments, for the student who enrolled the most in any program?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: select count(*) from matches", "answer": ["Find the total number of matches."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode ( AHD ) , airportname , country , countryabbrev | flights : airline , flightno , sourceairport (  AHD ) , destairport (  AHD ). \\n Question: select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = \"AHD\"", "answer": ["What are airlines that have some flight departing from airport 'AHD'?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance. \\n Question: select record_company from orchestra order by year_of_founded desc", "answer": ["Return the record companies of orchestras, sorted descending by the years in which they were founded."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: select min(loser_rank) from matches", "answer": ["Find the highest rank of losers in all matches."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | museum_visit | museum : museum_id , name , num_of_staff , open_year | visitor : id , name , level_of_membership , age | visit : museum_id , visitor_id , num_of_ticket , total_spent. \\n Question: select t1.name, t1.age from visitor as t1 join visit as t2 on t1.id = t2.visitor_id order by t2.num_of_ticket desc limit 1", "answer": ["Find the name and age of the visitor who bought the most tickets at once."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | museum_visit | museum : museum_id , name , num_of_staff , open_year | visitor : id , name , level_of_membership , age | visit : museum_id , visitor_id , num_of_ticket , total_spent. \\n Question: select t1.id, t1.name, t1.age from visitor as t1 join visit as t2 on t1.id = t2.visitor_id group by t1.id having count(*) > 1", "answer": ["find the id, name and age for visitors who visited some museums more than once."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: select avg(ranking), t1.first_name from players as t1 join rankings as t2 on t1.player_id = t2.player_id group by t1.first_name", "answer": ["Find the average ranking for each player and their first name."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id. \\n Question: select section_name from sections order by section_name desc", "answer": ["What are the names of the sections in reverse alphabetical order?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created. \\n Question: select t1.area_code from area_code_state as t1 join votes as t2 on t1.state = t2.state group by t1.area_code order by count(*) desc limit 1", "answer": ["What is the area code in which the most voters voted?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance. \\n Question: select t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id = t2.conductor_id group by t2.conductor_id order by count(*) desc limit 1", "answer": ["Show the name of the conductor that has conducted the most number of orchestras."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id. \\n Question: select country from singer where age > 40 intersect select country from singer where age < 30", "answer": ["Show countries where a singer above age 40 and a singer below 30 are from."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: select first_name, country_code from players order by birth_date limit 1", "answer": ["Find the first name and country code of the oldest player."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select t1.fullname, t1.id from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id having count(*) > 3;", "answer": ["Which makers designed more than 3 car models? List full name and the id."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: select grade, count(*) from highschooler group by grade", "answer": ["Show the number of high schoolers for each grade."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id. \\n Question: select country, count(*) from singer group by country", "answer": ["Show all countries and the number of singers in each country."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( Africa ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select count(distinct governmentform) from country where continent = \"Africa\"", "answer": ["How many type of governments are in Africa?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id. \\n Question: select t1.semester_name, t1.semester_id from semesters as t1 join student_enrolment as t2 on t1.semester_id = t2.semester_id group by t1.semester_id order by count(*) desc limit 1", "answer": ["What is the semester which most student registered in? Show both the name and the id."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight. \\n Question: select avg(pet_age), max(pet_age), pettype from pets group by pettype", "answer": ["Find the average and maximum age for each type of pet."], "label": "QA"}
