{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: What are the professional id of the professionals who have done at least two types of treatments? || What is the phone number of the professional who has done the most treatment. \\n Answer:", "answer": ["select t1.professional_id from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count ( * ) > = 2"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id. \\n Question: Can you list the transcript date that appears least often? \\n Answer:", "answer": ["select transcript_date from transcripts group by transcript_date order by count ( * ) asc limit 1"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( Europe ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language ( English ) , isofficial , percentage. \\n Question: Which cities are in European countries where English is not the official language? \\n Answer:", "answer": ["select distinct t2.name from country as t1 join city as t2 on t2.countrycode = t1.code where t1.continent = 'Europe' and t1.name not in (select t3.name from country as t3 join countrylanguage as t4 on t3.code = t4.countrycode where t4.isofficial = 'T' and t4.language = 'English')"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name ( Mirjana ) , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: what is the country code of Mirjana || list out the players first name | how many players are presented on the table \\n Answer:", "answer": ["select country_code from players where first_name = \"Mirjana\""], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: what are the name of high schoolers in grade 9 || which grade has the \nmost high schoolers \\n Answer:", "answer": ["select name from highschooler where grade = 9"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position. \\n Question: yes tell me singers name? || did you mean List the names of all singers | who is the singers name? \\n Answer:", "answer": ["select name from singer"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | world_1 | city : id , name ( Kabul ) , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: Can you tell me the region where the city of Kabul is? || How many cities are there? | What is the total number of countries? \\n Answer:", "answer": ["select region from country as t1 join city as t2 on t1.code = t2.countrycode where t2.name = \"Kabul\""], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id. \\n Question: Which department offers the most number of degrees? List department name and id. \\n Answer:", "answer": ["select t2.department_name, t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id = t2.department_id group by t1.department_id order by count(*) desc limit 1"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name ( Petra ) , last_name ( Kvitova ) , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name ( Petra Kvitova ) , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name ( Petra Kvitova ) , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: based on loser_id || What attributes of the people  with loser_rank_points higher than 3500 would you like to know? | Who has high loser_rank_points higher than 3500 ? | Tell me the total number of matches played by Petra Kvitova... | Tell me the loser_name whose age is 24.626967830300003 \\n Answer:", "answer": ["select distinct loser_id from matches where loser_rank_points > 3500"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name ( Petra ) , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: Yes || Do  you mean \tloser  id | What is the loser id  of petra kvitota? | How many matches played in 2016? | How many matches played in 2013? \\n Answer:", "answer": ["select distinct loser_id from matches where loser_name = \"Petra Kvitova\""], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: Find the names of the 3 youngest winners across all matches \\n Answer:", "answer": ["select distinct winner_name from matches order by winner_age limit 3"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | museum_visit | museum : museum_id , name , num_of_staff , open_year | visitor : id , name , level_of_membership , age | visit : museum_id , visitor_id , num_of_ticket , total_spent. \\n Question: How many museums do you have? \\n Answer:", "answer": ["select count ( * ) from museum"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id. \\n Question: How many stadiums can accommodate more than 1000 people in average.? \\n Answer:", "answer": ["select count ( * ) from stadium where average > 1000"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname ( General Motors ) , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: Which models are manufactured by the maker with the name \"General Motors\"? \\n Answer:", "answer": ["select distinct t2.model from car_names as t1 join model_list as t2 on t1.model = t2.model join car_makers as t3 on t2.maker = t3.id join cars_data as t4 on t1.makeid = t4.id where t3.fullname = 'General Motors'"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name ( Tribal King ) , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id. \\n Question: What was the release year of that song? || What's the name of the song by Tribal King? | What is the name of the youngest singer? \\n Answer:", "answer": ["select song_release_year from singer where name = 'Tribal King'"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id. \\n Question: What is the name of the youngest singer? \\n Answer:", "answer": ["select name from singer order by age limit 1"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: Which nation has the largest surface area? || What are the names of the nations with the 3 lowest populations? \\n Answer:", "answer": ["select name from country order by surfacearea desc limit 1"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: What are the names of the 3 youngest winners across all matches? \\n Answer:", "answer": ["select winner_name from matches order by winner_age limit 3"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel. \\n Question: find id of the tv channels that are from countries with more than two tv channels \\n Answer:", "answer": ["select id from tv_channel where country in ( select country from tv_channel group by country having count ( * ) > 2 )"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured. \\n Question: Show the names of all the battles. \\n Answer:", "answer": ["select name from battle"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: Excellent!  Can you filter this list to show me just the entries for the 5 most recent treatments? || Yes please! | Do you want the ids, first name for all professionals, along with the type codes of the treatment they have done? | Great!  Could you update this list to include both the first names and treatment type codes for each of these professionals IDs? | Hi there! Can you tell me how many different professional IDs are on this list? \\n Answer:", "answer": ["select t1.professional_id, t1.first_name, t3.treatment_type_code from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id join treatment_types as t3 on t2.treatment_type_code = t3.treatment_type_code order by t2.date_of_treatment desc limit 5"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured. \\n Question: What are the ids and names of the battles that led to more than 10 people killed in total. \\n Answer:", "answer": ["select t1.id, t1.name from battle as t1 join ship as t2 on t1.id = t2.lost_in_battle join death as t3 on t2.id = t3.caused_by_ship_id group by t1.id having sum(t3.killed) > 10"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | tvshow | tv_channel : id , series_name ( Sky Music ) , country , language , content ( music ) , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel. \\n Question: IN WHAT LANGUAGE SKY MUSIC AVAILABLE? \\n Answer:", "answer": ["select language from tv_channel where series_name = 'Sky Music'"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport. \\n Question: Excellent!  Can you update this list to include a column with the destination airport code for each of these? || Howdy!  Can you show me a list of all flight numbers? \\n Answer:", "answer": ["select flightno,destairport from flights"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert the problem into an SQL query statement. \\n SQL data (already structured as text): | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype ( cat ) , pet_age , weight. \\n Question: Please find out the last name of the student who has a cat that is age 3. || Hmm, I want to know the last names of students who have cats. | Can you tell me the last names of students who have pets? \\n Answer:", "answer": ["select t1.lname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pet_age = 3 and t3.pettype = 'cat'"], "label": "QA"}
