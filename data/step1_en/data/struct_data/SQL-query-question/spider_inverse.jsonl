{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: select t2.name from friend as t1 join highschooler as t2 on t1.student_id = t2.id where t2.grade > 5 group by t1.student_id having count(*) >= 2", "answer": ["What are the names of high schoolers who have a grade of over 5 and have 2 or more friends?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select max(charge_amount) from charges", "answer": ["What is the charge amount of the most expensive charge type?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select date_arrived, date_departed from dogs", "answer": ["List the arrival date and the departure date for all the dogs."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id. \\n Question: select name, country from singer where song_name like '%hey%'", "answer": ["What is the name and country of origin of every singer who has a song with the word 'Hey' in its title?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select avg(age) from dogs where dog_id in ( select dog_id from treatments )", "answer": ["What is the average age of the dogs who have gone through any treatments?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured. \\n Question: select t1.killed, t1.injured from death as t1 join ship as t2 on t1.caused_by_ship_id = t2.id where t2.tonnage = 't'", "answer": ["What are the death and injury situations caused by the ship with tonnage 't'?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | museum_visit | museum : museum_id , name , num_of_staff , open_year | visitor : id , name , level_of_membership , age | visit : museum_id , visitor_id , num_of_ticket , total_spent. \\n Question: select name from visitor where level_of_membership > 4 order by level_of_membership desc", "answer": ["Find the names of the visitors whose membership level is higher than 4, and order the results by the level from high to low."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | tvshow | tv_channel : id , series_name , country , language ( English ) , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel. \\n Question: select count(*) from tv_channel where language = \"English\";", "answer": ["How many TV Channel using language English?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select name from country order by population desc limit 3", "answer": ["What are names of countries with the top 3 largest population?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select distinct t1.model from model_list as t1 join car_names as t2 on t1.model = t2.model join cars_data as t3 on t2.makeid = t3.id where t3.year > 1980;", "answer": ["What are the different models for the cards produced after 1980?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height. \\n Question: select name from people where people_id not in (select people_id from poker_player)", "answer": ["List the names of people that are not poker players."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id. \\n Question: select distinct country from singer where age > 20", "answer": ["What are all distinct countries where singers above age 20 are from?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select t1.continent, count(*) from continents as t1 join countries as t2 on t1.contid = t2.continent join car_makers as t3 on t2.countryid = t3.country group by t1.continent;", "answer": ["How many car makers are there in each continents? List the continent name and the count."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option ( Option ) | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by ( Ben Jones ) , written_by , original_air_date , production_code , channel. \\n Question: select package_option from tv_channel where id not in (select channel from cartoon where directed_by = 'Ben Jones')", "answer": ["find the package option of the tv channel that do not have any cartoon directed by Ben Jones."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: select grade from highschooler", "answer": ["What is the grade of each high schooler?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform ( US Territory ) , headofstate , capital , code2 ( US ) | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select avg(gnp), sum(population) from country where governmentform = \"US Territory\"", "answer": ["What is the average GNP and total population in all nations whose government is US territory?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours. \\n Question: select count(distinct country_code) from players", "answer": ["How many distinct countries do players come from?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position. \\n Question: select name from singer order by net_worth_millions asc", "answer": ["List the name of singers in ascending order of net worth."], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | museum_visit | museum : museum_id , name , num_of_staff , open_year | visitor : id , name , level_of_membership , age | visit : museum_id , visitor_id , num_of_ticket , total_spent. \\n Question: select sum(t2.total_spent) from visitor as t1 join visit as t2 on t1.id = t2.visitor_id where t1.level_of_membership = 1", "answer": ["What is the total ticket expense of the visitors whose membership level is 1?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | network_1 | highschooler : id , name ( Kyle ) , grade | friend : student_id , friend_id | likes : student_id , liked_id. \\n Question: select grade from highschooler where name = \"Kyle\"", "answer": ["What grade is Kyle in?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id. \\n Question: select line_1, line_2 from addresses", "answer": ["what are all the addresses including line 1 and line 2?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language ( English , Dutch ) , isofficial , percentage. \\n Question: select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"english\" and isofficial = \"t\" union select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"dutch\" and isofficial = \"t\"", "answer": ["What are the countries where either English or Dutch is the official language ?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel. \\n Question: select title, directed_by from cartoon order by original_air_date", "answer": ["What is the name and directors of all the cartoons that are ordered by air date?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title ( The Rise of the Blue Beetle! ) , directed_by , written_by , original_air_date , production_code , channel. \\n Question: select t1.series_name from tv_channel as t1 join cartoon as t2 on t1.id = t2.channel where t2.title = \"The rise of the blue beetle!\";", "answer": ["What is the series name of the TV Channel that shows the cartoon \"The Rise of the Blue Beetle\"?"], "label": "QA"}
{"question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language ( English , French ) , isofficial , percentage. \\n Question: select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"English\" and t2.isofficial = \"T\" intersect select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = \"French\" and t2.isofficial = \"T\"", "answer": ["What are the names of nations where both English and French are official languages?"], "label": "QA"}
