{"instruction": "Based on the structured SQL information below, please convert SQL query statements into natrual language questions.", "question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: select template_type_code from templates group by template_type_code having count(*) < 3", "answer": ["Show all template type codes with less than three templates."], "label": "QA"}
{"instruction": "Based on the structured SQL information below, please convert SQL query statements into natrual language questions.", "question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | cre_Doc_Template_Mgt | ref_template_types : template_type_code , template_type_description | templates : template_id , version_number , template_type_code , date_effective_from , date_effective_to , template_details | documents : document_id , template_id , document_name , document_description , other_details | paragraphs : paragraph_id , document_id , paragraph_text , other_details. \\n Question: select t1.document_id, t2.document_name, count(*) from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id group by t1.document_id", "answer": ["Show all document ids, names and the number of paragraphs in each document."], "label": "QA"}
{"instruction": "Based on the structured SQL information below, please convert SQL query statements into natrual language questions.", "question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name ( Brazil ) , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select population, lifeexpectancy from country where name = \"Brazil\"", "answer": ["Give me Brazilâ€™s population and life expectancies."], "label": "QA"}
{"instruction": "Based on the structured SQL information below, please convert SQL query statements into natrual language questions.", "question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id. \\n Question: select t1.course_name from courses as t1 join student_enrolment_courses as t2 on t1.course_id = t2.course_id group by t1.course_name order by count(*) desc limit 1", "answer": ["What's the name of that course? || How many enrollments does the course with most enrollments have? | What's the name of the course with the least number of enrollments?"], "label": "QA"}
{"instruction": "Based on the structured SQL information below, please convert SQL query statements into natrual language questions.", "question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( Asia ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select t2.language from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.continent = \"Asia\" group by t2.language order by count (*) desc limit 1", "answer": ["Which one is used by the largest number of Asian countries? || What are all the different languages used in the continent of Asia?"], "label": "QA"}
{"instruction": "Based on the structured SQL information below, please convert SQL query statements into natrual language questions.", "question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent ( Europe , Asia ) , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select sum(surfacearea) from country where continent = \"Asia\" or continent = \"Europe\"", "answer": ["What is the total surface area summed up? || What is the surface area of each country? | What are the countries in the continents of Asia or Europe?"], "label": "QA"}
{"instruction": "Based on the structured SQL information below, please convert SQL query statements into natrual language questions.", "question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select mpg, horsepower, accelerate from cars_data where cylinders = 8 or year < 1980;", "answer": ["Also include the cars that have 8 cylinders! || Show me the mpg, horsepower and accelerate for all the cars that were produced before 1980!"], "label": "QA"}
{"instruction": "Based on the structured SQL information below, please convert SQL query statements into natrual language questions.", "question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight. \\n Question: select distinct t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid", "answer": ["What are the different first names? || Which students have pets?"], "label": "QA"}
{"instruction": "Based on the structured SQL information below, please convert SQL query statements into natrual language questions.", "question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title ( The Rise of the Blue Beetle! ) , directed_by , written_by , original_air_date , production_code , channel. \\n Question: select directed_by from cartoon where title = \"The rise of the blue beetle!\"", "answer": ["How about its director? || Tell me the author of the cartoon \"The Rise of the Blue Beetle!\""], "label": "QA"}
{"instruction": "Based on the structured SQL information below, please convert SQL query statements into natrual language questions.", "question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | car_1 | continents : contid , continent | countries : countryid , countryname , continent | car_makers : id , maker , fullname , country | model_list : modelid , maker , model | car_names : makeid , model , make | cars_data : id , mpg , cylinders , edispl , horsepower , weight , accelerate , year. \\n Question: select * from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.weight > (select avg(weight) from cars_data)", "answer": ["List all the car information with weights above this? || What is the average weight of all the cars?"], "label": "QA"}
{"instruction": "Based on the structured SQL information below, please convert SQL query statements into natrual language questions.", "question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage. \\n Question: select * from country group by governmentform having avg(lifeexpectancy) > 72", "answer": ["The countries with which government form have an average life expectancy greater than age 72?"], "label": "QA"}
{"instruction": "Based on the structured SQL information below, please convert SQL query statements into natrual language questions.", "question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform ( Republic ) , headofstate , capital , code2 | countrylanguage : countrycode , language ( English ) , isofficial , percentage. \\n Question: select code from country where governmentform ! = \"Republic\" except select countrycode from countrylanguage where language = \"English\"", "answer": ["Return the codes of countries that do not speak English and do not have Republics for governments."], "label": "QA"}
{"instruction": "Based on the structured SQL information below, please convert SQL query statements into natrual language questions.", "question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select professional_id, role_code, email_address from professionals except select t1.professional_id, t1.role_code, t1.email_address from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id", "answer": ["Which professional did not operate any treatment on dogs? List the professional's id, role and email."], "label": "QA"}
{"instruction": "Based on the structured SQL information below, please convert SQL query statements into natrual language questions.", "question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id. \\n Question: select song_name, song_release_year from singer order by age limit 1", "answer": ["Show the name and the release year of the song by the youngest singer."], "label": "QA"}
{"instruction": "Based on the structured SQL information below, please convert SQL query statements into natrual language questions.", "question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name ( Lettice ) , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured. \\n Question: select t1.name, t1.date from battle as t1 join ship as t2 on t1.id = t2.lost_in_battle where t2.name = 'HMS Atlanta'", "answer": ["Same for 'HMS Atlanta', please. || List the name and date of the battle that has lost the ship named 'Lettice'"], "label": "QA"}
{"instruction": "Based on the structured SQL information below, please convert SQL query statements into natrual language questions.", "question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus. \\n Question: select name from shop where number_products > (select avg(number_products) from shop)", "answer": ["how about more than? || Find the names of stores whose number products is less than the average. | what is the average number of products? | show the name and number of product for all shops."], "label": "QA"}
{"instruction": "Based on the structured SQL information below, please convert SQL query statements into natrual language questions.", "question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade. \\n Question: select * from course_arrange", "answer": ["Find all the course arrangements."], "label": "QA"}
{"instruction": "Based on the structured SQL information below, please convert SQL query statements into natrual language questions.", "question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | museum_visit | museum : museum_id , name , num_of_staff , open_year | visitor : id , name , level_of_membership , age | visit : museum_id , visitor_id , num_of_ticket , total_spent. \\n Question: select t2.visitor_id, t1.name, t1.level_of_membership from visitor as t1 join visit as t2 on t1.id = t2.visitor_id group by t2.visitor_id order by sum(t2.total_spent) desc limit 1", "answer": ["What are the id, name and membership level of visitors who have spent the largest amount of money in total in all museum tickets?"], "label": "QA"}
{"instruction": "Based on the structured SQL information below, please convert SQL query statements into natrual language questions.", "question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode ( A Love of a Lifetime ) , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel. \\n Question: select t1.series_name from tv_channel as t1 join tv_series as t2 on t1.id = t2.channel where t2.episode = \"A love of a Lifetime\"", "answer": ["And What is its TV Channel? || How about its weekly rank? | Tell me the rating of the episode titled \"A Love of a Lifetime\"."], "label": "QA"}
{"instruction": "Based on the structured SQL information below, please convert SQL query statements into natrual language questions.", "question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | museum_visit | museum : museum_id , name , num_of_staff , open_year | visitor : id , name , level_of_membership , age | visit : museum_id , visitor_id , num_of_ticket , total_spent. \\n Question: select t1.id, t1.name, t1.age from visitor as t1 join visit as t2 on t1.id = t2.visitor_id group by t1.id having count(*) > 1", "answer": ["find the id, name and age for visitors who visited some museums more than once."], "label": "QA"}
{"instruction": "Based on the structured SQL information below, please convert SQL query statements into natrual language questions.", "question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport. \\n Question: select airline, abbreviation from airlines", "answer": ["List all airline names and their abbreviations."], "label": "QA"}
{"instruction": "Based on the structured SQL information below, please convert SQL query statements into natrual language questions.", "question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id. \\n Question: select t2.name, t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year >= 2014 group by t2.stadium_id order by count(*) desc", "answer": ["Order the results in descending order of the number of concerts in year 2014 or after. || Show all stadium names and their capacities."], "label": "QA"}
{"instruction": "Based on the structured SQL information below, please convert SQL query statements into natrual language questions.", "question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment. \\n Question: select t1.professional_id, t1.cell_number from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count(*) = 1", "answer": ["Among the results, who did only 1 type of treatment? List the professional ids and cell phone numbers of them. || Add the counts of them also. | List the professional first names and their types of treatments."], "label": "QA"}
{"instruction": "Based on the structured SQL information below, please convert SQL query statements into natrual language questions.", "question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus. \\n Question: select t2.name from hiring as t1 join shop as t2 on t1.shop_id = t2.shop_id", "answer": ["what are the shops' names?' || how many shops are hiring?"], "label": "QA"}
{"instruction": "Based on the structured SQL information below, please convert SQL query statements into natrual language questions.", "question": "Based on the structured SQL information below, please convert SQL query statements into natrual language question. \\n SQL data (already structured as text): | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance. \\n Question: select t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id = t2.conductor_id where year_of_founded > 2008", "answer": ["Who has conducted orchestras founded after 2008? || Please show the names of the conductors."], "label": "QA"}
